{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Toast from 'react-native-toast-message';\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../Redux/Actions/cartActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width;\nvar ProductCard = function ProductCard(props) {\n  var name = props.name,\n    price = props.price,\n    image = props.image,\n    countInStock = props.countInStock;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.image,\n      resizeMode: \"contain\",\n      source: {\n        uri: image ? image : 'https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png'\n      }\n    }), _jsx(View, {\n      style: styles.card\n    }), _jsx(Text, {\n      style: styles.title,\n      children: name.length > 15 ? name.substring(0, 15 - 3) + '...' : name\n    }), _jsxs(Text, {\n      style: styles.price,\n      children: [\"$\", price]\n    }), countInStock > 0 ? _jsx(View, {\n      style: {\n        marginBottom: 60\n      },\n      children: _jsx(EasyButton, {\n        primary: true,\n        medium: true,\n        onPress: function onPress() {\n          props.addItemToCart(props.id), Toast.show({\n            topOffset: 60,\n            type: \"success\",\n            text1: name + \" added to Cart\",\n            text2: \"Go to your cart to complete order\"\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Add\"\n        })\n      })\n    }) : _jsx(Text, {\n      style: {\n        marginTop: 20\n      },\n      children: \"Currently Unavailable\"\n    })]\n  });\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addItemToCart: function addItemToCart(product) {\n      return dispatch(actions.addToCart({\n        quantity: 1,\n        product: product\n      }));\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: width / 2 - 20,\n    height: width / 1.7,\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 55,\n    marginBottom: 5,\n    marginLeft: 10,\n    alignItems: 'center',\n    elevation: 8,\n    backgroundColor: 'white'\n  },\n  image: {\n    width: width / 2 - 20 - 10,\n    height: width / 2 - 20 - 30,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: -45\n  },\n  card: {\n    marginBottom: 10,\n    height: width / 2 - 20 - 90,\n    backgroundColor: 'transparent',\n    width: width / 2 - 20 - 10\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  price: {\n    fontSize: 20,\n    color: 'orange',\n    marginTop: 10\n  }\n});\nexport default connect(null, mapDispatchToProps)(ProductCard);","map":{"version":3,"names":["React","Toast","EasyButton","connect","actions","Dimensions","get","width","ProductCard","props","name","price","image","countInStock","styles","container","uri","card","title","length","substring","marginBottom","addItemToCart","id","show","topOffset","type","text1","text2","color","marginTop","mapDispatchToProps","dispatch","product","addToCart","quantity","StyleSheet","create","height","padding","borderRadius","marginLeft","alignItems","elevation","backgroundColor","position","top","fontWeight","fontSize","textAlign"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/Screens/Products/ProductCard.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    StyleSheet,\r\n    View,\r\n    Dimensions,\r\n    Image,\r\n    Text,\r\n    Button\r\n} from 'react-native'\r\nimport Toast from 'react-native-toast-message'\r\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\"\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../Redux/Actions/cartActions';\r\n\r\nvar { width } = Dimensions.get(\"window\");\r\n\r\nconst ProductCard = (props) => {\r\n    const { name, price, image, countInStock } = props;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image \r\n            style={styles.image}\r\n            resizeMode=\"contain\"\r\n            source={{uri: image ? \r\n                image : 'https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png'}}\r\n            />\r\n            <View style={styles.card}/>\r\n            <Text style={styles.title}>\r\n                {name.length > 15 ? name.substring(0, 15 - 3)\r\n                    + '...' : name\r\n                }\r\n            </Text>\r\n            <Text style={styles.price}>${price}</Text>\r\n\r\n            { countInStock > 0 ? (\r\n                <View style={{ marginBottom: 60 }}>\r\n                    <EasyButton \r\n                    primary\r\n                    medium\r\n                    onPress={() => {\r\n                        props.addItemToCart(props.id),\r\n                        Toast.show({\r\n                            topOffset: 60,\r\n                            type: \"success\",\r\n                            text1: `${name} added to Cart`,\r\n                            text2: \"Go to your cart to complete order\"\r\n                        })\r\n                    }}\r\n                    >\r\n                        <Text style={{ color: \"white\"}}>Add</Text>\r\n                    </EasyButton>\r\n                </View>\r\n            ) : <Text style={{ marginTop: 20 }}>Currently Unavailable</Text>}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addItemToCart: (product) => \r\n            dispatch(actions.addToCart({quantity: 1, product}))\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: width / 2 - 20,\r\n        height: width / 1.7,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        marginTop: 55,\r\n        marginBottom: 5,\r\n        marginLeft: 10,\r\n        alignItems: 'center',\r\n        elevation: 8,\r\n        backgroundColor: 'white'\r\n    },\r\n    image: {\r\n        width: width / 2 - 20 - 10,\r\n        height: width / 2 - 20 - 30,\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        top: -45\r\n    },\r\n    card: {\r\n        marginBottom: 10,\r\n        height: width / 2 - 20 - 90,\r\n        backgroundColor: 'transparent',\r\n        width: width / 2 - 20 - 10\r\n    },\r\n    title: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 14,\r\n        textAlign: 'center'\r\n    },\r\n    price: {\r\n        fontSize: 20,\r\n        color: 'orange',\r\n        marginTop: 10\r\n    }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductCard);"],"mappings":"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"},"metadata":{},"sourceType":"module"}