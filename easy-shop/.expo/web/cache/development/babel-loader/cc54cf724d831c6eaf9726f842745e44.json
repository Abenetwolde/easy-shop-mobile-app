{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListItem = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/ListItem.js';\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _platform = require(\"../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar ListItem = function (_Component) {\n  _inherits(ListItem, _Component);\n  function ListItem() {\n    _classCallCheck(this, ListItem);\n    return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));\n  }\n  _createClass(ListItem, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      if (_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web' || variables.androidRipple === false || !this.props.onPress && !this.props.onLongPress || _reactNative.Platform.Version <= 21) {\n        return _react2.default.createElement(_reactNative.TouchableHighlight, _extends({\n          onPress: this.props.onPress,\n          onLongPress: this.props.onLongPress,\n          ref: function ref(c) {\n            return _this2._root = c;\n          },\n          underlayColor: variables.listBtnUnderlayColor\n        }, this.props, {\n          style: this.props.touchableHighlightStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          }\n        }), _react2.default.createElement(_reactNative.View, _extends({}, this.props, {\n          testID: undefined,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          }\n        }), this.props.children));\n      }\n      return _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        },\n        useForeground: true\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }), _react2.default.createElement(_reactNative.View, {\n        style: {\n          marginLeft: -17,\n          paddingLeft: 17\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }, _react2.default.createElement(_reactNative.View, _extends({}, this.props, {\n        testID: undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }), this.props.children)));\n    }\n  }]);\n  return ListItem;\n}(_react.Component);\nListItem.contextTypes = {\n  theme: _propTypes2.default.object\n};\nListItem.propTypes = _extends({}, _reactNative.TouchableHighlight.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  touchableHighlightStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array]),\n  itemDivider: _propTypes2.default.bool,\n  button: _propTypes2.default.bool\n});\nvar StyledListItem = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.ListItem', {}, _mapPropsToStyleNames2.default)(ListItem);\nexports.ListItem = StyledListItem;","map":{"version":3,"sources":["../../../src/basic/ListItem.js"],"names":["ListItem","Component","contextTypes","theme","PropTypes","object","variables","context","variable","Platform","OS","androidRipple","props","onPress","onLongPress","Version","_root","c","listBtnUnderlayColor","touchableHighlightStyle","undefined","children","marginLeft","paddingLeft","propTypes","TouchableHighlight","style","oneOfType","number","array","itemDivider","bool","button","StyledListItem","mapPropsToStyleNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA;AAMA,IAAA,uBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;AAEA,IAAA,qBAAA,GAAA,OAAA,iCAAA;;AACA,IAAA,SAAA,GAAA,OAAA,+BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEMA,IAAAA,Q;;;;;;;;6BAIK;MAAA,IAAA,MAAA,GAAA,IAAA;MACP,IAAMM,SAAAA,GAAY,IAAA,CAAKC,OAAL,CAAaJ,KAAb,GACd,IAAA,CAAKI,OAAL,CAAaJ,KAAb,CAAmB,4BAAnB,CAAA,CAAiDG,SADnC,GAEdE,UAAAA,CAAAA,OAFJ;MAIA,IACEC,YAAAA,CAAAA,QAAAA,CAASC,EAATD,KAAgB,KAAhBA,IACAA,YAAAA,CAAAA,QAAAA,CAASC,EAATD,KAAgB,KADhBA,IAEAH,SAAAA,CAAUK,aAAVL,KAA4B,KAF5BG,IAGC,CAAC,IAAA,CAAKG,KAAL,CAAWC,OAAZ,IAAuB,CAAC,IAAA,CAAKD,KAAL,CAAWE,WAHpCL,IAIAA,YAAAA,CAAAA,QAAAA,CAASM,OAATN,IAAoB,EALtB,EAME;QACA,OACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,kBAAD,EAAA,QAAA,CAAA;UACE,OAAA,EAAS,IAAA,CAAKG,KAAL,CAAWC,OADtB;UAEE,WAAA,EAAa,IAAA,CAAKD,KAAL,CAAWE,WAF1B;UAGE,GAAA,EAAK,SAAA,GAAA,CAAA,CAAA,EAAA;YAAA,OAAM,MAAA,CAAKE,KAAL,GAAaC,CAAnB;UAAA,CAHP;UAIE,aAAA,EAAeX,SAAAA,CAAUY;QAJ3B,CAAA,EAKM,IAAA,CAAKN,KALX,EAAA;UAME,KAAA,EAAO,IAAA,CAAKA,KAAL,CAAWO,uBANpB;UAAA,QAAA,EAAA;YAAA,QAAA,EAAA,YAAA;YAAA,UAAA,EAAA;UAAA;QAAA,CAAA,CAAA,EAQE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAU,IAAA,CAAKP,KAAf,EAAA;UAAsB,MAAA,EAAQQ,SAA9B;UAAA,QAAA,EAAA;YAAA,QAAA,EAAA,YAAA;YAAA,UAAA,EAAA;UAAA;QAAA,CAAA,CAAA,EACG,IAAA,CAAKR,KAAL,CAAWS,QADd,CARF,CADF;MAcD;MACD,OACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,uBAAD,EAAA,QAAA,CAAA;QACE,GAAA,EAAK,SAAA,GAAA,CAAA,CAAA,EAAA;UAAA,OAAM,MAAA,CAAKL,KAAL,GAAaC,CAAnB;QAAA,CADP;QAEE,aAAA,EAAA;MAFF,CAAA,EAGM,IAAA,CAAKL,KAHX,EAAA;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,CAAA,EAKE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAA;QAAM,KAAA,EAAO;UAAEU,UAAAA,EAAY,CAAC,EAAf;UAAmBC,WAAAA,EAAa;QAAhC,CAAb;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAU,IAAA,CAAKX,KAAf,EAAA;QAAsB,MAAA,EAAQQ,SAA9B;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,CAAA,EACG,IAAA,CAAKR,KAAL,CAAWS,QADd,CADF,CALF,CADF;IAaD;;;EA5CoBpB,MAAAA,CAAAA,S;AAAjBD,Q,CACGE,Y,GAAe;EACpBC,KAAAA,EAAOC,WAAAA,CAAAA,OAAAA,CAAUC;AADG,C;AA8CxBL,QAAAA,CAASwB,SAATxB,GAAAA,QAAAA,CAAAA,CAAAA,CAAAA,EACKyB,YAAAA,CAAAA,kBAAAA,CAAmBD,SADxBxB,EAAAA;EAEE0B,KAAAA,EAAOtB,WAAAA,CAAAA,OAAAA,CAAUuB,SAAVvB,CAAoB,CACzBA,WAAAA,CAAAA,OAAAA,CAAUC,MADe,EAEzBD,WAAAA,CAAAA,OAAAA,CAAUwB,MAFe,EAGzBxB,WAAAA,CAAAA,OAAAA,CAAUyB,KAHe,CAApBzB,CAFTJ;EAOEmB,uBAAAA,EAAyBf,WAAAA,CAAAA,OAAAA,CAAUuB,SAAVvB,CAAoB,CAC3CA,WAAAA,CAAAA,OAAAA,CAAUC,MADiC,EAE3CD,WAAAA,CAAAA,OAAAA,CAAUyB,KAFiC,CAApBzB,CAP3BJ;EAWE8B,WAAAA,EAAa1B,WAAAA,CAAAA,OAAAA,CAAU2B,IAXzB/B;EAYEgC,MAAAA,EAAQ5B,WAAAA,CAAAA,OAAAA,CAAU2B;AAZpB/B,CAAAA,CAAAA;AAeA,IAAMiC,cAAAA,GAAiB,CAAA,CAAA,EAAA,uBAAA,CAAA,YAAA,EACrB,qBADqB,EAErB,CAAA,CAFqB,EAGrBC,sBAAAA,CAAAA,OAHqB,CAAA,CAIrBlC,QAJqB,CAAvB;QAM2BA,Q,GAAlBiC,c","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableHighlight,\n  Platform,\n  TouchableNativeFeedback,\n  View\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\n\nclass ListItem extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    if (\n      Platform.OS === 'ios' ||\n      Platform.OS === 'web' ||\n      variables.androidRipple === false ||\n      (!this.props.onPress && !this.props.onLongPress) ||\n      Platform.Version <= 21\n    ) {\n      return (\n        <TouchableHighlight\n          onPress={this.props.onPress}\n          onLongPress={this.props.onLongPress}\n          ref={c => (this._root = c)}\n          underlayColor={variables.listBtnUnderlayColor}\n          {...this.props}\n          style={this.props.touchableHighlightStyle}\n        >\n          <View {...this.props} testID={undefined}>\n            {this.props.children}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n    return (\n      <TouchableNativeFeedback\n        ref={c => (this._root = c)}\n        useForeground\n        {...this.props}\n      >\n        <View style={{ marginLeft: -17, paddingLeft: 17 }}>\n          <View {...this.props} testID={undefined}>\n            {this.props.children}\n          </View>\n        </View>\n      </TouchableNativeFeedback>\n    );\n  }\n}\n\nListItem.propTypes = {\n  ...TouchableHighlight.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  touchableHighlightStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array\n  ]),\n  itemDivider: PropTypes.bool,\n  button: PropTypes.bool\n};\n\nconst StyledListItem = connectStyle(\n  'NativeBase.ListItem',\n  {},\n  mapPropsToStyleNames\n)(ListItem);\n\nexport { StyledListItem as ListItem };\n"]},"metadata":{},"sourceType":"script"}