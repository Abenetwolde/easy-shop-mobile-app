{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nvar LOLLIPOP = 21;\nvar TouchableItem = function (_React$Component) {\n  _inherits(TouchableItem, _React$Component);\n  var _super = _createSuper(TouchableItem);\n  function TouchableItem() {\n    _classCallCheck(this, TouchableItem);\n    return _super.apply(this, arguments);\n  }\n  _createClass(TouchableItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        style = _this$props.style,\n        pressOpacity = _this$props.pressOpacity,\n        pressColor = _this$props.pressColor,\n        borderless = _this$props.borderless,\n        children = _this$props.children,\n        rest = _objectWithoutProperties(_this$props, [\"style\", \"pressOpacity\", \"pressColor\", \"borderless\", \"children\"]);\n      if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n        return React.createElement(TouchableNativeFeedback, _extends({}, rest, {\n          background: TouchableNativeFeedback.Ripple(pressColor, borderless)\n        }), React.createElement(View, {\n          style: style\n        }, React.Children.only(children)));\n      } else {\n        return React.createElement(TouchableOpacity, _extends({}, rest, {\n          style: style,\n          activeOpacity: pressOpacity\n        }), children);\n      }\n    }\n  }]);\n  return TouchableItem;\n}(React.Component);\nexport { TouchableItem as default };\n_defineProperty(TouchableItem, \"defaultProps\", {\n  pressColor: 'rgba(255, 255, 255, .4)'\n});","map":{"version":3,"sources":["TouchableItem.tsx"],"names":["React","LOLLIPOP","TouchableItem","Component","pressColor","render","style","pressOpacity","borderless","children","rest","props","Platform","OS","Version","TouchableNativeFeedback","Ripple","Children","only"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAsBA,IAAMC,QAAQ,GAAG,EAAjB;AAAA,IAEqBC,aAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAKbG,kBAAS;MACP,IAAA,WAAA,GAOI,IAAA,CAAKM,KAPT;QACEL,KADI,GAAN,WAAA,CACEA,KADI;QAEJC,YAFI,GAAN,WAAA,CAEEA,YAFI;QAGJH,UAHI,GAAN,WAAA,CAGEA,UAHI;QAIJI,UAJI,GAAN,WAAA,CAIEA,UAJI;QAKJC,QAAAA,GALF,WAAA,CAKEA,QAAAA;QACGC,IANL,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,OAAA,EAAA,cAAA,EAAA,YAAA,EAAA,YAAA,EAAA,UAAA,CAAA,CAAA;MASA,IAAIE,QAAQ,CAACC,EAATD,KAAgB,SAAhBA,IAA6BA,QAAQ,CAACE,OAATF,IAAoBX,QAArD,EAA+D;QAC7D,OACE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMS,IADN,EAAA;UAEE,UAAU,EAAEK,uBAAuB,CAACC,MAAxBD,CAA+BX,UAA/BW,EAA2CP,UAA3CO;QAFd,CAAA,CAAA,EAIE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;UAAM,KAAK,EAAET;QAAb,CAAA,EAAqBN,KAAK,CAACiB,QAANjB,CAAekB,IAAflB,CAAoBS,QAApBT,CAArB,CAJF,CADF;MAQD,CATD,MASO;QACL,OACE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAsBU,IAAtB,EAAA;UAA4B,KAAK,EAAEJ,KAAnC;UAA0C,aAAa,EAAEC;QAAzD,CAAA,CAAA,EACGE,QADH,CADF;MAKD;IACF;EAAA;EAAA;AAAA,EA/BwCT,KAAK,CAACG,SAAlC;AAAA,SAAMD,aAAN;gBAAMA,a,kBACG;EACpBE,UAAU,EAAE;AADQ,C","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  View,\n  StyleProp,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\n\ntype Props = ViewProps & {\n  onPress: () => void;\n  onLongPress?: () => void;\n  delayPressIn?: number;\n  borderless?: boolean;\n  pressColor: string;\n  pressOpacity?: number;\n  children?: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst LOLLIPOP = 21;\n\nexport default class TouchableItem extends React.Component<Props> {\n  static defaultProps = {\n    pressColor: 'rgba(255, 255, 255, .4)',\n  };\n\n  render() {\n    const {\n      style,\n      pressOpacity,\n      pressColor,\n      borderless,\n      children,\n      ...rest\n    } = this.props;\n\n    if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\n        >\n          <View style={style}>{React.Children.only(children)}</View>\n        </TouchableNativeFeedback>\n      );\n    } else {\n      return (\n        <TouchableOpacity {...rest} style={style} activeOpacity={pressOpacity}>\n          {children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}