{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nexport default function getActionFromState(state, options) {\n  var _state$index, _normalizedConfig$scr;\n\n  var normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n  var routes = state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n  if (routes.length === 0) {\n    return undefined;\n  }\n  if (!(routes.length === 1 && routes[0].key === undefined || routes.length === 2 && routes[0].key === undefined && routes[0].name === (normalizedConfig === null || normalizedConfig === void 0 ? void 0 : normalizedConfig.initialRouteName) && routes[1].key === undefined)) {\n    return {\n      type: 'RESET',\n      payload: state\n    };\n  }\n  var route = state.routes[(_state$index = state.index) !== null && _state$index !== void 0 ? _state$index : state.routes.length - 1];\n  var current = route === null || route === void 0 ? void 0 : route.state;\n  var config = normalizedConfig === null || normalizedConfig === void 0 ? void 0 : (_normalizedConfig$scr = normalizedConfig.screens) === null || _normalizedConfig$scr === void 0 ? void 0 : _normalizedConfig$scr[route === null || route === void 0 ? void 0 : route.name];\n  var params = _objectSpread({}, route.params);\n  var payload = route ? {\n    name: route.name,\n    params: params\n  } : undefined;\n  while (current) {\n    var _config, _config2, _config2$screens;\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n    var _routes = current.index != null ? current.routes.slice(0, current.index + 1) : current.routes;\n    var _route = _routes[_routes.length - 1];\n\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined\n    });\n    if (_routes.length === 1 && _routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = _route.name;\n    } else if (_routes.length === 2 && _routes[0].key === undefined && _routes[0].name === ((_config = config) === null || _config === void 0 ? void 0 : _config.initialRouteName) && _routes[1].key === undefined) {\n      params.initial = false;\n      params.screen = _route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n    if (_route.state) {\n      params.params = _objectSpread({}, _route.params);\n      params = params.params;\n    } else {\n      params.params = _route.params;\n    }\n    current = _route.state;\n    config = (_config2 = config) === null || _config2 === void 0 ? void 0 : (_config2$screens = _config2.screens) === null || _config2$screens === void 0 ? void 0 : _config2$screens[_route.name];\n  }\n  if (!payload) {\n    return;\n  }\n\n  return {\n    type: 'NAVIGATE',\n    payload: payload\n  };\n}\nvar createNormalizedConfigItem = function createNormalizedConfigItem(config) {\n  return typeof config === 'object' && config != null ? {\n    initialRouteName: config.initialRouteName,\n    screens: config.screens != null ? createNormalizedConfigs(config.screens) : undefined\n  } : {};\n};\nvar createNormalizedConfigs = function createNormalizedConfigs(options) {\n  return Object.entries(options).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      k = _ref2[0],\n      v = _ref2[1];\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n};","map":{"version":3,"sources":["getActionFromState.tsx"],"names":["getActionFromState","state","options","normalizedConfig","createNormalizedConfigItem","routes","index","slice","length","undefined","key","name","initialRouteName","type","payload","route","current","config","screens","params","Object","assign","initial","screen","createNormalizedConfigs","entries","reduce","acc","k","v"],"mappings":"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","sourcesContent":["import type {\n  Route,\n  PartialRoute,\n  ParamListBase,\n  NavigationState,\n  PartialState,\n  CommonActions,\n} from '@react-navigation/routers';\nimport type { PathConfig, PathConfigMap, NavigatorScreenParams } from './types';\n\ntype ConfigItem = {\n  initialRouteName?: string;\n  screens?: Record<string, ConfigItem>;\n};\n\ntype Options = { initialRouteName?: string; screens: PathConfigMap };\n\ntype NavigateAction<State extends NavigationState> = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: NavigatorScreenParams<State>;\n  };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>,\n  options?: Options\n): NavigateAction<NavigationState> | CommonActions.Action | undefined {\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n\n  const routes =\n    state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  if (\n    !(\n      (routes.length === 1 && routes[0].key === undefined) ||\n      (routes.length === 2 &&\n        routes[0].key === undefined &&\n        routes[0].name === normalizedConfig?.initialRouteName &&\n        routes[1].key === undefined)\n    )\n  ) {\n    return {\n      type: 'RESET',\n      payload: state,\n    };\n  }\n\n  const route = state.routes[state.index ?? state.routes.length - 1];\n\n  let current: PartialState<NavigationState> | undefined = route?.state;\n  let config: ConfigItem | undefined = normalizedConfig?.screens?.[route?.name];\n  let params = { ...route.params } as NavigatorScreenParams<\n    ParamListBase,\n    NavigationState\n  >;\n\n  let payload = route ? { name: route.name, params } : undefined;\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    const routes =\n      current.index != null\n        ? current.routes.slice(0, current.index + 1)\n        : current.routes;\n\n    const route: Route<string> | PartialRoute<Route<string>> =\n      routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined,\n    });\n\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (\n      routes.length === 2 &&\n      routes[0].key === undefined &&\n      routes[0].name === config?.initialRouteName &&\n      routes[1].key === undefined\n    ) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params as NavigatorScreenParams<\n        ParamListBase,\n        NavigationState\n      >;\n    } else {\n      params.params = route.params;\n    }\n\n    current = route.state;\n    config = config?.screens?.[route.name];\n  }\n\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n\nconst createNormalizedConfigItem = (config: PathConfig | string) =>\n  typeof config === 'object' && config != null\n    ? {\n        initialRouteName: config.initialRouteName,\n        screens:\n          config.screens != null\n            ? createNormalizedConfigs(config.screens)\n            : undefined,\n      }\n    : {};\n\nconst createNormalizedConfigs = (options: PathConfigMap) =>\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n"]},"metadata":{},"sourceType":"module"}