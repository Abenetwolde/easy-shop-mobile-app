{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { createAnimatedSet as set } from \"../core/AnimatedSet\";\nimport _interpolate from \"../derived/interpolate\";\nimport InternalAnimatedValue from \"./InternalAnimatedValue\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { evaluateOnce } from \"../derived/evaluateOnce\";\nimport ReanimatedModule from \"../ReanimatedModule\";\nimport { val } from \"../val\";\nvar AnimatedValue = function (_InternalAnimatedValu) {\n  _inherits(AnimatedValue, _InternalAnimatedValu);\n  var _super = _createSuper(AnimatedValue);\n  function AnimatedValue() {\n    _classCallCheck(this, AnimatedValue);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AnimatedValue, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.__detachAnimation(this._animation);\n      if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos') {\n        this._updateValue(val(value));\n      } else {\n        if (ReanimatedModule.setValue && typeof value === 'number') {\n          ReanimatedModule.setValue(this.__nodeID, value);\n        } else {\n          evaluateOnce(set(this, value), this);\n        }\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedValue, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return _interpolate(this, config);\n    }\n  }]);\n  return AnimatedValue;\n}(InternalAnimatedValue);\nexport { AnimatedValue as default };","map":{"version":3,"sources":["AnimatedValue.js"],"names":["createAnimatedSet","set","interpolate","InternalAnimatedValue","evaluateOnce","ReanimatedModule","val","AnimatedValue","setValue","value","__detachAnimation","_animation","Platform","OS","_updateValue","__nodeID","toString","config"],"mappings":";;;;;;;AAAA,SAASA,iBAAiB,IAAIC,GAA9B;AACA,OAAOC,YAAP;AACA,OAAOC,qBAAP;AAAA;AAEA,SAASC,YAAT;AACA,OAAOC,gBAAP;AACA,SAASC,GAAT;AAEA,IACqBC,aAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACbC,kBAASC,KAAD,EAAQ;MACd,IAAA,CAAKC,iBAAL,CAAuB,IAAA,CAAKC,UAA5B,CAAA;MACA,IAAIC,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,IAAyBA,QAAQ,CAACC,EAATD,KAAgB,SAAzCA,IAAsDA,QAAQ,CAACC,EAATD,KAAgB,OAA1E,EAAmF;QACjF,IAAA,CAAKE,YAAL,CAAkBR,GAAG,CAACG,KAAD,CAArB,CAAA;MACD,CAFD,MAEO;QACL,IAAIJ,gBAAgB,CAACG,QAAjBH,IAA6B,OAAOI,KAAP,KAAiB,QAAlD,EAA4D;UAI1DJ,gBAAgB,CAACG,QAAjBH,CAA0B,IAAA,CAAKU,QAA/BV,EAAyCI,KAAzCJ,CAAAA;QACD,CALD,MAKO;UACLD,YAAY,CAACH,GAAG,CAAC,IAAD,EAAOQ,KAAP,CAAJ,EAAmB,IAAnB,CAAZL;QACD;MACF;IACF;EAAA;IAAA;IAAA,OAEDY,oBAAW;MACT,OAAA,qBAAA,CAAA,MAAA,CAA6B,IAAA,CAAKD,QAAlC,CAAA;IACD;EAAA;IAAA;IAAA,OAEDb,qBAAYe,MAAD,EAAS;MAClB,OAAOf,YAAW,CAAC,IAAD,EAAOe,MAAP,CAAlB;IACD;EAAA;EAAA;AAAA,EAvBwCd,qBAA5B;AAAA,SAAMI,aAAN","sourcesContent":["import { createAnimatedSet as set } from '../core/AnimatedSet';\nimport interpolate from '../derived/interpolate';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nimport { Platform } from 'react-native';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport ReanimatedModule from '../ReanimatedModule';\nimport { val } from '../val';\n\n// Animated value wrapped with extra methods for omit cycle of dependencies\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos') {\n      this._updateValue(val(value));\n    } else {\n      if (ReanimatedModule.setValue && typeof value === 'number') {\n        // FIXME Remove it after some time\n        // For OTA-safety\n        // FIXME handle setting value with a node\n        ReanimatedModule.setValue(this.__nodeID, value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }\n\n  toString() {\n    return `AnimatedValue, id: ${this.__nodeID}`;\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}