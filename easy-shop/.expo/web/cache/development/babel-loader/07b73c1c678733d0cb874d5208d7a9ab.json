{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function useIsKeyboardShown() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isKeyboardShown = _React$useState2[0],\n    setIsKeyboardShown = _React$useState2[1];\n  React.useEffect(function () {\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setIsKeyboardShown(true);\n    };\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return setIsKeyboardShown(false);\n    };\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n    return function () {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["React","useIsKeyboardShown","isKeyboardShown","setIsKeyboardShown","useState","useEffect","handleKeyboardShow","handleKeyboardHide","Platform","OS","Keyboard","addListener","removeListener"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAGA,eAAe,SAASC,kBAAT,GAA8B;EAC3C,sBAA8CD,KAAK,CAACI,QAANJ,CAAe,KAAfA,CAA9C;IAAA;IAAOE,eAAD;IAAkBC,kBAAlB;EAENH,KAAK,CAACK,SAANL,CAAgB,YAAM;IACpB,IAAMM,kBAAkB,GAAG,SAArBA,kBAAkB;MAAA,OAASH,kBAAkB,CAAC,IAAD,CAAnD;IAAA;IACA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAkB;MAAA,OAASJ,kBAAkB,CAAC,KAAD,CAAnD;IAAA;IAEA,IAAIK,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;MACzBE,QAAQ,CAACC,WAATD,CAAqB,kBAArBA,EAAyCJ,kBAAzCI,CAAAA;MACAA,QAAQ,CAACC,WAATD,CAAqB,kBAArBA,EAAyCH,kBAAzCG,CAAAA;IACD,CAHD,MAGO;MACLA,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,EAAwCJ,kBAAxCI,CAAAA;MACAA,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,EAAwCH,kBAAxCG,CAAAA;IACD;IAED,OAAO,YAAM;MACX,IAAIF,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;QACzBE,QAAQ,CAACE,cAATF,CAAwB,kBAAxBA,EAA4CJ,kBAA5CI,CAAAA;QACAA,QAAQ,CAACE,cAATF,CAAwB,kBAAxBA,EAA4CH,kBAA5CG,CAAAA;MACD,CAHD,MAGO;QACLA,QAAQ,CAACE,cAATF,CAAwB,iBAAxBA,EAA2CJ,kBAA3CI,CAAAA;QACAA,QAAQ,CAACE,cAATF,CAAwB,iBAAxBA,EAA2CH,kBAA3CG,CAAAA;MACD;IACF,CARD;EASD,CArBDV,EAqBG,EArBHA,CAAAA;EAuBA,OAAOE,eAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module"}