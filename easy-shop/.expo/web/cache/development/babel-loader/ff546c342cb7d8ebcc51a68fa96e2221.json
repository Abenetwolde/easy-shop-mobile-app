{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollableTab = undefined;\nvar _jsxFileName = 'src/basic/Tabs/ScrollableTabBar.js';\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _createReactClass = require('create-react-class');\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\nvar _lodash = require('lodash');\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _platform = require(\"./../../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _TabHeading = require(\"../TabHeading\");\nvar _Text = require(\"../Text\");\nvar _TabContainer = require(\"../TabContainer\");\nvar _utils = require(\"../../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar Button = require(\"./Button\");\nvar ReactNative = require(\"react-native-web/dist/index\");\nvar View = ReactNative.View,\n  Animated = ReactNative.Animated,\n  StyleSheet = ReactNative.StyleSheet,\n  ScrollView = ReactNative.ScrollView,\n  Platform = ReactNative.Platform,\n  Dimensions = ReactNative.Dimensions;\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nvar ScrollableTabBar = (0, _createReactClass2.default)({\n  displayName: 'ScrollableTabBar',\n  propTypes: {\n    goToPage: _propTypes2.default.func,\n    activeTab: _propTypes2.default.number,\n    tabs: _propTypes2.default.array,\n    backgroundColor: _propTypes2.default.string,\n    activeTextColor: _propTypes2.default.string,\n    inactiveTextColor: _propTypes2.default.string,\n    scrollOffset: _propTypes2.default.number,\n    style: _utils.ViewPropTypes.style,\n    tabStyle: _utils.ViewPropTypes.style,\n    tabsContainerStyle: _utils.ViewPropTypes.style,\n    renderTab: _propTypes2.default.func,\n    underlineStyle: _utils.ViewPropTypes.style,\n    onScroll: _propTypes2.default.func\n  },\n  contextTypes: {\n    theme: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: _platform2.default.tabDefaultBg,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n      tabFontSize: _platform2.default.tabFontSize\n    };\n  },\n  getInitialState: function getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n  updateView: function updateView(offset) {\n    var position = Math.floor(offset.value);\n    var pageOffset = offset.value % 1;\n    var tabCount = this.props.tabs.length;\n    var lastTabPosition = tabCount - 1;\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n  necessarilyMeasurementsCompleted: function necessarilyMeasurementsCompleted(position, isLastTab) {\n    return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;\n  },\n  updateTabPanel: function updateTabPanel(position, pageOffset) {\n    var containerWidth = this._containerMeasurements.width;\n    var tabWidth = this._tabsMeasurements[position].width;\n    var nextTabMeasurements = this._tabsMeasurements[position + 1];\n    var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n    var tabOffset = this._tabsMeasurements[position].left;\n    var absolutePageOffset = pageOffset * tabWidth;\n    var newScrollX = tabOffset + absolutePageOffset;\n    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({\n        x: newScrollX,\n        y: 0,\n        animated: false\n      });\n    } else {\n      var rightBoundScroll = this._tabContainerMeasurements.width - this._containerMeasurements.width;\n      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({\n        x: newScrollX,\n        y: 0,\n        animated: false\n      });\n    }\n  },\n  updateTabUnderline: function updateTabUnderline(position, pageOffset, tabCount) {\n    var lineLeft = this._tabsMeasurements[position].left;\n    var lineRight = this._tabsMeasurements[position].right;\n    if (position < tabCount - 1) {\n      var nextTabLeft = this._tabsMeasurements[position + 1].left;\n      var nextTabRight = this._tabsMeasurements[position + 1].right;\n      var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle, tabFontSize) {\n    var headerContent = typeof name !== 'string' ? name.props.children : undefined;\n    var _props = this.props,\n      activeTextColor = _props.activeTextColor,\n      inactiveTextColor = _props.inactiveTextColor;\n    var textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    var fontWeight = isTabActive ? 'bold' : 'normal';\n    if (typeof name === 'string') {\n      return _react2.default.createElement(Button, {\n        key: name + '_' + page,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        onLayout: onLayoutHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        scrollable: true,\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        style: [isTabActive ? activeTextStyle : textStyle, {\n          fontSize: tabFontSize\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        }\n      }, name)));\n    }\n    return _react2.default.createElement(Button, {\n      key: name + '_' + page,\n      onPress: function onPress() {\n        return onPressHandler(page);\n      },\n      onLayout: onLayoutHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      }\n    }, _react2.default.createElement(_TabHeading.TabHeading, {\n      scrollable: true,\n      style: tabHeaderStyle,\n      active: isTabActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      }\n    }, headerContent));\n  },\n  measureTab: function measureTab(page, event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      x = _event$nativeEvent$la.x,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    this._tabsMeasurements[page] = {\n      left: x,\n      right: x + width,\n      width: width,\n      height: height\n    };\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  },\n  render: function render() {\n    var _this = this;\n    var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n    return _react2.default.createElement(View, {\n      style: [styles.container, {\n        backgroundColor: this.props.backgroundColor\n      }, this.props.style],\n      onLayout: this.onContainerLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      }\n    }, _react2.default.createElement(ScrollView, {\n      automaticallyAdjustContentInsets: false,\n      ref: function ref(scrollView) {\n        _this._scrollView = scrollView;\n      },\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      directionalLockEnabled: true,\n      onScroll: this.props.onScroll,\n      bounces: false,\n      scrollsToTop: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      }\n    }, _react2.default.createElement(View, {\n      style: [styles.tabs, {\n        width: this.state._containerWidth\n      }, this.props.tabsContainerStyle],\n      ref: 'tabContainer',\n      onLayout: this.onTabContainerLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.measureTab.bind(_this, page), _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page], variables.tabFontSize);\n    }), _react2.default.createElement(Animated.View, {\n      style: [tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      }\n    }))));\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!(0, _lodash.isEqual)(this.props.tabs, nextProps.tabs) && this.state._containerWidth) {\n      this.setState({\n        _containerWidth: null\n      });\n    }\n  },\n  onTabContainerLayout: function onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    var width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({\n      _containerWidth: width\n    });\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  },\n  onContainerLayout: function onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.ScrollableTab', {}, _mapPropsToStyleNames2.default)(ScrollableTabBar);\nexports.ScrollableTab = StyledTab;\nvar styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});","map":{"version":3,"sources":["../../../../src/basic/Tabs/ScrollableTabBar.js"],"names":["Button","require","View","Animated","StyleSheet","ScrollView","Platform","Dimensions","ReactNative","WINDOW_WIDTH","get","width","ScrollableTabBar","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","ViewPropTypes","tabStyle","tabsContainerStyle","renderTab","underlineStyle","onScroll","contextTypes","theme","object","getDefaultProps","variable","tabDefaultBg","tabFontSize","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","children","undefined","textColor","fontWeight","fontSize","measureTab","event","height","nativeEvent","layout","_value","render","variables","context","tabUnderlineStyle","topTabBarActiveBorderColor","bottom","dynamicTabUnderline","styles","container","onContainerLayout","scrollView","onTabContainerLayout","map","bind","UNSAFE_componentWillReceiveProps","nextProps","setState","e","StyledTab","mapPropsToStyleNames","ScrollableTab","create","tab","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport { isEqual } from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nimport { ViewPropTypes } from '../../utils';\nconst Button = require('./Button');\nconst ReactNative = require('react-native');\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Platform,\n  Dimensions\n} = ReactNative;\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\nconst ScrollableTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    scrollOffset: PropTypes.number,\n    style: ViewPropTypes.style,\n    tabStyle: ViewPropTypes.style,\n    tabsContainerStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    onScroll: PropTypes.func\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: variable.tabDefaultBg,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (\n      this.necessarilyMeasurementsCompleted(\n        position,\n        position === lastTabPosition\n      )\n    ) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return (\n      this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements\n    );\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth =\n      (nextTabMeasurements && nextTabMeasurements.width) || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -=\n      (containerWidth -\n        (1 - pageOffset) * tabWidth -\n        pageOffset * nextTabWidth) /\n      2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    } else {\n      const rightBoundScroll =\n        this._tabContainerMeasurements.width -\n        this._containerMeasurements.width;\n      newScrollX =\n        newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    }\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft =\n        pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      const newLineRight =\n        pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    onLayoutHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n\n    if (typeof name === 'string') {\n      return (\n        <Button\n          key={`${name}_${page}`}\n          onPress={() => onPressHandler(page)}\n          onLayout={onLayoutHandler}\n        >\n          <TabHeading\n            scrollable\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                isTabActive ? activeTextStyle : textStyle,\n                { fontSize: tabFontSize }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        key={`${name}_${page}`}\n        onPress={() => onPressHandler(page)}\n        onLayout={onLayoutHandler}\n      >\n        <TabHeading scrollable style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n    \n  },\n\n  measureTab(page, event) {\n    const { x, width, height } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = { left: x, right: x + width, width, height };\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: this.props.backgroundColor },\n          this.props.style\n        ]}\n        onLayout={this.onContainerLayout}\n      >\n        <ScrollView\n          automaticallyAdjustContentInsets={false}\n          ref={scrollView => {\n            this._scrollView = scrollView;\n          }}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          directionalLockEnabled\n          onScroll={this.props.onScroll}\n          bounces={false}\n          scrollsToTop={false}\n        >\n          <View\n            style={[\n              styles.tabs,\n              { width: this.state._containerWidth },\n              this.props.tabsContainerStyle\n            ]}\n            ref={'tabContainer'}\n            onLayout={this.onTabContainerLayout}\n          >\n            {this.props.tabs.map((name, page) => {\n              const isTabActive = this.props.activeTab === page;\n              const renderTab = this.props.renderTab || this.renderTab;\n              return renderTab(\n                name,\n                page,\n                isTabActive,\n                this.props.goToPage,\n                this.measureTab.bind(this, page),\n                this.props.tabStyle[page],\n                this.props.activeTabStyle[page],\n                this.props.textStyle[page],\n                this.props.activeTextStyle[page],\n                this.props.tabHeaderStyle[page],\n                variables.tabFontSize\n              );\n            })}\n            <Animated.View\n              style={[\n                tabUnderlineStyle,\n                dynamicTabUnderline,\n                this.props.underlineStyle\n              ]}\n            />\n          </View>\n        </ScrollView>\n      </View>\n    );\n  },\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (\n      !isEqual(this.props.tabs, nextProps.tabs) &&\n      this.state._containerWidth\n    ) {\n      this.setState({ _containerWidth: null });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width });\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({ value: this.props.scrollValue._value });\n  }\n});\n\n// module.exports = ScrollableTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.ScrollableTab',\n  {},\n  mapPropsToStyleNames\n)(ScrollableTabBar);\nexport { StyledTab as ScrollableTab };\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});\n"]},"metadata":{},"sourceType":"script"}