{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToastContainer = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/ToastContainer.js';\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _commonColor = require(\"../theme/variables/commonColor\");\nvar _Text = require(\"./Text\");\nvar _Button = require(\"./Button\");\nvar _Toast = require(\"./Toast\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top'\n};\nvar ToastContainer = function (_Component) {\n  _inherits(ToastContainer, _Component);\n  _createClass(ToastContainer, null, [{\n    key: 'show',\n    value: function show(_ref) {\n      var config = _objectWithoutProperties(_ref, []);\n      this.toastInstance._root.showToast({\n        config: config\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      if (this.toastInstance._root.getModalState()) {\n        this.toastInstance._root.closeToast('functionCall');\n      }\n    }\n  }]);\n  function ToastContainer(props) {\n    _classCallCheck(this, ToastContainer);\n    var _this = _possibleConstructorReturn(this, (ToastContainer.__proto__ || Object.getPrototypeOf(ToastContainer)).call(this, props));\n    _this.closeModal = function (reason) {\n      _this.setState({\n        modalVisible: false\n      });\n      var onClose = _this.state.onClose;\n      if (onClose && typeof onClose === 'function') {\n        onClose(reason);\n      }\n    };\n    _this.state = {\n      fadeAnim: new _reactNative.Animated.Value(0),\n      pan: new _reactNative.Animated.ValueXY({\n        x: 0,\n        y: 0\n      }),\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n      modalVisible: false\n    };\n    _this.keyboardDidHide = _this.keyboardDidHide.bind(_this);\n    _this.keyboardDidShow = _this.keyboardDidShow.bind(_this);\n    _this._panResponder = _reactNative.PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, _ref2) {\n        var dx = _ref2.dx;\n        if (dx !== 0) {\n          _reactNative.Animated.timing(_this.state.pan, {\n            toValue: {\n              x: dx,\n              y: 0\n            },\n            duration: 100\n          }).start(function () {\n            return _this.closeToast('swipe');\n          });\n        }\n      }\n    });\n    return _this;\n  }\n  _createClass(ToastContainer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      _reactNative.Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n      _reactNative.Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n    }\n  }, {\n    key: 'getToastStyle',\n    value: function getToastStyle() {\n      return {\n        position: POSITION.ABSOLUTE,\n        opacity: this.state.fadeAnim,\n        width: '100%',\n        elevation: 9,\n        paddingHorizontal: _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 20 : 0,\n        top: this.state.position === POSITION.TOP ? 30 : undefined,\n        bottom: this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\n      };\n    }\n  }, {\n    key: 'getTop',\n    value: function getTop() {\n      if (_reactNative.Platform.OS === _commonColor.PLATFORM.IOS) {\n        if (this.state.isKeyboardVisible) {\n          return this.state.keyboardHeight;\n        }\n        return 30;\n      }\n      return 0;\n    }\n  }, {\n    key: 'getButtonText',\n    value: function getButtonText(buttonText) {\n      if (buttonText) {\n        if (buttonText.trim().length === 0) {\n          return undefined;\n        }\n        return buttonText;\n      }\n      return undefined;\n    }\n  }, {\n    key: 'getModalState',\n    value: function getModalState() {\n      return this.state.modalVisible;\n    }\n  }, {\n    key: 'keyboardDidHide',\n    value: function keyboardDidHide() {\n      this.setState({\n        keyboardHeight: 0,\n        isKeyboardVisible: false\n      });\n    }\n  }, {\n    key: 'keyboardDidShow',\n    value: function keyboardDidShow(e) {\n      this.setState({\n        keyboardHeight: e.endCoordinates.height,\n        isKeyboardVisible: true\n      });\n    }\n  }, {\n    key: 'showToast',\n    value: function showToast(_ref3) {\n      var config = _ref3.config;\n      this.setState({\n        modalVisible: true,\n        text: config.text,\n        buttonText: this.getButtonText(config.buttonText),\n        type: config.type,\n        position: config.position ? config.position : POSITION.BOTTOM,\n        supportedOrientations: config.supportedOrientations,\n        style: config.style,\n        buttonTextStyle: config.buttonTextStyle,\n        buttonStyle: config.buttonStyle,\n        textStyle: config.textStyle,\n        onClose: config.onClose\n      });\n      if (this.closeTimeout) {\n        clearTimeout(this.closeTimeout);\n      }\n      if (config.duration !== 0) {\n        var duration = config.duration > 0 ? config.duration : 1500;\n        this.closeTimeout = setTimeout(this.closeToast.bind(this, 'timeout'), duration);\n      }\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: false\n      }).start();\n    }\n  }, {\n    key: 'closeToast',\n    value: function closeToast(reason) {\n      var _this2 = this;\n      clearTimeout(this.closeTimeout);\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: false\n      }).start(function () {\n        _this2.closeModal(reason);\n        _this2.state.pan.setValue({\n          x: 0,\n          y: 0\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n      if (this.state.modalVisible) {\n        var _state$pan = this.state.pan,\n          x = _state$pan.x,\n          y = _state$pan.y;\n        return _react2.default.createElement(_reactNative.Animated.View, _extends({}, this._panResponder.panHandlers, {\n          style: [this.getToastStyle(), {\n            transform: [{\n              translateX: x\n            }, {\n              translateY: y\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          }\n        }), _react2.default.createElement(_Toast.Toast, {\n          style: [this.state.style],\n          danger: this.state.type === 'danger',\n          success: this.state.type === 'success',\n          warning: this.state.type === 'warning',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          }\n        }, _react2.default.createElement(_Text.Text, {\n          style: this.state.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          }\n        }, this.state.text), this.state.buttonText && _react2.default.createElement(_Button.Button, {\n          style: this.state.buttonStyle,\n          onPress: function onPress() {\n            return _this3.closeToast('user');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          }\n        }, _react2.default.createElement(_Text.Text, {\n          style: this.state.buttonTextStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, this.state.buttonText))));\n      }\n      return null;\n    }\n  }]);\n  return ToastContainer;\n}(_react.Component);\nToastContainer.propTypes = _extends({}, _reactNative.ViewPropTypes);\nvar StyledToastContainer = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.ToastContainer', {}, _mapPropsToStyleNames2.default)(ToastContainer);\nexports.ToastContainer = StyledToastContainer;","map":{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["POSITION","ABSOLUTE","BOTTOM","TOP","ToastContainer","Component","config","toastInstance","_root","showToast","getModalState","closeToast","props","state","fadeAnim","Animated","Value","pan","ValueXY","x","y","keyboardHeight","isKeyboardVisible","modalVisible","keyboardDidHide","bind","keyboardDidShow","_panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderRelease","evt","dx","timing","toValue","duration","start","Keyboard","addListener","position","opacity","width","elevation","paddingHorizontal","Platform","OS","PLATFORM","IOS","top","undefined","bottom","getTop","buttonText","trim","length","setState","e","endCoordinates","height","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","onClose","closeTimeout","clearTimeout","setTimeout","useNativeDriver","closeModal","reason","setValue","panHandlers","getToastStyle","transform","translateX","translateY","propTypes","ViewPropTypes","StyledToastContainer","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react';\nimport {\n  Keyboard,\n  Platform,\n  Animated,\n  ViewPropTypes,\n  PanResponder\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport { PLATFORM } from '../theme/variables/commonColor';\n\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { Toast } from './Toast';\n\nconst POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top'\n};\n\nclass ToastContainer extends Component {\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  static hide() {\n    if (this.toastInstance._root.getModalState()) {\n      this.toastInstance._root.closeToast('functionCall');\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fadeAnim: new Animated.Value(0),\n      pan: new Animated.ValueXY({ x: 0, y: 0 }),\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n      modalVisible: false\n    };\n\n    this.keyboardDidHide = this.keyboardDidHide.bind(this);\n    this.keyboardDidShow = this.keyboardDidShow.bind(this);\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderRelease: (evt, { dx }) => {\n        if (dx !== 0) {\n          Animated.timing(this.state.pan, {\n            toValue: { x: dx, y: 0 },\n            duration: 100\n          }).start(() => this.closeToast('swipe'));\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n    Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n  }\n\n  getToastStyle() {\n    return {\n      position: POSITION.ABSOLUTE,\n      opacity: this.state.fadeAnim,\n      width: '100%',\n      elevation: 9,\n      paddingHorizontal: Platform.OS === PLATFORM.IOS ? 20 : 0,\n      top: this.state.position === POSITION.TOP ? 30 : undefined,\n      bottom:\n        this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\n    };\n  }\n\n  getTop() {\n    if (Platform.OS === PLATFORM.IOS) {\n      if (this.state.isKeyboardVisible) {\n        return this.state.keyboardHeight;\n      }\n      return 30;\n    }\n    return 0;\n  }\n\n  getButtonText(buttonText) {\n    if (buttonText) {\n      if (buttonText.trim().length === 0) {\n        return undefined;\n      }\n      return buttonText;\n    }\n    return undefined;\n  }\n  getModalState() {\n    return this.state.modalVisible;\n  }\n\n  static toastInstance;\n\n  keyboardDidHide() {\n    this.setState({\n      keyboardHeight: 0,\n      isKeyboardVisible: false\n    });\n  }\n\n  keyboardDidShow(e) {\n    this.setState({\n      keyboardHeight: e.endCoordinates.height,\n      isKeyboardVisible: true\n    });\n  }\n\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: this.getButtonText(config.buttonText),\n      type: config.type,\n      position: config.position ? config.position : POSITION.BOTTOM,\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle,\n      onClose: config.onClose\n    });\n    // If we have a toast already open, cut off its close timeout so that it won't affect *this* toast.\n    if (this.closeTimeout) {\n      clearTimeout(this.closeTimeout);\n    }\n    // Set the toast to close after the duration.\n    if (config.duration !== 0) {\n      const duration = config.duration > 0 ? config.duration : 1500;\n      this.closeTimeout = setTimeout(\n        this.closeToast.bind(this, 'timeout'),\n        duration\n      );\n    }\n    // Fade the toast in now.\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: false\n    }).start();\n  }\n  closeModal = (reason) => {\n    this.setState({\n      modalVisible: false\n    });\n    const { onClose } = this.state;\n    if (onClose && typeof onClose === 'function') {\n      onClose(reason);\n    }\n  }\n  closeToast(reason) {\n    clearTimeout(this.closeTimeout);\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: false\n    }).start(() => {\n      this.closeModal(reason);\n      this.state.pan.setValue({ x: 0, y: 0 });\n    });\n  }\n\n  render() {\n    if (this.state.modalVisible) {\n      const { x, y } = this.state.pan;\n      return (\n        <Animated.View\n          {...this._panResponder.panHandlers}\n          style={[\n            this.getToastStyle(),\n            { transform: [{ translateX: x }, { translateY: y }] }\n          ]}\n        >\n          <Toast\n            style={[this.state.style]}\n            danger={this.state.type === 'danger'}\n            success={this.state.type === 'success'}\n            warning={this.state.type === 'warning'}\n          >\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {this.state.buttonText && (\n              <Button\n                style={this.state.buttonStyle}\n                onPress={() => this.closeToast('user')}\n              >\n                <Text style={this.state.buttonTextStyle}>\n                  {this.state.buttonText}\n                </Text>\n              </Button>\n            )}\n          </Toast>\n        </Animated.View>\n      );\n    }\n    return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes\n};\n\nconst StyledToastContainer = connectStyle(\n  'NativeBase.ToastContainer',\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]},"metadata":{},"sourceType":"script"}