{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Easing from \"./Easing\";\nimport AnimatedClock from \"./core/AnimatedClock\";\nimport AnimatedValue from \"./core/AnimatedValue\";\nimport AnimatedNode from \"./core/AnimatedNode\";\nimport AnimatedCode from \"./core/AnimatedCode\";\nimport * as base from \"./base\";\nimport * as derived from \"./derived\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport decay from \"./animations/decay\";\nimport timing from \"./animations/timing\";\nimport spring from \"./animations/spring\";\nimport Animation from \"./animations/Animation\";\nimport { addWhitelistedNativeProps, addWhitelistedUIProps } from \"./ConfigHelper\";\nimport backwardCompatibleAnimWrapper from \"./animations/backwardCompatibleAnimWrapper\";\nimport { Transition, Transitioning, createTransitioningComponent } from \"./Transitioning\";\nimport SpringUtils from \"./animations/SpringUtils\";\nimport useValue from \"./useValue\";\nvar decayWrapper = backwardCompatibleAnimWrapper(decay, Animation.decayDefaultState);\nvar timingWrapper = backwardCompatibleAnimWrapper(timing, Animation.timingDefaultState);\nvar springWrapper = backwardCompatibleAnimWrapper(spring, Animation.springDefaultState);\nvar Animated = _objectSpread(_objectSpread(_objectSpread({\n  View: createAnimatedComponent(View),\n  Text: createAnimatedComponent(Text),\n  Image: createAnimatedComponent(Image),\n  ScrollView: createAnimatedComponent(ScrollView),\n  Code: AnimatedCode,\n  createAnimatedComponent: createAnimatedComponent,\n  Clock: AnimatedClock,\n  Value: AnimatedValue,\n  Node: AnimatedNode\n}, base), derived), {}, {\n  decay: decayWrapper,\n  timing: timingWrapper,\n  spring: springWrapper,\n  SpringUtils: SpringUtils,\n  addWhitelistedNativeProps: addWhitelistedNativeProps,\n  addWhitelistedUIProps: addWhitelistedUIProps,\n  useValue: useValue\n});\nexport default Animated;\n\nexport * from \"./base\";\nexport * from \"./derived\";\nexport { Easing, Transitioning, Transition, createTransitioningComponent, AnimatedClock as Clock, AnimatedValue as Value, AnimatedNode as Node, decayWrapper as decay, timingWrapper as timing, springWrapper as spring, SpringUtils, useValue };","map":{"version":3,"sources":["Animated.js"],"names":["Easing","AnimatedClock","AnimatedValue","AnimatedNode","AnimatedCode","base","derived","createAnimatedComponent","decay","timing","spring","Animation","addWhitelistedNativeProps","addWhitelistedUIProps","backwardCompatibleAnimWrapper","Transition","Transitioning","createTransitioningComponent","SpringUtils","useValue","decayWrapper","decayDefaultState","timingWrapper","timingDefaultState","springWrapper","springDefaultState","Animated","View","Text","Image","ScrollView","Code","Clock","Value","Node"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAOA,MAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAO,KAAKC,IAAZ;AACA,OAAO,KAAKC,OAAZ;AACA,OAAOC,uBAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,SACEC,yBADF,EAEEC,qBAFF;AAIA,OAAOC,6BAAP;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,4BAHF;AAKA,OAAOC,WAAP;AACA,OAAOC,QAAP;AAEA,IAAMC,YAAY,GAAGN,6BAA6B,CAChDN,KADgD,EAEhDG,SAAS,CAACU,iBAFsC,CAAlD;AAIA,IAAMC,aAAa,GAAGR,6BAA6B,CACjDL,MADiD,EAEjDE,SAAS,CAACY,kBAFuC,CAAnD;AAIA,IAAMC,aAAa,GAAGV,6BAA6B,CACjDJ,MADiD,EAEjDC,SAAS,CAACc,kBAFuC,CAAnD;AAIA,IAAMC,QAAQ,GAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA;EAEZC,IAAI,EAAEpB,uBAAuB,CAACoB,IAAD,CAFjB;EAGZC,IAAI,EAAErB,uBAAuB,CAACqB,IAAD,CAHjB;EAIZC,KAAK,EAAEtB,uBAAuB,CAACsB,KAAD,CAJlB;EAKZC,UAAU,EAAEvB,uBAAuB,CAACuB,UAAD,CALvB;EAMZC,IAAI,EAAE3B,YANM;EAOZG,uBAPY,EAOZA,uBAPY;EAUZyB,KAAK,EAAE/B,aAVK;EAWZgC,KAAK,EAAE/B,aAXK;EAYZgC,IAAI,EAAE/B;AAZM,CAAA,EAeTE,IAfS,CAAA,EAgBTC,OAhBS,CAAA,EAAA,CAAA,CAAA,EAAA;EAmBZE,KAAK,EAAEY,YAnBK;EAoBZX,MAAM,EAAEa,aApBI;EAqBZZ,MAAM,EAAEc,aArBI;EAsBZN,WAtBY,EAsBZA,WAtBY;EAyBZN,yBAzBY,EAyBZA,yBAzBY;EA0BZC,qBA1BY,EA0BZA,qBA1BY;EA6BZM,QAAAA,EAAAA;AA7BY,CAAA,CAAd;AAgCA,eAAeO,QAAf;;AAGA;AACA;AAEA,SACE1B,MADF,EAEEgB,aAFF,EAGED,UAHF,EAIEE,4BAJF,EAMEhB,aAAa,IAAI+B,KANnB,EAOE9B,aAAa,IAAI+B,KAPnB,EAQE9B,YAAY,IAAI+B,IARlB,EAUEd,YAAY,IAAIZ,KAVlB,EAWEc,aAAa,IAAIb,MAXnB,EAYEe,aAAa,IAAId,MAZnB,EAaEQ,WAbF,EAeEC,QAfF","sourcesContent":["import { Image, ScrollView, Text, View } from 'react-native';\nimport Easing from './Easing';\nimport AnimatedClock from './core/AnimatedClock';\nimport AnimatedValue from './core/AnimatedValue';\nimport AnimatedNode from './core/AnimatedNode';\nimport AnimatedCode from './core/AnimatedCode';\nimport * as base from './base';\nimport * as derived from './derived';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport decay from './animations/decay';\nimport timing from './animations/timing';\nimport spring from './animations/spring';\nimport Animation from './animations/Animation';\nimport {\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n} from './ConfigHelper';\nimport backwardCompatibleAnimWrapper from './animations/backwardCompatibleAnimWrapper';\nimport {\n  Transition,\n  Transitioning,\n  createTransitioningComponent,\n} from './Transitioning';\nimport SpringUtils from './animations/SpringUtils';\nimport useValue from './useValue';\n\nconst decayWrapper = backwardCompatibleAnimWrapper(\n  decay,\n  Animation.decayDefaultState\n);\nconst timingWrapper = backwardCompatibleAnimWrapper(\n  timing,\n  Animation.timingDefaultState\n);\nconst springWrapper = backwardCompatibleAnimWrapper(\n  spring,\n  Animation.springDefaultState\n);\nconst Animated = {\n  // components\n  View: createAnimatedComponent(View),\n  Text: createAnimatedComponent(Text),\n  Image: createAnimatedComponent(Image),\n  ScrollView: createAnimatedComponent(ScrollView),\n  Code: AnimatedCode,\n  createAnimatedComponent,\n\n  // classes\n  Clock: AnimatedClock,\n  Value: AnimatedValue,\n  Node: AnimatedNode,\n\n  // operations\n  ...base,\n  ...derived,\n\n  // animations\n  decay: decayWrapper,\n  timing: timingWrapper,\n  spring: springWrapper,\n  SpringUtils,\n\n  // configuration\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n\n  // hooks\n  useValue,\n};\n\nexport default Animated;\n\n// operations\nexport * from './base';\nexport * from './derived';\n\nexport {\n  Easing,\n  Transitioning,\n  Transition,\n  createTransitioningComponent,\n  // classes\n  AnimatedClock as Clock,\n  AnimatedValue as Value,\n  AnimatedNode as Node,\n  // animations\n  decayWrapper as decay,\n  timingWrapper as timing,\n  springWrapper as spring,\n  SpringUtils,\n  // hooks\n  useValue,\n};\n"]},"metadata":{},"sourceType":"module"}