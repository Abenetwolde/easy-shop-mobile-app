{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"maxPointers\", \"deltaX\", \"deltaY\"],\n  _excluded2 = [\"numberOfPointers\", \"direction\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Hammer from '@egjs/hammerjs';\nimport { Direction } from \"./constants\";\nimport { GesturePropError } from \"./Errors\";\nimport DraggingGestureHandler from \"./DraggingGestureHandler\";\nimport { isnan } from \"./utils\";\nvar FlingGestureHandler = function (_DraggingGestureHandl) {\n  _inherits(FlingGestureHandler, _DraggingGestureHandl);\n  var _super = _createSuper(FlingGestureHandler);\n  function FlingGestureHandler() {\n    _classCallCheck(this, FlingGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FlingGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'swipe';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Swipe;\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(event) {\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: Hammer.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      }));\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: Hammer.INPUT_END,\n        isFinal: true\n      }));\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this = this;\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n      if (this.hasGestureFailed) {\n        return;\n      }\n      if (ev.isFinal) {\n        setTimeout(function () {\n          if (_this.isGestureRunning) {\n            _this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        var gesture = this.hammer.get(this.name);\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return {\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n  }, {\n    key: \"getTargetDirections\",\n    value: function getTargetDirections(direction) {\n      var directions = [];\n      if (direction & Direction.RIGHT) {\n        directions.push(Hammer.DIRECTION_RIGHT);\n      }\n      if (direction & Direction.LEFT) {\n        directions.push(Hammer.DIRECTION_LEFT);\n      }\n      if (direction & Direction.UP) {\n        directions.push(Hammer.DIRECTION_UP);\n      }\n      if (direction & Direction.DOWN) {\n        directions.push(Hammer.DIRECTION_DOWN);\n      }\n      return directions;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var _this$getConfig = this.getConfig(),\n        direction = _this$getConfig.direction;\n      var directions = [];\n      if (direction & Direction.RIGHT) {\n        directions.push(Hammer.DIRECTION_HORIZONTAL);\n      }\n      if (direction & Direction.LEFT) {\n        directions.push(Hammer.DIRECTION_HORIZONTAL);\n      }\n      if (direction & Direction.UP) {\n        directions.push(Hammer.DIRECTION_VERTICAL);\n      }\n      if (direction & Direction.DOWN) {\n        directions.push(Hammer.DIRECTION_VERTICAL);\n      }\n      directions = _toConsumableArray(new Set(directions));\n      if (directions.length === 0) return Hammer.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return Hammer.DIRECTION_ALL;\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref2, recognizer, _ref) {\n      var minPointers = _ref2.minPointers,\n        maxPointers = _ref2.maxPointers,\n        numberOfPointers = _ref2.numberOfPointers,\n        maxDist = _ref2.maxDist,\n        maxDeltaX = _ref2.maxDeltaX,\n        maxDeltaY = _ref2.maxDeltaY,\n        maxDistSq = _ref2.maxDistSq,\n        shouldCancelWhenOutside = _ref2.shouldCancelWhenOutside;\n      var pointerLength = _ref.maxPointers,\n        dx = _ref.deltaX,\n        dy = _ref.deltaY,\n        props = _objectWithoutProperties(_ref, _excluded);\n      var validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$numberOfPointer = _ref3.numberOfPointers,\n        numberOfPointers = _ref3$numberOfPointer === void 0 ? 1 : _ref3$numberOfPointer,\n        direction = _ref3.direction,\n        props = _objectWithoutProperties(_ref3, _excluded2);\n      if (isnan(direction) || typeof direction !== 'number') {\n        throw new GesturePropError('direction', direction, 'number');\n      }\n      return _get(_getPrototypeOf(FlingGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        numberOfPointers: numberOfPointers,\n        direction: direction\n      }, props));\n    }\n  }]);\n  return FlingGestureHandler;\n}(DraggingGestureHandler);\nexport default FlingGestureHandler;","map":{"version":3,"names":["Hammer","Direction","GesturePropError","DraggingGestureHandler","isnan","FlingGestureHandler","Swipe","event","sendEvent","eventType","INPUT_MOVE","isFinal","isFirst","isGestureRunning","hasGestureFailed","INPUT_END","ev","setTimeout","cancelEvent","gesture","hammer","get","name","options","enable","onStart","pointers","config","numberOfPointers","direction","getDirection","directions","RIGHT","push","DIRECTION_RIGHT","LEFT","DIRECTION_LEFT","UP","DIRECTION_UP","DOWN","DIRECTION_DOWN","getConfig","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","Set","length","DIRECTION_NONE","DIRECTION_ALL","recognizer","minPointers","maxPointers","maxDist","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","pointerLength","dx","deltaX","dy","deltaY","props","validPointerCount","failed","success"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/node_modules/react-native-gesture-handler/web/FlingGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer.get(this.name);\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      numberOfPointers,\n      maxDist,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    },\n    recognizer,\n    { maxPointers: pointerLength, deltaX: dx, deltaY: dy, ...props }\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}