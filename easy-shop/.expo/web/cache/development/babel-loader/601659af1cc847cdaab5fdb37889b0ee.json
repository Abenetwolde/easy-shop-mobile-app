{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.List = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/List.js';\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar List = function (_Component) {\n  _inherits(List, _Component);\n  function List() {\n    _classCallCheck(this, List);\n    return _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).apply(this, arguments));\n  }\n  _createClass(List, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var dataArray = this.props.dataArray;\n      if (dataArray) {\n        return _react2.default.createElement(_reactNative.FlatList, _extends({\n          ref: function ref(_ref2) {\n            return _this2._root = _ref2;\n          },\n          data: dataArray,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item,\n              index = _ref.index;\n            return _this2.props.renderItem ? _this2.props.renderItem({\n              item: item,\n              index: index\n            }) : _this2.props.renderRow(item, 0, index);\n          }\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          }\n        }));\n      }\n      return _react2.default.createElement(_reactNative.View, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        }\n      }));\n    }\n  }]);\n  return List;\n}(_react.Component);\nvar StyledList = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.List', {}, _mapPropsToStyleNames2.default)(List);\nexports.List = StyledList;","map":{"version":3,"sources":["../../../src/basic/List.js"],"names":["List","Component","dataArray","props","_root","ref","item","index","renderItem","renderRow","c","StyledList","mapPropsToStyleNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,uBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA;AAEA,IAAA,qBAAA,GAAA,OAAA,iCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEMA,IAAAA,I;;;;;;;;6BACK;MAAA,IAAA,MAAA,GAAA,IAAA;MAAA,IACCE,SADD,GACe,IAAA,CAAKC,KADpB,CACCD,SADD;MAGP,IAAIA,SAAJ,EAAe;QACb,OACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,QAAD,EAAA,QAAA,CAAA;UACE,GAAA,EAAK,SAAA,GAAA,CAAA,KAAA,EAAA;YAAA,OAAQ,MAAA,CAAKE,KAAL,GAAaC,KAArB;UAAA,CADP;UAEE,IAAA,EAAMH,SAFR;UAGE,UAAA,EAAY,SAAA,UAAA,CAAA,IAAA,EAAA;YAAA,IAAGI,IAAH,GAAA,IAAA,CAAGA,IAAH;cAASC,KAAT,GAAA,IAAA,CAASA,KAAT;YAAA,OACV,MAAA,CAAKJ,KAAL,CAAWK,UAAX,GACI,MAAA,CAAKL,KAAL,CAAWK,UAAX,CAAsB;cAAEF,IAAAA,EAAAA,IAAF;cAAQC,KAAAA,EAAAA;YAAR,CAAtB,CADJ,GAEI,MAAA,CAAKJ,KAAL,CAAWM,SAAX,CAAqBH,IAArB,EAA2B,CAA3B,EAA8BC,KAA9B,CAHM;UAAA;QAHd,CAAA,EAQM,IAAA,CAAKJ,KARX,EAAA;UAAA,QAAA,EAAA;YAAA,QAAA,EAAA,YAAA;YAAA,UAAA,EAAA;UAAA;QAAA,CAAA,CAAA,CADF;MAYD;MACD,OAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAA,QAAA,CAAA;QAAM,GAAA,EAAK,SAAA,GAAA,CAAA,CAAA,EAAA;UAAA,OAAM,MAAA,CAAKC,KAAL,GAAaM,CAAnB;QAAA;MAAX,CAAA,EAAsC,IAAA,CAAKP,KAA3C,EAAA;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,CAAA,CAAP;IACD;;;EAnBgBF,MAAAA,CAAAA,S;AAsBnB,IAAMU,UAAAA,GAAa,CAAA,CAAA,EAAA,uBAAA,CAAA,YAAA,EAAa,iBAAb,EAAgC,CAAA,CAAhC,EAAoCC,sBAAAA,CAAAA,OAApC,CAAA,CACjBZ,IADiB,CAAnB;QAIuBA,I,GAAdW,U","sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\nimport React, { Component } from 'react';\nimport { FlatList, View } from 'react-native';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass List extends Component {\n  render() {\n    const { dataArray } = this.props;\n\n    if (dataArray) {\n      return (\n        <FlatList\n          ref={ref => (this._root = ref)}\n          data={dataArray}\n          renderItem={({ item, index }) =>\n            this.props.renderItem\n              ? this.props.renderItem({ item, index })\n              : this.props.renderRow(item, 0, index)\n          }\n          {...this.props}\n        />\n      );\n    }\n    return <View ref={c => (this._root = c)} {...this.props} />;\n  }\n}\n\nconst StyledList = connectStyle('NativeBase.List', {}, mapPropsToStyleNames)(\n  List\n);\n\nexport { StyledList as List };\n"]},"metadata":{},"sourceType":"script"}