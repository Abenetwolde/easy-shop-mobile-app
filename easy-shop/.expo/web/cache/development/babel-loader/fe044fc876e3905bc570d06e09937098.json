{"ast":null,"code":"import getInvertedMultiplier from \"./getInvertedMultiplier\";\nexport default function getDistanceForDirection(layout, gestureDirection) {\n  var multiplier = getInvertedMultiplier(gestureDirection);\n  switch (gestureDirection) {\n    case 'vertical':\n    case 'vertical-inverted':\n      return layout.height * multiplier;\n    case 'horizontal':\n    case 'horizontal-inverted':\n      return layout.width * multiplier;\n  }\n}","map":{"version":3,"sources":["getDistanceForDirection.tsx"],"names":["getInvertedMultiplier","getDistanceForDirection","layout","gestureDirection","multiplier","height","width"],"mappings":"AAAA,OAAOA,qBAAP;AAGA,eAAe,SAASC,uBAAT,CACbC,MADa,EAEbC,gBAFa,EAGL;EACR,IAAMC,UAAU,GAAGJ,qBAAqB,CAACG,gBAAD,CAAxC;EAEA,QAAQA,gBAAR;IACE,KAAK,UAAL;IACA,KAAK,mBAAL;MACE,OAAOD,MAAM,CAACG,MAAPH,GAAgBE,UAAvB;IACF,KAAK,YAAL;IACA,KAAK,qBAAL;MACE,OAAOF,MAAM,CAACI,KAAPJ,GAAeE,UAAtB;EAAA;AAEL","sourcesContent":["import getInvertedMultiplier from './getInvertedMultiplier';\nimport type { GestureDirection, Layout } from '../types';\n\nexport default function getDistanceForDirection(\n  layout: Layout,\n  gestureDirection: GestureDirection\n): number {\n  const multiplier = getInvertedMultiplier(gestureDirection);\n\n  switch (gestureDirection) {\n    case 'vertical':\n    case 'vertical-inverted':\n      return layout.height * multiplier;\n    case 'horizontal':\n    case 'horizontal-inverted':\n      return layout.width * multiplier;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}