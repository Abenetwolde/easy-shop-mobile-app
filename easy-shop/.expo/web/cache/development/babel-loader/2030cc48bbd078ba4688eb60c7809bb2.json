{"ast":null,"code":"import * as _ from 'lodash';\nexport default function mergeComponentAndThemeStyles(componentStyle, themeComponentStyle, themeStyle) {\n  var componentThemedStyle = _.merge({}, componentStyle, themeComponentStyle);\n\n  var intersectedRootThemeStyle = _.pick(themeStyle, _.keys(componentThemedStyle));\n\n  return _.merge({}, intersectedRootThemeStyle, componentThemedStyle);\n}","map":{"version":3,"names":["_","mergeComponentAndThemeStyles","componentStyle","themeComponentStyle","themeStyle","componentThemedStyle","merge","intersectedRootThemeStyle","pick","keys"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/node_modules/native-base-shoutem-theme/src/mergeComponentAndThemeStyles.js"],"sourcesContent":["import * as _ from 'lodash';\n\nexport default function mergeComponentAndThemeStyles(\n  componentStyle, themeComponentStyle, themeStyle) {\n  const componentThemedStyle = _.merge({}, componentStyle, themeComponentStyle);\n\n  // Picking only required root theme style, used by component.\n  // We do not want to merge whole theme to component style.\n  const intersectedRootThemeStyle = _.pick(themeStyle, _.keys(componentThemedStyle));\n\n  // Merging only common style, not all theme style with component style\n  return _.merge({}, intersectedRootThemeStyle, componentThemedStyle);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,QAAQ;AAE3B,eAAe,SAASC,4BAA4B,CAClDC,cAAc,EAAEC,mBAAmB,EAAEC,UAAU,EAAE;EACjD,IAAMC,oBAAoB,GAAGL,CAAC,CAACM,KAAK,CAAC,CAAC,CAAC,EAAEJ,cAAc,EAAEC,mBAAmB,CAAC;;EAI7E,IAAMI,yBAAyB,GAAGP,CAAC,CAACQ,IAAI,CAACJ,UAAU,EAAEJ,CAAC,CAACS,IAAI,CAACJ,oBAAoB,CAAC,CAAC;;EAGlF,OAAOL,CAAC,CAACM,KAAK,CAAC,CAAC,CAAC,EAAEC,yBAAyB,EAAEF,oBAAoB,CAAC;AACrE"},"metadata":{},"sourceType":"module"}