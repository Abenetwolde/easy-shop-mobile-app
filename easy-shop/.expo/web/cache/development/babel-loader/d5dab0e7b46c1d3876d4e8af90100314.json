{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedEvent from \"./AnimatedEvent\";\nimport { createOrReuseStyleNode } from \"./AnimatedStyle\";\nimport invariant from 'fbjs/lib/invariant';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport { val } from \"../val\";\nfunction sanitizeProps(inputProps) {\n  var props = {};\n  for (var key in inputProps) {\n    var value = inputProps[key];\n    if (value instanceof AnimatedNode && !(value instanceof AnimatedEvent)) {\n      props[key] = value.__nodeID;\n    }\n  }\n  return props;\n}\nexport function createOrReusePropsNode(props, callback, oldNode) {\n  if (props.style) {\n    props = _objectSpread(_objectSpread({}, props), {}, {\n      style: createOrReuseStyleNode(props.style, oldNode && oldNode._props.style)\n    });\n  }\n  var config = sanitizeProps(props);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedProps(props, config, callback);\n}\nvar AnimatedProps = function (_AnimatedNode) {\n  _inherits(AnimatedProps, _AnimatedNode);\n  var _super = _createSuper(AnimatedProps);\n  function AnimatedProps(props, config, callback) {\n    var _this;\n    _classCallCheck(this, AnimatedProps);\n    _this = _super.call(this, {\n      type: 'props',\n      props: config\n    }, Object.values(props).filter(function (n) {\n      return !(n instanceof AnimatedEvent);\n    }));\n    _this._config = config;\n    _this._props = props;\n    _this._callback = callback;\n    _this.__attach();\n    return _this;\n  }\n  _createClass(AnimatedProps, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedProps, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          props[key] = value.__getValue();\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      this._disconnectAnimatedView(nativeViewTag);\n      _get(_getPrototypeOf(AnimatedProps.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n      if (!this._animatedView) {\n        return;\n      }\n      val(this);\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n      this._animatedView = animatedView;\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      this._connectAnimatedView(nativeViewTag);\n    }\n  }]);\n  return AnimatedProps;\n}(AnimatedNode);","map":{"version":3,"sources":["AnimatedProps.js"],"names":["AnimatedNode","AnimatedEvent","createOrReuseStyleNode","invariant","deepEqual","val","sanitizeProps","inputProps","props","key","value","__nodeID","createOrReusePropsNode","callback","oldNode","style","_props","config","_config","AnimatedProps","constructor","type","Object","values","filter","n","_callback","__attach","toString","__onEvaluate","__getValue","__detach","nativeViewTag","findNodeHandle","_animatedView","_disconnectAnimatedView","update","setNativeView","animatedView","_connectAnimatedView"],"mappings":"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","sourcesContent":["import { findNodeHandle } from 'react-native';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedEvent from './AnimatedEvent';\nimport { createOrReuseStyleNode } from './AnimatedStyle';\n\nimport invariant from 'fbjs/lib/invariant';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport { val } from '../val';\n\nfunction sanitizeProps(inputProps) {\n  const props = {};\n  for (const key in inputProps) {\n    const value = inputProps[key];\n    if (value instanceof AnimatedNode && !(value instanceof AnimatedEvent)) {\n      props[key] = value.__nodeID;\n    }\n  }\n  return props;\n}\n\nexport function createOrReusePropsNode(props, callback, oldNode) {\n  if (props.style) {\n    props = {\n      ...props,\n      style: createOrReuseStyleNode(\n        props.style,\n        oldNode && oldNode._props.style\n      ),\n    };\n  }\n  const config = sanitizeProps(props);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedProps(props, config, callback);\n}\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, config, callback) {\n    super(\n      { type: 'props', props: config },\n      Object.values(props).filter(n => !(n instanceof AnimatedEvent))\n    );\n    this._config = config;\n    this._props = props;\n    this._callback = callback;\n    this.__attach();\n  }\n\n  toString() {\n    return `AnimatedProps, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      }\n    }\n    return props;\n  }\n\n  __detach() {\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree'\n    );\n    this._disconnectAnimatedView(nativeViewTag);\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n\n    if (!this._animatedView) {\n      return;\n    }\n\n    val(this);\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree'\n    );\n    this._connectAnimatedView(nativeViewTag);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}