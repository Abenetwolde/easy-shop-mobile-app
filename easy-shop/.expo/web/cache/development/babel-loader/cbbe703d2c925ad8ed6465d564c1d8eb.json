{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Content = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/Content.js';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _reactNativeKeyboardAwareScrollView = require('@codler/react-native-keyboard-aware-scroll-view');\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _getStyle = require(\"../utils/getStyle\");\n\nvar _getStyle2 = _interopRequireDefault(_getStyle);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Content = function (_Component) {\n  _inherits(Content, _Component);\n\n  function Content() {\n    _classCallCheck(this, Content);\n\n    return _possibleConstructorReturn(this, (Content.__proto__ || Object.getPrototypeOf(Content)).apply(this, arguments));\n  }\n\n  _createClass(Content, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          contentContainerStyle = _props.contentContainerStyle,\n          disableKBDismissScroll = _props.disableKBDismissScroll,\n          keyboardShouldPersistTaps = _props.keyboardShouldPersistTaps,\n          padder = _props.padder,\n          style = _props.style;\n      var containerStyle = {\n        flex: 1,\n        backgroundColor: (0, _getStyle2.default)(style).backgroundColor\n      };\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      return _react2.default.createElement(_reactNative.SafeAreaView, {\n        style: containerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, _react2.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, _extends({\n        automaticallyAdjustContentInsets: false,\n        resetScrollToCoords: disableKBDismissScroll ? null : {\n          x: 0,\n          y: 0\n        },\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps || 'handled',\n        ref: function ref(c) {\n          _this2._scrollview = c;\n          _this2._root = c;\n        }\n      }, this.props, {\n        contentContainerStyle: [{\n          padding: padder ? variables.contentPadding : undefined\n        }, contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }), children));\n    }\n  }]);\n\n  return Content;\n}(_react.Component);\n\nContent.contextTypes = {\n  theme: _propTypes2.default.object\n};\nContent.propTypes = {\n  disableKBDismissScroll: _propTypes2.default.bool,\n  keyboardShouldPersistTaps: _propTypes2.default.string,\n  padder: _propTypes2.default.bool,\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array])\n};\nvar StyledContent = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Content', {}, _mapPropsToStyleNames2.default)(Content);\nexports.Content = StyledContent;","map":{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","Component","contextTypes","theme","PropTypes","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","style","containerStyle","flex","backgroundColor","variables","variable","x","y","padding","StyledContent","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { KeyboardAwareScrollView } from '@codler/react-native-keyboard-aware-scroll-view';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps,\n      padder,\n      style\n    } = this.props;\n\n    const containerStyle = {\n      flex: 1,\n      backgroundColor: getStyle(style).backgroundColor\n    };\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <SafeAreaView style={containerStyle}>\n        <KeyboardAwareScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n          ref={c => {\n            this._scrollview = c;\n            this._root = c;\n          }}\n          {...this.props}\n          contentContainerStyle={[\n            { padding: padder ? variables.contentPadding : undefined },\n            contentContainerStyle\n          ]}\n        >\n          {children}\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n\nContent.propTypes = {\n  disableKBDismissScroll: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  padder: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]},"metadata":{},"sourceType":"script"}