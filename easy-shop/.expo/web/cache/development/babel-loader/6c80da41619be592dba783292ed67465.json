{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"dimensions\", \"insets\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContext, NavigationRouteContext, CommonActions, useTheme, useLinkBuilder } from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport BottomTabItem from \"./BottomTabItem\";\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport useWindowDimensions from \"../utils/useWindowDimensions\";\nimport useIsKeyboardShown from \"../utils/useIsKeyboardShown\";\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n    layout = _ref.layout,\n    dimensions = _ref.dimensions,\n    _ref$adaptive = _ref.adaptive,\n    adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n    labelPosition = _ref.labelPosition,\n    tabStyle = _ref.tabStyle;\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n  if (!adaptive) {\n    return false;\n  }\n  if (layout.width >= 768) {\n    var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n    var flattenedStyle = StyleSheet.flatten(tabStyle);\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\nexport var getTabBarHeight = function getTabBarHeight(_ref2) {\n  var dimensions = _ref2.dimensions,\n    insets = _ref2.insets,\n    style = _ref2.style,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var _StyleSheet$flatten;\n\n  var customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  var state = _ref3.state,\n    navigation = _ref3.navigation,\n    descriptors = _ref3.descriptors,\n    activeBackgroundColor = _ref3.activeBackgroundColor,\n    activeTintColor = _ref3.activeTintColor,\n    adaptive = _ref3.adaptive,\n    allowFontScaling = _ref3.allowFontScaling,\n    inactiveBackgroundColor = _ref3.inactiveBackgroundColor,\n    inactiveTintColor = _ref3.inactiveTintColor,\n    _ref3$keyboardHidesTa = _ref3.keyboardHidesTabBar,\n    keyboardHidesTabBar = _ref3$keyboardHidesTa === void 0 ? false : _ref3$keyboardHidesTa,\n    labelPosition = _ref3.labelPosition,\n    labelStyle = _ref3.labelStyle,\n    iconStyle = _ref3.iconStyle,\n    safeAreaInsets = _ref3.safeAreaInsets,\n    showLabel = _ref3.showLabel,\n    style = _ref3.style,\n    tabStyle = _ref3.tabStyle;\n  var _safeAreaInsets$top, _safeAreaInsets$right, _safeAreaInsets$botto, _safeAreaInsets$left;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var buildLink = useLinkBuilder();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var dimensions = useWindowDimensions();\n  var isKeyboardShown = useIsKeyboardShown();\n  var onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  var shouldShowTabBar = focusedOptions.tabBarVisible !== false && !(keyboardHidesTabBar && isKeyboardShown);\n  var visibilityAnimationConfigRef = React.useRef(focusedOptions.tabBarVisibilityAnimationConfig);\n  React.useEffect(function () {\n    visibilityAnimationConfigRef.current = focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n  var _React$useState = React.useState(!shouldShowTabBar),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = React.useState(function () {\n      return new Animated.Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    visible = _React$useState4[0];\n  React.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n  }, [visible, shouldShowTabBar]);\n  var _React$useState5 = React.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _StyleSheet$flatten2;\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    var topBorderWidth =\n    (_StyleSheet$flatten2 = StyleSheet.flatten([styles.tabBar, style])) === null || _StyleSheet$flatten2 === void 0 ? void 0 : _StyleSheet$flatten2.borderTopWidth;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height + paddingBottom + (typeof topBorderWidth === 'number' ? topBorderWidth : 0));\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var defaultInsets = useSafeArea();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : defaultInsets.left\n  };\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle,\n    style: style\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle\n  });\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto'\n  }, React.createElement(View, {\n    style: styles.content,\n    onLayout: handleLayout\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate(route.name)), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      iconStyle: iconStyle,\n      style: tabStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["React","NavigationContext","NavigationRouteContext","CommonActions","useTheme","useLinkBuilder","useSafeArea","BottomTabItem","BottomTabBarHeightCallbackContext","useWindowDimensions","useIsKeyboardShown","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","layout","dimensions","adaptive","labelPosition","tabStyle","width","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","routes","length","height","getPaddingBottom","insets","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","descriptors","activeBackgroundColor","activeTintColor","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelStyle","iconStyle","safeAreaInsets","showLabel","colors","buildLink","focusedRoute","index","focusedDescriptor","key","focusedOptions","options","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","tabBarVisible","visibilityAnimationConfigRef","useRef","tabBarVisibilityAnimationConfig","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Animated","Value","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","setLayout","handleLayout","e","nativeEvent","topBorderWidth","styles","tabBar","borderTopWidth","defaultInsets","top","right","left","tabBarHeight","hasHorizontalLabels","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","Math","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","tabBarBadge","tabBarBadgeStyle","create","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const topBorderWidth =\n      // @ts-ignore\n      StyleSheet.flatten([styles.tabBar, style])?.borderTopWidth;\n\n    onHeightChange?.(\n      height +\n        paddingBottom +\n        (typeof topBorderWidth === 'number' ? topBorderWidth : 0)\n    );\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}