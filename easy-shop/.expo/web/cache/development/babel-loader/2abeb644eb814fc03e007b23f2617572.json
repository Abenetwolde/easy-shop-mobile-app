{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Badge from \"./Badge\";\nexport default function TabBarIcon(_ref) {\n  var horizontal = _ref.horizontal,\n    badge = _ref.badge,\n    badgeStyle = _ref.badgeStyle,\n    activeOpacity = _ref.activeOpacity,\n    inactiveOpacity = _ref.inactiveOpacity,\n    activeTintColor = _ref.activeTintColor,\n    inactiveTintColor = _ref.inactiveTintColor,\n    renderIcon = _ref.renderIcon,\n    style = _ref.style;\n  var size = 25;\n\n  return React.createElement(View, {\n    style: [horizontal ? styles.iconHorizontal : styles.iconVertical, style]\n  }, React.createElement(View, {\n    style: [styles.icon, {\n      opacity: activeOpacity\n    }]\n  }, renderIcon({\n    focused: true,\n    size: size,\n    color: activeTintColor\n  })), React.createElement(View, {\n    style: [styles.icon, {\n      opacity: inactiveOpacity\n    }]\n  }, renderIcon({\n    focused: false,\n    size: size,\n    color: inactiveTintColor\n  })), React.createElement(Badge, {\n    visible: badge != null,\n    style: [styles.badge, horizontal ? styles.badgeHorizontal : styles.badgeVertical, badgeStyle],\n    size: size * 3 / 4\n  }, badge));\n}\nvar styles = StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 25\n  },\n  iconVertical: {\n    flex: 1\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3\n  },\n  badge: {\n    position: 'absolute',\n    left: 3\n  },\n  badgeVertical: {\n    top: 3\n  },\n  badgeHorizontal: {\n    top: 7\n  }\n});","map":{"version":3,"sources":["TabBarIcon.tsx"],"names":["React","Badge","TabBarIcon","horizontal","badge","badgeStyle","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","style","size","styles","iconHorizontal","iconVertical","icon","opacity","focused","color","badgeHorizontal","badgeVertical","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth","flex","marginTop","left","top"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA;AAAA;AASA,OAAOC,KAAP;AAmBA,eAAe,SAASC,UAAT,OAUL;EAAA,IATRC,UADiC,QACjCA,UADiC;IAEjCC,KAFiC,QAEjCA,KAFiC;IAGjCC,UAHiC,QAGjCA,UAHiC;IAIjCC,aAJiC,QAIjCA,aAJiC;IAKjCC,eALiC,QAKjCA,eALiC;IAMjCC,eANiC,QAMjCA,eANiC;IAOjCC,iBAPiC,QAOjCA,iBAPiC;IAQjCC,UARiC,QAQjCA,UARiC;IASjCC,KAAAA,QAAAA,KAAAA;EAEA,IAAMC,IAAI,GAAG,EADL;;EAKR,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IACE,KAAK,EAAE,CAACT,UAAU,GAAGU,MAAM,CAACC,cAAV,GAA2BD,MAAM,CAACE,YAA7C,EAA2DJ,KAA3D;EADT,CAAA,EAGE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAE,CAACE,MAAM,CAACG,IAAR,EAAc;MAAEC,OAAO,EAAEX;IAAX,CAAd;EAAb,CAAA,EACGI,UAAU,CAAC;IACVQ,OAAO,EAAE,IADC;IAEVN,IAFU,EAEVA,IAFU;IAGVO,KAAK,EAAEX;EAHG,CAAD,CADb,CAHF,EAUE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAE,CAACK,MAAM,CAACG,IAAR,EAAc;MAAEC,OAAO,EAAEV;IAAX,CAAd;EAAb,CAAA,EACGG,UAAU,CAAC;IACVQ,OAAO,EAAE,KADC;IAEVN,IAFU,EAEVA,IAFU;IAGVO,KAAK,EAAEV;EAHG,CAAD,CADb,CAVF,EAiBE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;IACE,OAAO,EAAEL,KAAK,IAAI,IADpB;IAEE,KAAK,EAAE,CACLS,MAAM,CAACT,KADF,EAELD,UAAU,GAAGU,MAAM,CAACO,eAAV,GAA4BP,MAAM,CAACQ,aAFxC,EAGLhB,UAHK,CAFT;IAOE,IAAI,EAAGO,IAAI,GAAG,CAAR,GAAa;EAPrB,CAAA,EASGR,KATH,CAjBF,CADF;AA+BD;AAED,IAAMS,MAAM,GAAG,UAAU,CAACS,MAAX,CAAkB;EAC/BN,IAAI,EAAE;IAIJO,QAAQ,EAAE,UAJN;IAKJC,SAAS,EAAE,QALP;IAMJC,UAAU,EAAE,QANR;IAOJC,cAAc,EAAE,QAPZ;IAQJC,MAAM,EAAE,MARJ;IASJC,KAAK,EAAE,MATH;IAWJC,QAAQ,EAAE;EAXN,CADyB;EAc/Bd,YAAY,EAAE;IACZe,IAAI,EAAE;EADM,CAdiB;EAiB/BhB,cAAc,EAAE;IACda,MAAM,EAAE,MADM;IAEdI,SAAS,EAAE;EAFG,CAjBe;EAqB/B3B,KAAK,EAAE;IACLmB,QAAQ,EAAE,UADL;IAELS,IAAI,EAAE;EAFD,CArBwB;EAyB/BX,aAAa,EAAE;IACbY,GAAG,EAAE;EADQ,CAzBgB;EA4B/Bb,eAAe,EAAE;IACfa,GAAG,EAAE;EADU;AA5Bc,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport type { Route } from '@react-navigation/native';\nimport Badge from './Badge';\n\ntype Props = {\n  route: Route<string>;\n  horizontal: boolean;\n  badge?: string | number;\n  badgeStyle?: StyleProp<TextStyle>;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  horizontal,\n  badge,\n  badgeStyle,\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  style,\n}: Props) {\n  const size = 25;\n\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View\n      style={[horizontal ? styles.iconHorizontal : styles.iconVertical, style]}\n    >\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n      <Badge\n        visible={badge != null}\n        style={[\n          styles.badge,\n          horizontal ? styles.badgeHorizontal : styles.badgeVertical,\n          badgeStyle,\n        ]}\n        size={(size * 3) / 4}\n      >\n        {badge}\n      </Badge>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3,\n  },\n  badge: {\n    position: 'absolute',\n    left: 3,\n  },\n  badgeVertical: {\n    top: 3,\n  },\n  badgeHorizontal: {\n    top: 7,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}