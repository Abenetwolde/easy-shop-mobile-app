{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"isVisible\"],\n  _excluded2 = [\"isVisible\", \"children\", \"style\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Screen, screensEnabled, shouldUseActivityState } from 'react-native-screens';\nvar FAR_FAR_AWAY = 30000;\nvar ResourceSavingScene = function (_React$Component) {\n  _inherits(ResourceSavingScene, _React$Component);\n  var _super = _createSuper(ResourceSavingScene);\n  function ResourceSavingScene() {\n    _classCallCheck(this, ResourceSavingScene);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ResourceSavingScene, [{\n    key: \"render\",\n    value: function render() {\n      if ((screensEnabled === null || screensEnabled === void 0 ? void 0 : screensEnabled()) && Platform.OS !== 'web') {\n        var _this$props = this.props,\n          _isVisible = _this$props.isVisible,\n          _rest = _objectWithoutProperties(_this$props, _excluded);\n        if (shouldUseActivityState) {\n          return (\n            React.createElement(Screen, _extends({\n              activityState: _isVisible ? 2 : 0\n            }, _rest))\n          );\n        } else {\n          return (\n            React.createElement(Screen, _extends({\n              active: _isVisible ? 1 : 0\n            }, _rest))\n          );\n        }\n      }\n      var _this$props2 = this.props,\n        isVisible = _this$props2.isVisible,\n        children = _this$props2.children,\n        style = _this$props2.style,\n        rest = _objectWithoutProperties(_this$props2, _excluded2);\n      return React.createElement(View, _extends({\n        style: [styles.container, Platform.OS === 'web' ? {\n          display: isVisible ? 'flex' : 'none'\n        } : null, style],\n        collapsable: false,\n        removeClippedSubviews:\n        Platform.OS === 'ios' ? !isVisible : true,\n        pointerEvents: isVisible ? 'auto' : 'none'\n      }, rest), React.createElement(View, {\n        style: isVisible ? styles.attached : styles.detached\n      }, children));\n    }\n  }]);\n  return ResourceSavingScene;\n}(React.Component);\nexport { ResourceSavingScene as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});","map":{"version":3,"sources":["ResourceSavingScene.tsx"],"names":["React","Screen","screensEnabled","shouldUseActivityState","FAR_FAR_AWAY","ResourceSavingScene","Component","render","Platform","OS","isVisible","rest","props","children","style","styles","container","display","attached","detached","create","flex","overflow","top"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAEA,SACEC,MADF,EAEEC,cAFF,EAIEC,sBAJF,QAKO,sBALP;AAcA,IAAMC,YAAY,GAAG,KAArB;AAA4B,IAEPC,mBAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACbE,kBAAS;MAEP,IAAI,CAAA,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAA,KAAA,CAAA,GAAA,cAAc,EAAA,KAAQC,QAAQ,CAACC,EAATD,KAAgB,KAA1C,EAAiD;QAC/C,kBAA+B,IAAA,CAAKI,KAApC;UAAQF,UAAF,eAAEA,SAAF;UAAgBC,KAAAA;QAEtB,IAAIR,sBAAJ,EAA4B;UAC1B;YAEE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA,QAAA,CAAA;cAAQ,aAAa,EAAEO,UAAS,GAAG,CAAH,GAAO;YAAvC,CAAA,EAA8CC,KAA9C,CAAA;UAAA;QAEH,CALD,MAKO;UACL;YAEE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA,QAAA,CAAA;cAAQ,MAAM,EAAED,UAAS,GAAG,CAAH,GAAO;YAAhC,CAAA,EAAuCC,KAAvC,CAAA;UAAA;QAEH;MACF;MAED,mBAAgD,IAAA,CAAKC,KAArD;QAAQF,SAAF,gBAAEA,SAAF;QAAaG,QAAb,gBAAaA,QAAb;QAAuBC,KAAvB,gBAAuBA,KAAvB;QAAiCH,IAAAA;MAEvC,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA;QACE,KAAK,EAAE,CACLI,MAAM,CAACC,SADF,EAEL,QAAQ,CAACP,EAAT,KAAgB,KAAhB,GACI;UAAEQ,OAAO,EAAEP,SAAS,GAAG,MAAH,GAAY;QAAhC,CADJ,GAEI,IAJC,EAKLI,KALK,CADT;QAQE,WAAW,EAAE,KARf;QASE,qBAAqB;QAGnBN,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwB,CAACE,SAAzBF,GAAqC,IAZzC;QAcE,aAAa,EAAEE,SAAS,GAAG,MAAH,GAAY;MAdtC,CAAA,EAeMC,IAfN,CAAA,EAiBE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;QAAM,KAAK,EAAED,SAAS,GAAGK,MAAM,CAACG,QAAV,GAAqBH,MAAM,CAACI;MAAlD,CAAA,EACGN,QADH,CAjBF,CADF;IAuBD;EAAA;EAAA;AAAA,EA5C8Cb,KAAK,CAACM,SAAxC;AAAA,SAAMD,mBAAN;AA+Cf,IAAMU,MAAM,GAAG,UAAU,CAACK,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CADG;IAETC,QAAQ,EAAE;EAFD,CADoB;EAK/BJ,QAAQ,EAAE;IACRG,IAAI,EAAE;EADE,CALqB;EAQ/BF,QAAQ,EAAE;IACRE,IAAI,EAAE,CADE;IAERE,GAAG,EAAEnB;EAFG;AARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  Screen,\n  screensEnabled,\n  // @ts-ignore\n  shouldUseActivityState,\n} from 'react-native-screens';\n\ntype Props = {\n  isVisible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  style?: any;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default class ResourceSavingScene extends React.Component<Props> {\n  render() {\n    // react-native-screens is buggy on web\n    if (screensEnabled?.() && Platform.OS !== 'web') {\n      const { isVisible, ...rest } = this.props;\n\n      if (shouldUseActivityState) {\n        return (\n          // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n          <Screen activityState={isVisible ? 2 : 0} {...rest} />\n        );\n      } else {\n        return (\n          // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n          <Screen active={isVisible ? 1 : 0} {...rest} />\n        );\n      }\n    }\n\n    const { isVisible, children, style, ...rest } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          Platform.OS === 'web'\n            ? { display: isVisible ? 'flex' : 'none' }\n            : null,\n          style,\n        ]}\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' ? !isVisible : true\n        }\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        {...rest}\n      >\n        <View style={isVisible ? styles.attached : styles.detached}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}