{"ast":null,"code":"\nexport default function createEventObjectProxyPolyfill() {\n  var nodesMap = {\n    translationX: {},\n    translationY: {},\n    state: {},\n    oldState: {},\n    absoluteX: {},\n    absoluteY: {},\n    x: {},\n    y: {},\n    velocityX: {},\n    velocityY: {},\n    scale: {},\n    focalX: {},\n    focalY: {},\n    rotation: {},\n    anchorX: {},\n    anchorY: {},\n    velocity: {},\n    numberOfPointers: {},\n    layout: {\n      x: {},\n      y: {},\n      width: {},\n      height: {}\n    },\n    contentOffset: {\n      y: {},\n      x: {}\n    },\n    layoutMeasurement: {\n      width: {},\n      height: {}\n    },\n    contentSize: {\n      width: {},\n      height: {}\n    },\n    zoomScale: {},\n    contentInset: {\n      right: {},\n      top: {},\n      left: {},\n      bottom: {}\n    }\n  };\n  var traverse = function traverse(obj) {\n    for (var key in obj) {\n      traverse(obj[key]);\n      Object.assign(obj[key], {\n        __isProxy: true\n      });\n    }\n  };\n  traverse(nodesMap);\n  return nodesMap;\n}","map":{"version":3,"sources":["createEventObjectProxyPolyfill.js"],"names":["createEventObjectProxyPolyfill","nodesMap","translationX","translationY","state","oldState","absoluteX","absoluteY","x","y","velocityX","velocityY","scale","focalX","focalY","rotation","anchorX","anchorY","velocity","numberOfPointers","layout","width","height","contentOffset","layoutMeasurement","contentSize","zoomScale","contentInset","right","top","left","bottom","traverse","obj","key","Object","assign","__isProxy"],"mappings":";AAKA,eAAe,SAASA,8BAAT,GAA0C;EACvD,IAAMC,QAAQ,GAAG;IAEfC,YAAY,EAAE,CAAA,CAFC;IAGfC,YAAY,EAAE,CAAA,CAHC;IAIfC,KAAK,EAAE,CAAA,CAJQ;IAKfC,QAAQ,EAAE,CAAA,CALK;IAMfC,SAAS,EAAE,CAAA,CANI;IAOfC,SAAS,EAAE,CAAA,CAPI;IAQfC,CAAC,EAAE,CAAA,CARY;IASfC,CAAC,EAAE,CAAA,CATY;IAUfC,SAAS,EAAE,CAAA,CAVI;IAWfC,SAAS,EAAE,CAAA,CAXI;IAYfC,KAAK,EAAE,CAAA,CAZQ;IAafC,MAAM,EAAE,CAAA,CAbO;IAcfC,MAAM,EAAE,CAAA,CAdO;IAefC,QAAQ,EAAE,CAAA,CAfK;IAgBfC,OAAO,EAAE,CAAA,CAhBM;IAiBfC,OAAO,EAAE,CAAA,CAjBM;IAkBfC,QAAQ,EAAE,CAAA,CAlBK;IAmBfC,gBAAgB,EAAE,CAAA,CAnBH;IAqBfC,MAAM,EAAE;MAAEZ,CAAC,EAAE,CAAA,CAAL;MAASC,CAAC,EAAE,CAAA,CAAZ;MAAgBY,KAAK,EAAE,CAAA,CAAvB;MAA2BC,MAAM,EAAE,CAAA;IAAnC,CArBO;IAuBfC,aAAa,EAAE;MAAEd,CAAC,EAAE,CAAA,CAAL;MAASD,CAAC,EAAE,CAAA;IAAZ,CAvBA;IAwBfgB,iBAAiB,EAAE;MAAEH,KAAK,EAAE,CAAA,CAAT;MAAaC,MAAM,EAAE,CAAA;IAArB,CAxBJ;IAyBfG,WAAW,EAAE;MAAEJ,KAAK,EAAE,CAAA,CAAT;MAAaC,MAAM,EAAE,CAAA;IAArB,CAzBE;IA0BfI,SAAS,EAAE,CAAA,CA1BI;IA2BfC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAA,CAAT;MAAaC,GAAG,EAAE,CAAA,CAAlB;MAAsBC,IAAI,EAAE,CAAA,CAA5B;MAAgCC,MAAM,EAAE,CAAA;IAAxC;EA3BC,CAAjB;EA6BA,IAAMC,QAAQ,GAAGC,SAAXD,QAAQ,CAAGC,GAAG,EAAI;IACtB,KAAK,IAAMC,GAAX,IAAkBD,GAAlB,EAAuB;MACrBD,QAAQ,CAACC,GAAG,CAACC,GAAD,CAAJ,CAARF;MACAG,MAAM,CAACC,MAAPD,CAAcF,GAAG,CAACC,GAAD,CAAjBC,EAAwB;QAAEE,SAAS,EAAE;MAAb,CAAxBF,CAAAA;IACD;EACF,CALD;EAMAH,QAAQ,CAAC/B,QAAD,CAAR+B;EACA,OAAO/B,QAAP;AACD","sourcesContent":["// JSC on Android and iOS 8 & 9 does not support proxies.\n// The below workaround provides a proxy-like functionality for event data by\n// creating an object which contains predefined fields for the most commonly\n// used event attributes. If your app uses even attribute which is not listed\n// here please submit a PR to add that and we will merge it right away\nexport default function createEventObjectProxyPolyfill() {\n  const nodesMap = {\n    // Gesture handlers-related event\n    translationX: {},\n    translationY: {},\n    state: {},\n    oldState: {},\n    absoluteX: {},\n    absoluteY: {},\n    x: {},\n    y: {},\n    velocityX: {},\n    velocityY: {},\n    scale: {},\n    focalX: {},\n    focalY: {},\n    rotation: {},\n    anchorX: {},\n    anchorY: {},\n    velocity: {},\n    numberOfPointers: {},\n    // onLayour-related event\n    layout: { x: {}, y: {}, width: {}, height: {} },\n    // ScrollView event\n    contentOffset: { y: {}, x: {} },\n    layoutMeasurement: { width: {}, height: {} },\n    contentSize: { width: {}, height: {} },\n    zoomScale: {},\n    contentInset: { right: {}, top: {}, left: {}, bottom: {} },\n  };\n  const traverse = obj => {\n    for (const key in obj) {\n      traverse(obj[key]);\n      Object.assign(obj[key], { __isProxy: true });\n    }\n  };\n  traverse(nodesMap);\n  return nodesMap;\n}\n"]},"metadata":{},"sourceType":"module"}