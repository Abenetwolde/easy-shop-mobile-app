{"ast":null,"code":"\nimport * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nfunction normalizeScrollEvent(e) {\n  return {\n    nativeEvent: {\n      contentOffset: {\n        get x() {\n          return e.target.scrollLeft;\n        },\n        get y() {\n          return e.target.scrollTop;\n        }\n      },\n      contentSize: {\n        get height() {\n          return e.target.scrollHeight;\n        },\n        get width() {\n          return e.target.scrollWidth;\n        }\n      },\n      layoutMeasurement: {\n        get height() {\n          return e.target.offsetHeight;\n        },\n        get width() {\n          return e.target.offsetWidth;\n        }\n      }\n    },\n    timeStamp: Date.now()\n  };\n}\nfunction shouldEmitScrollEvent(lastTick, eventThrottle) {\n  var timeSinceLastTick = Date.now() - lastTick;\n  return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n}\n\nvar ScrollViewBase = forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n    accessibilityRole = props.accessibilityRole,\n    accessibilityState = props.accessibilityState,\n    children = props.children,\n    importantForAccessibility = props.importantForAccessibility,\n    nativeID = props.nativeID,\n    onLayout = props.onLayout,\n    onScroll = props.onScroll,\n    onTouchMove = props.onTouchMove,\n    onWheel = props.onWheel,\n    pointerEvents = props.pointerEvents,\n    _props$scrollEnabled = props.scrollEnabled,\n    scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n    _props$scrollEventThr = props.scrollEventThrottle,\n    scrollEventThrottle = _props$scrollEventThr === void 0 ? 0 : _props$scrollEventThr,\n    showsHorizontalScrollIndicator = props.showsHorizontalScrollIndicator,\n    showsVerticalScrollIndicator = props.showsVerticalScrollIndicator,\n    style = props.style,\n    dataSet = props.dataSet,\n    testID = props.testID;\n  var scrollState = useRef({\n    isScrolling: false,\n    scrollLastTick: 0\n  });\n  var scrollTimeout = useRef(null);\n  function createPreventableScrollHandler(handler) {\n    return function (e) {\n      if (scrollEnabled) {\n        if (handler) {\n          handler(e);\n        }\n      }\n    };\n  }\n  function handleScroll(e) {\n    e.persist();\n    e.stopPropagation();\n\n    if (scrollTimeout.current != null) {\n      clearTimeout(scrollTimeout.current);\n    }\n    scrollTimeout.current = setTimeout(function () {\n      handleScrollEnd(e);\n    }, 100);\n    if (scrollState.current.isScrolling) {\n      if (shouldEmitScrollEvent(scrollState.current.scrollLastTick, scrollEventThrottle)) {\n        handleScrollTick(e);\n      }\n    } else {\n      handleScrollStart(e);\n    }\n  }\n  function handleScrollStart(e) {\n    scrollState.current.isScrolling = true;\n    scrollState.current.scrollLastTick = Date.now();\n  }\n  function handleScrollTick(e) {\n    scrollState.current.scrollLastTick = Date.now();\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n  function handleScrollEnd(e) {\n    scrollState.current.isScrolling = false;\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n  var hideScrollbar = showsHorizontalScrollIndicator === false || showsVerticalScrollIndicator === false;\n  return React.createElement(View, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: accessibilityRole,\n    accessibilityState: accessibilityState,\n    children: children,\n    dataSet: dataSet,\n    importantForAccessibility: importantForAccessibility,\n    nativeID: nativeID,\n    onLayout: onLayout,\n    onScroll: handleScroll,\n    onTouchMove: createPreventableScrollHandler(onTouchMove),\n    onWheel: createPreventableScrollHandler(onWheel),\n    pointerEvents: pointerEvents,\n    ref: forwardedRef,\n    style: [style, !scrollEnabled && styles.scrollDisabled, hideScrollbar && styles.hideScrollbar],\n    testID: testID\n  });\n});\n\nvar styles = StyleSheet.create({\n  scrollDisabled: {\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    touchAction: 'none'\n  },\n  hideScrollbar: {\n    scrollbarWidth: 'none'\n  }\n});\nexport default ScrollViewBase;","map":{"version":3,"names":["React","forwardRef","useRef","StyleSheet","View","normalizeScrollEvent","e","nativeEvent","contentOffset","x","target","scrollLeft","y","scrollTop","contentSize","height","scrollHeight","width","scrollWidth","layoutMeasurement","offsetHeight","offsetWidth","timeStamp","Date","now","shouldEmitScrollEvent","lastTick","eventThrottle","timeSinceLastTick","ScrollViewBase","props","forwardedRef","accessibilityLabel","accessibilityRole","accessibilityState","children","importantForAccessibility","nativeID","onLayout","onScroll","onTouchMove","onWheel","pointerEvents","_props$scrollEnabled","scrollEnabled","_props$scrollEventThr","scrollEventThrottle","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","style","dataSet","testID","scrollState","isScrolling","scrollLastTick","scrollTimeout","createPreventableScrollHandler","handler","handleScroll","persist","stopPropagation","current","clearTimeout","setTimeout","handleScrollEnd","handleScrollTick","handleScrollStart","hideScrollbar","createElement","ref","styles","scrollDisabled","create","overflowX","overflowY","touchAction","scrollbarWidth"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n\nfunction normalizeScrollEvent(e) {\n  return {\n    nativeEvent: {\n      contentOffset: {\n        get x() {\n          return e.target.scrollLeft;\n        },\n\n        get y() {\n          return e.target.scrollTop;\n        }\n\n      },\n      contentSize: {\n        get height() {\n          return e.target.scrollHeight;\n        },\n\n        get width() {\n          return e.target.scrollWidth;\n        }\n\n      },\n      layoutMeasurement: {\n        get height() {\n          return e.target.offsetHeight;\n        },\n\n        get width() {\n          return e.target.offsetWidth;\n        }\n\n      }\n    },\n    timeStamp: Date.now()\n  };\n}\n\nfunction shouldEmitScrollEvent(lastTick, eventThrottle) {\n  var timeSinceLastTick = Date.now() - lastTick;\n  return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n}\n/**\n * Encapsulates the Web-specific scroll throttling and disabling logic\n */\n\n\nvar ScrollViewBase = forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      accessibilityRole = props.accessibilityRole,\n      accessibilityState = props.accessibilityState,\n      children = props.children,\n      importantForAccessibility = props.importantForAccessibility,\n      nativeID = props.nativeID,\n      onLayout = props.onLayout,\n      onScroll = props.onScroll,\n      onTouchMove = props.onTouchMove,\n      onWheel = props.onWheel,\n      pointerEvents = props.pointerEvents,\n      _props$scrollEnabled = props.scrollEnabled,\n      scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n      _props$scrollEventThr = props.scrollEventThrottle,\n      scrollEventThrottle = _props$scrollEventThr === void 0 ? 0 : _props$scrollEventThr,\n      showsHorizontalScrollIndicator = props.showsHorizontalScrollIndicator,\n      showsVerticalScrollIndicator = props.showsVerticalScrollIndicator,\n      style = props.style,\n      dataSet = props.dataSet,\n      testID = props.testID;\n  var scrollState = useRef({\n    isScrolling: false,\n    scrollLastTick: 0\n  });\n  var scrollTimeout = useRef(null);\n\n  function createPreventableScrollHandler(handler) {\n    return function (e) {\n      if (scrollEnabled) {\n        if (handler) {\n          handler(e);\n        }\n      }\n    };\n  }\n\n  function handleScroll(e) {\n    e.persist();\n    e.stopPropagation(); // A scroll happened, so the scroll resets the scrollend timeout.\n\n    if (scrollTimeout.current != null) {\n      clearTimeout(scrollTimeout.current);\n    }\n\n    scrollTimeout.current = setTimeout(function () {\n      handleScrollEnd(e);\n    }, 100);\n\n    if (scrollState.current.isScrolling) {\n      // Scroll last tick may have changed, check if we need to notify\n      if (shouldEmitScrollEvent(scrollState.current.scrollLastTick, scrollEventThrottle)) {\n        handleScrollTick(e);\n      }\n    } else {\n      // Weren't scrolling, so we must have just started\n      handleScrollStart(e);\n    }\n  }\n\n  function handleScrollStart(e) {\n    scrollState.current.isScrolling = true;\n    scrollState.current.scrollLastTick = Date.now();\n  }\n\n  function handleScrollTick(e) {\n    scrollState.current.scrollLastTick = Date.now();\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n\n  function handleScrollEnd(e) {\n    scrollState.current.isScrolling = false;\n\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n\n  var hideScrollbar = showsHorizontalScrollIndicator === false || showsVerticalScrollIndicator === false;\n  return React.createElement(View, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: accessibilityRole,\n    accessibilityState: accessibilityState,\n    children: children,\n    dataSet: dataSet,\n    importantForAccessibility: importantForAccessibility,\n    nativeID: nativeID,\n    onLayout: onLayout,\n    onScroll: handleScroll,\n    onTouchMove: createPreventableScrollHandler(onTouchMove),\n    onWheel: createPreventableScrollHandler(onWheel),\n    pointerEvents: pointerEvents,\n    ref: forwardedRef,\n    style: [style, !scrollEnabled && styles.scrollDisabled, hideScrollbar && styles.hideScrollbar],\n    testID: testID\n  });\n}); // Chrome doesn't support e.preventDefault in this case; touch-action must be\n// used to disable scrolling.\n// https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\nvar styles = StyleSheet.create({\n  scrollDisabled: {\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    touchAction: 'none'\n  },\n  hideScrollbar: {\n    scrollbarWidth: 'none'\n  }\n});\nexport default ScrollViewBase;"],"mappings":"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"},"metadata":{},"sourceType":"module"}