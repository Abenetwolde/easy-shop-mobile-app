{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.H1 = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/H1.js';\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar H1 = function (_Component) {\n  _inherits(H1, _Component);\n  function H1() {\n    _classCallCheck(this, H1);\n    return _possibleConstructorReturn(this, (H1.__proto__ || Object.getPrototypeOf(H1)).apply(this, arguments));\n  }\n  _createClass(H1, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      return _react2.default.createElement(_reactNative.Text, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        }\n      }));\n    }\n  }]);\n  return H1;\n}(_react.Component);\nvar childrenType = function childrenType(props, propName, component) {\n  var error = void 0;\n  var prop = props[propName];\n  _react2.default.Children.forEach(prop, function (child) {\n    if (typeof child !== 'string' && typeof child !== 'number') {\n      error = new Error(component + ' should have only string or number');\n    }\n  });\n  return error;\n};\nH1.propTypes = _extends({}, _reactNative.Text.propTypes, {\n  children: childrenType,\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array])\n});\nvar StyledH1 = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.H1', {}, _mapPropsToStyleNames2.default)(H1);\nexports.H1 = StyledH1;","map":{"version":3,"sources":["../../../src/basic/H1.js"],"names":["H1","Component","_root","c","props","childrenType","propName","component","error","prop","React","Children","forEach","child","Error","propTypes","Text","children","style","PropTypes","oneOfType","object","number","array","StyledH1","mapPropsToStyleNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;AAEA,IAAA,qBAAA,GAAA,OAAA,iCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEMA,IAAAA,E;;;;;;;;6BACK;MAAA,IAAA,MAAA,GAAA,IAAA;MACP,OAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAA,QAAA,CAAA;QAAM,GAAA,EAAK,SAAA,GAAA,CAAA,CAAA,EAAA;UAAA,OAAM,MAAA,CAAKE,KAAL,GAAaC,CAAnB;QAAA;MAAX,CAAA,EAAsC,IAAA,CAAKC,KAA3C,EAAA;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,CAAA,CAAP;IACD;;;EAHcH,MAAAA,CAAAA,S;AAMjB,IAAMI,YAAAA,GAAAA,SAAAA,YAAe,CAASD,KAAT,EAAgBE,QAAhB,EAA0BC,SAA1B,EAAqC;EACxD,IAAIC,KAAAA,GAAAA,KAAAA,CAAJ;EACA,IAAMC,IAAAA,GAAOL,KAAAA,CAAME,QAANF,CAAb;EACAM,OAAAA,CAAAA,OAAAA,CAAMC,QAAND,CAAeE,OAAfF,CAAuBD,IAAvBC,EAA6B,UAAA,KAAA,EAAS;IACpC,IAAI,OAAOG,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;MAC1DL,KAAAA,GAAQ,IAAIM,KAAJ,CAAaP,SAAb,GAAA,oCAAA,CAARC;IACD;EACF,CAJDE,CAAAA;EAKA,OAAOF,KAAP;AACD,CATD;AAWAR,EAAAA,CAAGe,SAAHf,GAAAA,QAAAA,CAAAA,CAAAA,CAAAA,EACKgB,YAAAA,CAAAA,IAAAA,CAAKD,SADVf,EAAAA;EAEEiB,QAAAA,EAAUZ,YAFZL;EAGEkB,KAAAA,EAAOC,WAAAA,CAAAA,OAAAA,CAAUC,SAAVD,CAAoB,CACzBA,WAAAA,CAAAA,OAAAA,CAAUE,MADe,EAEzBF,WAAAA,CAAAA,OAAAA,CAAUG,MAFe,EAGzBH,WAAAA,CAAAA,OAAAA,CAAUI,KAHe,CAApBJ;AAHTnB,CAAAA,CAAAA;AAUA,IAAMwB,QAAAA,GAAW,CAAA,CAAA,EAAA,uBAAA,CAAA,YAAA,EAAa,eAAb,EAA8B,CAAA,CAA9B,EAAkCC,sBAAAA,CAAAA,OAAlC,CAAA,CAAwDzB,EAAxD,CAAjB;QAEqBA,E,GAAZwB,Q","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass H1 extends Component {\n  render() {\n    return <Text ref={c => (this._root = c)} {...this.props} />;\n  }\n}\n\nconst childrenType = function(props, propName, component) {\n  let error;\n  const prop = props[propName];\n  React.Children.forEach(prop, child => {\n    if (typeof child !== 'string' && typeof child !== 'number') {\n      error = new Error(`${component} should have only string or number`);\n    }\n  });\n  return error;\n};\n\nH1.propTypes = {\n  ...Text.propTypes,\n  children: childrenType,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledH1 = connectStyle('NativeBase.H1', {}, mapPropsToStyleNames)(H1);\n\nexport { StyledH1 as H1 };\n"]},"metadata":{},"sourceType":"script"}