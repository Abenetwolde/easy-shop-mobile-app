{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Spinner = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/Spinner.js';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Spinner = function (_Component) {\n  _inherits(Spinner, _Component);\n\n  function Spinner() {\n    _classCallCheck(this, Spinner);\n\n    return _possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).apply(this, arguments));\n  }\n\n  _createClass(Spinner, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      return _react2.default.createElement(_reactNative.ActivityIndicator, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.props, {\n        color: this.props.color ? this.props.color : this.props.inverse ? variables.inverseSpinnerColor : variables.defaultSpinnerColor,\n        size: this.props.size ? this.props.size : 'large',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        }\n      }));\n    }\n  }]);\n\n  return Spinner;\n}(_react.Component);\n\nSpinner.contextTypes = {\n  theme: _propTypes2.default.object\n};\nSpinner.propTypes = _extends({}, _reactNative.ActivityIndicator.propTypes, {\n  color: _propTypes2.default.string,\n  inverse: _propTypes2.default.bool\n});\nvar StyledSpinner = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Spinner', {}, _mapPropsToStyleNames2.default)(Spinner);\nexports.Spinner = StyledSpinner;","map":{"version":3,"sources":["../../../src/basic/Spinner.js"],"names":["Spinner","Component","contextTypes","theme","PropTypes","variables","variable","ActivityIndicator","color","inverse","StyledSpinner","mapPropsToStyleNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;yCACA,U;;;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,OAAA,+BAAA;;;;AACA,IAAA,qBAAA,GAAA,OAAA,iCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEMA;;AAAAA,IAAAA,O;;;;;;;;;;;6BAIK;AAAA,UAAA,MAAA,GAAA,IAAA;;AACP,UAAMK,SAAAA,GAAY,KAAA,OAAA,CAAA,KAAA,GACd,KAAA,OAAA,CAAA,KAAA,CAAA,4BAAA,EADc,SAAA,GAEdC,UAAAA,CAFJ,OAAA;AAGA,aACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,iBAAA,EAAA,QAAA,CAAA;AACE,QAAA,GAAA,EAAK,SAAA,GAAA,CAAA,CAAA,EAAA;AAAA,iBAAM,MAAA,CAAA,KAAA,GAAN,CAAA;AADP;AAAA,OAAA,EAEM,KAFN,KAAA,EAAA;AAGE,QAAA,KAAA,EACE,KAAA,KAAA,CAAA,KAAA,GACI,KAAA,KAAA,CADJ,KAAA,GAEI,KAAA,KAAA,CAAA,OAAA,GACAD,SAAAA,CADA,mBAAA,GAEAA,SAAAA,CARR,mBAAA;AAUE,QAAA,IAAA,EAAM,KAAA,KAAA,CAAA,IAAA,GAAkB,KAAA,KAAA,CAAlB,IAAA,GAVR,OAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CAAA,CADF;;;;;EARkBJ,MAAAA,CAAAA,S,CAAhBD;;AAAAA,O,CACGE,YADHF,GACkB;AACpBG,EAAAA,KAAAA,EAAOC,WAAAA,CAAAA,OAAAA,CADa;AAAA,CADlBJ;AAyBNA,OAAAA,CAAAA,SAAAA,GAAAA,QAAAA,CAAAA,EAAAA,EACKO,YAAAA,CAAAA,iBAAAA,CADLP,SAAAA,EAAAA;AAEEQ,EAAAA,KAAAA,EAAOJ,WAAAA,CAAAA,OAAAA,CAFTJ,MAAAA;AAGES,EAAAA,OAAAA,EAASL,WAAAA,CAAAA,OAAAA,CAHXJ;AAAAA,CAAAA,CAAAA;AAMA,IAAMU,aAAAA,GAAgB,CAAA,GAAA,uBAAA,CAAA,YAAA,EAAA,oBAAA,EAAA,EAAA,EAGpBC,sBAAAA,CAHoB,OAAA,EAAtB,OAAsB,CAAtB;QAM0BX,O,GAAjBU,a","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ActivityIndicator } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Spinner extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    return (\n      <ActivityIndicator\n        ref={c => (this._root = c)}\n        {...this.props}\n        color={\n          this.props.color\n            ? this.props.color\n            : this.props.inverse\n            ? variables.inverseSpinnerColor\n            : variables.defaultSpinnerColor\n        }\n        size={this.props.size ? this.props.size : 'large'}\n      />\n    );\n  }\n}\n\nSpinner.propTypes = {\n  ...ActivityIndicator.propTypes,\n  color: PropTypes.string,\n  inverse: PropTypes.bool\n};\n\nconst StyledSpinner = connectStyle(\n  'NativeBase.Spinner',\n  {},\n  mapPropsToStyleNames\n)(Spinner);\n\nexport { StyledSpinner as Spinner };\n"]},"metadata":{},"sourceType":"script"}