{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IconNB = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/IconNB.js';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _lodash = require('lodash');\n\nvar _AntDesign = require(\"@expo/vector-icons/AntDesign\");\n\nvar _AntDesign2 = _interopRequireDefault(_AntDesign);\n\nvar _Entypo = require(\"@expo/vector-icons/Entypo\");\n\nvar _Entypo2 = _interopRequireDefault(_Entypo);\n\nvar _EvilIcons = require(\"@expo/vector-icons/EvilIcons\");\n\nvar _EvilIcons2 = _interopRequireDefault(_EvilIcons);\n\nvar _Feather = require(\"@expo/vector-icons/Feather\");\n\nvar _Feather2 = _interopRequireDefault(_Feather);\n\nvar _FontAwesome = require(\"@expo/vector-icons/FontAwesome\");\n\nvar _FontAwesome2 = _interopRequireDefault(_FontAwesome);\n\nvar _FontAwesome3 = require(\"@expo/vector-icons/FontAwesome5\");\n\nvar _FontAwesome4 = _interopRequireDefault(_FontAwesome3);\n\nvar _Fontisto = require(\"@expo/vector-icons/Fontisto\");\n\nvar _Fontisto2 = _interopRequireDefault(_Fontisto);\n\nvar _Foundation = require(\"@expo/vector-icons/Foundation\");\n\nvar _Foundation2 = _interopRequireDefault(_Foundation);\n\nvar _Ionicons = require(\"@expo/vector-icons/Ionicons\");\n\nvar _Ionicons2 = _interopRequireDefault(_Ionicons);\n\nvar _MaterialCommunityIcons = require(\"@expo/vector-icons/MaterialCommunityIcons\");\n\nvar _MaterialCommunityIcons2 = _interopRequireDefault(_MaterialCommunityIcons);\n\nvar _MaterialIcons = require(\"@expo/vector-icons/MaterialIcons\");\n\nvar _MaterialIcons2 = _interopRequireDefault(_MaterialIcons);\n\nvar _Octicons = require(\"@expo/vector-icons/Octicons\");\n\nvar _Octicons2 = _interopRequireDefault(_Octicons);\n\nvar _SimpleLineIcons = require(\"@expo/vector-icons/SimpleLineIcons\");\n\nvar _SimpleLineIcons2 = _interopRequireDefault(_SimpleLineIcons);\n\nvar _Zocial = require(\"@expo/vector-icons/Zocial\");\n\nvar _Zocial2 = _interopRequireDefault(_Zocial);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar IconNB = function (_Component) {\n  _inherits(IconNB, _Component);\n\n  function IconNB(props) {\n    _classCallCheck(this, IconNB);\n\n    var _this = _possibleConstructorReturn(this, (IconNB.__proto__ || Object.getPrototypeOf(IconNB)).call(this, props));\n\n    _this.setIcon(props.type);\n\n    return _this;\n  }\n\n  _createClass(IconNB, [{\n    key: 'UNSAFE_componentWillUpdate',\n    value: function UNSAFE_componentWillUpdate(nextProps) {\n      if (nextProps.type && this.props.type !== nextProps.type) {\n        this.setIcon(nextProps.type);\n      }\n    }\n  }, {\n    key: 'setIcon',\n    value: function setIcon(iconType) {\n      if (iconType === undefined && (0, _lodash.get)(this, 'context.theme')) {\n        iconType = this.context.theme['@@shoutem.theme/themeStyle'].variables.iconFamily;\n      }\n\n      switch (iconType) {\n        case 'AntDesign':\n          this.Icon = _AntDesign2.default;\n          break;\n\n        case 'Entypo':\n          this.Icon = _Entypo2.default;\n          break;\n\n        case 'EvilIcons':\n          this.Icon = _EvilIcons2.default;\n          break;\n\n        case 'Feather':\n          this.Icon = _Feather2.default;\n          break;\n\n        case 'FontAwesome':\n          this.Icon = _FontAwesome2.default;\n          break;\n\n        case 'FontAwesome5':\n          this.Icon = _FontAwesome4.default;\n          break;\n\n        case 'Fontisto':\n          this.Icon = _Fontisto2.default;\n          break;\n\n        case 'Foundation':\n          this.Icon = _Foundation2.default;\n          break;\n\n        case 'Ionicons':\n          this.Icon = _Ionicons2.default;\n          break;\n\n        case 'MaterialCommunityIcons':\n          this.Icon = _MaterialCommunityIcons2.default;\n          break;\n\n        case 'MaterialIcons':\n          this.Icon = _MaterialIcons2.default;\n          break;\n\n        case 'Octicons':\n          this.Icon = _Octicons2.default;\n          break;\n\n        case 'SimpleLineIcons':\n          this.Icon = _SimpleLineIcons2.default;\n          break;\n\n        case 'Zocial':\n          this.Icon = _Zocial2.default;\n          break;\n\n        default:\n          this.Icon = _Ionicons2.default;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement(this.Icon, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }));\n    }\n  }]);\n\n  return IconNB;\n}(_react.Component);\n\nIconNB.contextTypes = {\n  theme: _propTypes2.default.object\n};\nIconNB.propTypes = {\n  type: _propTypes2.default.oneOf(['AntDesign', 'Entypo', 'EvilIcons', 'Feather', 'FontAwesome', 'FontAwesome5', 'Foundation', 'Ionicons', 'MaterialCommunityIcons', 'MaterialIcons', 'Octicons', 'SimpleLineIcons', 'Zocial'])\n};\nvar StyledIconNB = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.IconNB', {}, _mapPropsToStyleNames2.default)(IconNB);\nexports.IconNB = StyledIconNB;","map":{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["IconNB","Component","contextTypes","theme","PropTypes","props","nextProps","iconType","AntDesign","Entypo","EvilIcons","Feather","FontAwesome","FontAwesome5","Fontisto","Foundation","Ionicons","MaterialCommunityIcons","MaterialIcons","Octicons","SimpleLineIcons","Zocial","type","StyledIconNB","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport { get } from 'lodash';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport EvilIcons from 'react-native-vector-icons/EvilIcons';\nimport Feather from 'react-native-vector-icons/Feather';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\nimport Fontisto from 'react-native-vector-icons/Fontisto';\nimport Foundation from 'react-native-vector-icons/Foundation';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\nimport Zocial from 'react-native-vector-icons/Zocial';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass IconNB extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.setIcon(props.type);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillUpdate(nextProps) {\n    if (nextProps.type && this.props.type !== nextProps.type) {\n      this.setIcon(nextProps.type);\n    }\n  }\n\n  setIcon(iconType) {\n    if (iconType === undefined && get(this, 'context.theme')) {\n      // eslint-disable-next-line\n      iconType = this.context.theme['@@shoutem.theme/themeStyle'].variables\n        .iconFamily;\n    }\n    switch (iconType) {\n      case 'AntDesign':\n        this.Icon = AntDesign;\n        break;\n      case 'Entypo':\n        this.Icon = Entypo;\n        break;\n      case 'EvilIcons':\n        this.Icon = EvilIcons;\n        break;\n      case 'Feather':\n        this.Icon = Feather;\n        break;\n      case 'FontAwesome':\n        this.Icon = FontAwesome;\n        break;\n      case 'FontAwesome5':\n        this.Icon = FontAwesome5;\n        break;\n      case 'Fontisto':\n        this.Icon = Fontisto;\n        break;\n      case 'Foundation':\n        this.Icon = Foundation;\n        break;\n      case 'Ionicons':\n        this.Icon = Ionicons;\n        break;\n      case 'MaterialCommunityIcons':\n        this.Icon = MaterialCommunityIcons;\n        break;\n      case 'MaterialIcons':\n        this.Icon = MaterialIcons;\n        break;\n      case 'Octicons':\n        this.Icon = Octicons;\n        break;\n      case 'SimpleLineIcons':\n        this.Icon = SimpleLineIcons;\n        break;\n      case 'Zocial':\n        this.Icon = Zocial;\n        break;\n      default:\n        this.Icon = Ionicons;\n    }\n  }\n\n  render() {\n    return <this.Icon ref={c => (this._root = c)} {...this.props} />;\n  }\n}\n\nIconNB.propTypes = {\n  type: PropTypes.oneOf([\n    'AntDesign',\n    'Entypo',\n    'EvilIcons',\n    'Feather',\n    'FontAwesome',\n    'FontAwesome5',\n    'Foundation',\n    'Ionicons',\n    'MaterialCommunityIcons',\n    'MaterialIcons',\n    'Octicons',\n    'SimpleLineIcons',\n    'Zocial'\n  ])\n};\n\nconst StyledIconNB = connectStyle(\n  'NativeBase.IconNB',\n  {},\n  mapPropsToStyleNames\n)(IconNB);\n\nexport { StyledIconNB as IconNB };\n"]},"metadata":{},"sourceType":"script"}