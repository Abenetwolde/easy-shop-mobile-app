{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Radio = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/Radio.js';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _Ionicons = require(\"@expo/vector-icons/Ionicons\");\n\nvar _Ionicons2 = _interopRequireDefault(_Ionicons);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _computeProps = require(\"../utils/computeProps\");\n\nvar _computeProps2 = _interopRequireDefault(_computeProps);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Radio = function (_Component) {\n  _inherits(Radio, _Component);\n\n  function Radio() {\n    _classCallCheck(this, Radio);\n\n    return _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).apply(this, arguments));\n  }\n\n  _createClass(Radio, [{\n    key: 'prepareRootProps',\n    value: function prepareRootProps() {\n      var defaultProps = {\n        standardStyle: false\n      };\n      return (0, _computeProps2.default)(this.props, defaultProps);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }), _reactNative.Platform.OS === 'ios' && !this.props.standardStyle ? this.props.selected && _react2.default.createElement(_Ionicons2.default, {\n        style: {\n          color: this.props.selectedColor ? this.props.selectedColor : variables.radioColor,\n          lineHeight: 25,\n          height: 20,\n          fontSize: variables.radioBtnSize\n        },\n        name: 'ios-checkmark',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }) : _react2.default.createElement(_Ionicons2.default, {\n        style: {\n          color: _reactNative.Platform.OS === 'ios' ? this.props.selected ? this.props.selectedColor ? this.props.selectedColor : variables.radioColor : this.props.color ? this.props.color : undefined : this.props.selected ? this.props.selectedColor ? this.props.selectedColor : variables.radioSelectedColorAndroid : this.props.color ? this.props.color : undefined,\n          lineHeight: variables.radioBtnLineHeight,\n          fontSize: variables.radioBtnSize\n        },\n        name: _reactNative.Platform.OS === 'ios' ? this.props.selected ? 'ios-radio-button-on' : 'ios-radio-button-off' : this.props.selected ? 'md-radio-button-on' : 'md-radio-button-off',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }));\n    }\n  }]);\n\n  return Radio;\n}(_react.Component);\n\nRadio.contextTypes = {\n  theme: _propTypes2.default.object\n};\nRadio.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  selected: _propTypes2.default.bool,\n  standardStyle: _propTypes2.default.bool\n});\nvar StyledRadio = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Radio', {}, _mapPropsToStyleNames2.default)(Radio);\nexports.Radio = StyledRadio;","map":{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","Component","contextTypes","theme","PropTypes","defaultProps","standardStyle","variables","variable","Platform","color","lineHeight","height","fontSize","TouchableOpacity","selected","StyledRadio","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport computeProps from '../utils/computeProps';\n\nclass Radio extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  prepareRootProps() {\n    const defaultProps = {\n      standardStyle: false\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <TouchableOpacity\n        ref={c => (this._root = c)}\n        {...this.prepareRootProps()}\n      >\n        {Platform.OS === 'ios' && !this.props.standardStyle ? (\n          this.props.selected && (\n            <Icon\n              style={{\n                color: this.props.selectedColor\n                  ? this.props.selectedColor\n                  : variables.radioColor,\n                lineHeight: 25,\n                height: 20,\n                fontSize: variables.radioBtnSize\n              }}\n              name=\"ios-checkmark\"\n            />\n          )\n        ) : (\n          <Icon\n            style={{\n              color:\n                Platform.OS === 'ios'\n                  ? this.props.selected\n                    ? this.props.selectedColor\n                      ? this.props.selectedColor\n                      : variables.radioColor\n                    : this.props.color\n                    ? this.props.color\n                    : undefined\n                  : this.props.selected\n                  ? this.props.selectedColor\n                    ? this.props.selectedColor\n                    : variables.radioSelectedColorAndroid\n                  : this.props.color\n                  ? this.props.color\n                  : undefined,\n              lineHeight: variables.radioBtnLineHeight,\n              fontSize: variables.radioBtnSize\n            }}\n            name={\n              Platform.OS === 'ios'\n                ? this.props.selected\n                  ? 'ios-radio-button-on'\n                  : 'ios-radio-button-off'\n                : this.props.selected\n                ? 'md-radio-button-on'\n                : 'md-radio-button-off'\n            }\n          />\n        )}\n      </TouchableOpacity>\n    );\n  }\n}\n\nRadio.propTypes = {\n  ...TouchableOpacity.propTypes,\n  selected: PropTypes.bool,\n  standardStyle: PropTypes.bool\n};\n\nconst StyledRadio = connectStyle('NativeBase.Radio', {}, mapPropsToStyleNames)(\n  Radio\n);\n\nexport { StyledRadio as Radio };\n"]},"metadata":{},"sourceType":"script"}