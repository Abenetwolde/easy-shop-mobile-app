{"ast":null,"code":"import * as React from 'react';\nimport NavigationContext from \"./NavigationContext\";\n\nexport default function useNavigation() {\n  var navigation = React.useContext(NavigationContext);\n  if (navigation === undefined) {\n    throw new Error(\"Couldn't find a navigation object. Is your component inside a screen in a navigator?\");\n  }\n  return navigation;\n}","map":{"version":3,"sources":["useNavigation.tsx"],"names":["React","NavigationContext","useNavigation","navigation","useContext","undefined","Error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,iBAAP;;AAQA,eAAe,SAASC,aAAT,GAER;EACL,IAAMC,UAAU,GAAGH,KAAK,CAACI,UAANJ,CAAiBC,iBAAjBD,CAAnB;EAEA,IAAIG,UAAU,KAAKE,SAAnB,EAA8B;IAC5B,MAAM,IAAIC,KAAJ,CACJ,sFADI,CAAN;EAGD;EAED,OAAOH,UAAP;AACD","sourcesContent":["import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport type { NavigationProp } from './types';\n\n/**\n * Hook to access the navigation prop of the parent screen anywhere.\n *\n * @returns Navigation prop of the parent screen.\n */\nexport default function useNavigation<\n  T extends NavigationProp<ParamListBase>\n>(): T {\n  const navigation = React.useContext(NavigationContext);\n\n  if (navigation === undefined) {\n    throw new Error(\n      \"Couldn't find a navigation object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return navigation as T;\n}\n"]},"metadata":{},"sourceType":"module"}