{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from \"../base\";\nimport AnimatedNode from \"../core/AnimatedNode\";\nvar procColor = proc(function (r, g, b, a) {\n  var color = add(multiply(a, 1 << 24), multiply(round(r), 1 << 16), multiply(round(g), 1 << 8), round(b));\n  if (Platform.OS === 'android') {\n    return cond(lessThan(color, 1 << 31 >>> 0), color, sub(color, Math.pow(2, 32)));\n  }\n  return color;\n});\nexport default function color(r, g, b) {\n  var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  if (Platform.OS === 'web') {\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n  return procColor(r, g, b, a);\n}","map":{"version":3,"sources":["color.js"],"names":["add","cond","concat","lessThan","multiply","round","sub","proc","AnimatedNode","procColor","r","g","b","a","color","Platform","OS","Math","pow"],"mappings":";AAEA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,QAAtC,EAAgDC,KAAhD,EAAuDC,GAAvD,EAA4DC,IAA5D;AACA,OAAOC,YAAP;AAEA,IAAMC,SAAS,GAAGF,IAAI,CAAC,UAASG,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqB;EAC1C,IAAMC,KAAK,GAAGd,GAAG,CACfI,QAAQ,CAACS,CAAD,EAAI,CAAA,IAAK,EAAT,CADO,EAEfT,QAAQ,CAACC,KAAK,CAACK,CAAD,CAAN,EAAW,CAAA,IAAK,EAAhB,CAFO,EAGfN,QAAQ,CAACC,KAAK,CAACM,CAAD,CAAN,EAAW,CAAA,IAAK,CAAhB,CAHO,EAIfN,KAAK,CAACO,CAAD,CAJU,CAAjB;EAOA,IAAIG,QAAQ,CAACC,EAATD,KAAgB,SAApB,EAA+B;IAE7B,OAAOd,IAAI,CACTE,QAAQ,CAACW,KAAD,EAAS,CAAA,IAAK,EAAN,KAAc,CAAtB,CADC,EAETA,KAFS,EAGTR,GAAG,CAACQ,KAAD,EAAQG,IAAI,CAACC,GAALD,CAAS,CAATA,EAAY,EAAZA,CAAR,CAHM,CAAX;EAKD;EACD,OAAOH,KAAP;AACD,CAjBqB,CAAtB;AAmBA,eAAe,SAASA,KAAT,CAAeJ,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAA+B;EAAA,IAAPC,CAAC,uEAAG,CAA5B;EACb,IAAIE,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;IAEzB,OAAOb,MAAM,CAAC,OAAD,EAAUQ,CAAV,EAAa,GAAb,EAAkBC,CAAlB,EAAqB,GAArB,EAA0BC,CAA1B,EAA6B,GAA7B,EAAkCC,CAAlC,EAAqC,GAArC,CAAb;EACD;EAED,IAAIA,CAAC,YAAYL,YAAjB,EAA+B;IAC7BK,CAAC,GAAGR,KAAK,CAACD,QAAQ,CAACS,CAAD,EAAI,GAAJ,CAAT,CAATA;EACD,CAFD,MAEO;IACLA,CAAC,GAAGI,IAAI,CAACZ,KAALY,CAAWJ,CAAC,GAAG,GAAfI,CAAJJ;EACD;EAED,OAAOJ,SAAS,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAhB;AACD","sourcesContent":["import { Platform } from 'react-native';\n\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\n\nconst procColor = proc(function(r, g, b, a) {\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(round(r), 1 << 16),\n    multiply(round(g), 1 << 8),\n    round(b)\n  );\n  \n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n});\n\nexport default function color(r, g, b, a = 1) {\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}\n"]},"metadata":{},"sourceType":"module"}