{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTabBar = undefined;\nvar _jsxFileName = 'src/basic/Tabs/DefaultTabBar.js';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _platform = require(\"./../../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _TabHeading = require(\"../TabHeading\");\n\nvar _Text = require(\"../Text\");\n\nvar _TabContainer = require(\"../TabContainer\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar StyleSheet = ReactNative.StyleSheet,\n    View = ReactNative.View,\n    Animated = ReactNative.Animated,\n    Platform = ReactNative.Platform;\n\nvar Button = require(\"./Button\");\n\nvar DefaultTabBar = (0, _createReactClass2.default)({\n  displayName: 'DefaultTabBar',\n  propTypes: {\n    goToPage: _propTypes2.default.func,\n    activeTab: _propTypes2.default.number,\n    tabs: _propTypes2.default.array,\n    backgroundColor: _propTypes2.default.string,\n    activeTextColor: _propTypes2.default.string,\n    inactiveTextColor: _propTypes2.default.string,\n    disabledTextColor: _propTypes2.default.string,\n    tabStyle: _utils.ViewPropTypes.style,\n    renderTab: _propTypes2.default.func,\n    underlineStyle: _utils.ViewPropTypes.style,\n    tabContainerStyle: _utils.ViewPropTypes.style,\n    accessible: _propTypes2.default.array,\n    accessibilityLabel: _propTypes2.default.array\n  },\n  contextTypes: {\n    theme: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activeTextColor: _platform2.default.topTabBarActiveTextColor,\n      inactiveTextColor: _platform2.default.topTabBarTextColor,\n      disabledTextColor: _platform2.default.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: _platform2.default.tabFontSize\n    };\n  },\n  renderTabOption: function renderTabOption(name, page) {},\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle, tabFontSize, disabled, disabledTextColor, accessible, accessibilityLabel) {\n    var headerContent = typeof name !== 'string' ? name.props.children : undefined;\n    var _props = this.props,\n        activeTextColor = _props.activeTextColor,\n        inactiveTextColor = _props.inactiveTextColor;\n    var fontWeight = isTabActive ? 'bold' : 'normal';\n    var isDisabled = disabled !== undefined;\n    var textColor = void 0;\n\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor;\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor;\n    }\n\n    var accessibilityState = {\n      disabled: isDisabled ? true : false,\n      selected: isTabActive ? true : false\n    };\n\n    if (typeof name === 'string') {\n      return _react2.default.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        disabled: isDisabled,\n        key: name,\n        accessible: accessible,\n        accessibilityRole: 'tab',\n        accessibilityLabel: accessibilityLabel,\n        accessibilityState: accessibilityState,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        style: [{\n          fontSize: tabFontSize\n        }, isTabActive ? activeTextStyle : textStyle, {\n          color: textColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, name)));\n    }\n\n    return _react2.default.createElement(Button, {\n      style: {\n        flex: 1\n      },\n      disabled: isDisabled,\n      key: _lodash2.default.random(1.2, 5.2),\n      accessible: accessible,\n      accessibilityRole: 'tab',\n      accessibilityLabel: accessibilityLabel,\n      accessibilityState: accessibilityState,\n      onPress: function onPress() {\n        return onPressHandler(page);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      }\n    }, _react2.default.createElement(_TabHeading.TabHeading, {\n      style: tabHeaderStyle,\n      active: isTabActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, headerContent));\n  },\n  render: function render() {\n    var _this = this;\n\n    var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n    var platformStyle = variables.platformStyle;\n    var containerWidth = this.props.containerWidth;\n    var numberOfTabs = this.props.tabs.length;\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return _react2.default.createElement(_TabContainer.TabContainer, {\n      style: [{\n        backgroundColor: variables.tabDefaultBg\n      }, this.props.tabContainerStyle ? this.props.tabContainerStyle : {}],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page], variables.tabFontSize, _this.props.disabled[page], _this.props.disabledTextColor, _this.props.accessible[page], _this.props.accessibilityLabel[page]);\n    }), _react2.default.createElement(Animated.View, {\n      style: [tabUnderlineStyle, {\n        left: left\n      }, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      }\n    }));\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.DefaultTabBar', {}, _mapPropsToStyleNames2.default)(DefaultTabBar);\nexports.DefaultTabBar = StyledTab;","map":{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["StyleSheet","View","Animated","Platform","ReactNative","Button","require","DefaultTabBar","propTypes","goToPage","PropTypes","activeTab","tabs","backgroundColor","activeTextColor","inactiveTextColor","disabledTextColor","tabStyle","ViewPropTypes","renderTab","underlineStyle","tabContainerStyle","accessible","accessibilityLabel","contextTypes","theme","getDefaultProps","variable","tabFontSize","renderTabOption","headerContent","name","fontWeight","isTabActive","isDisabled","disabled","textColor","activeTextStyle","textStyle","accessibilityState","selected","flex","onPressHandler","fontSize","color","_","render","variables","platformStyle","containerWidth","numberOfTabs","tabUnderlineStyle","position","width","height","bottom","left","inputRange","outputRange","StyledTab","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport _ from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nimport { ViewPropTypes } from '../../utils';\nconst ReactNative = require('react-native');\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require('./Button');\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    disabledTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style,\n    accessible: PropTypes.array,\n    accessibilityLabel: PropTypes.array\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      disabledTextColor: variable.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize,\n    disabled,\n    disabledTextColor,\n    accessible,\n    accessibilityLabel\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n    const isDisabled = disabled !== undefined;\n    let textColor;\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor; // activeTextColor: default color for active Tab\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor; // inactiveTextColor: default color for inactive Tab\n    }\n    const accessibilityState = {\n      disabled: isDisabled ? true : false,\n      selected: isTabActive ? true : false,\n    };\n    if (typeof name === 'string') {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          disabled={isDisabled}\n          key={name}\n          accessible={accessible}\n          accessibilityRole='tab'\n          accessibilityLabel={accessibilityLabel}\n          accessibilityState={accessibilityState}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                { fontSize: tabFontSize },\n                isTabActive ? activeTextStyle : textStyle,\n                { color: textColor }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        style={{ flex: 1 }}\n        disabled={isDisabled}\n        key={_.random(1.2, 5.2)}\n        accessible={accessible}\n        accessibilityRole='tab'\n        accessibilityLabel={accessibilityLabel}\n        accessibilityState={accessibilityState}\n        onPress={() => onPressHandler(page)}\n      >\n        <TabHeading style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer\n        style={[\n          { backgroundColor: variables.tabDefaultBg },\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\n        ]}\n      >\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page],\n            variables.tabFontSize,\n            this.props.disabled[page],\n            this.props.disabledTextColor,\n            this.props.accessible[page],\n            this.props.accessibilityLabel[page]\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.DefaultTabBar',\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]},"metadata":{},"sourceType":"script"}