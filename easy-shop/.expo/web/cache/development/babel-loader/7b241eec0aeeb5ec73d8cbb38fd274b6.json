{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport AnimatedNode, { getCallID, setCallID } from \"./AnimatedNode\";\nimport { adapt } from \"./AnimatedBlock\";\nimport { val } from \"../val\";\nimport invariant from 'fbjs/lib/invariant';\nvar AnimatedCallFunc = function (_AnimatedNode) {\n  _inherits(AnimatedCallFunc, _AnimatedNode);\n  var _super = _createSuper(AnimatedCallFunc);\n  function AnimatedCallFunc(what, args, params) {\n    var _this;\n    _classCallCheck(this, AnimatedCallFunc);\n    invariant(what instanceof AnimatedNode, \"Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got \".concat(what));\n    invariant(args.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got \".concat(args));\n    invariant(params.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got \".concat(params));\n    _this = _super.call(this, {\n      type: 'callfunc',\n      what: what,\n      args: args,\n      params: params\n    }, _toConsumableArray(args));\n    _defineProperty(_assertThisInitialized(_this), \"_previousCallID\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_what\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_args\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_params\", void 0);\n    _this._what = what;\n    _this._args = args;\n    _this._params = params;\n    return _this;\n  }\n  _createClass(AnimatedCallFunc, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedCallFunc, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"beginContext\",\n    value: function beginContext() {\n      var _this2 = this;\n      this._previousCallID = getCallID();\n      setCallID(getCallID() + '/' + this.__nodeID);\n      this._params.forEach(function (param, index) {\n        param.beginContext(_this2._args[index], _this2._previousCallID);\n      });\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this._params.forEach(function (param, index) {\n        param.endContext();\n      });\n      setCallID(this._previousCallID);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      this.beginContext();\n      var value = val(this._what);\n      this.endContext();\n      return value;\n    }\n  }]);\n  return AnimatedCallFunc;\n}(AnimatedNode);\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(proc, args.map(function (p) {\n    return adapt(p);\n  }), params);\n}","map":{"version":3,"sources":["AnimatedCallFunc.js"],"names":["AnimatedNode","getCallID","setCallID","adapt","val","invariant","AnimatedCallFunc","constructor","what","args","params","every","el","type","_what","_args","_params","toString","__nodeID","beginContext","_previousCallID","forEach","param","index","endContext","__onEvaluate","value","createAnimatedCallFunc","proc","map","p"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,YAAP,IAAuBC,SAAvB,EAAkCC,SAAlC;AACA,SAASC,KAAT;AACA,SAASC,GAAT;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAAA,IAEMC,gBAAN;EAAA;EAAA;EAKEC,0BAAYC,IAAD,EAAOC,IAAP,EAAaC,MAAb,EAAqB;IAAA;IAAA;IAC9BL,SAAS,CACPG,IAAI,YAAYR,YADT,EAAA,sFAAA,CAAA,MAAA,CAEgFQ,IAFhF,CAAA,CAATH;IAIAA,SAAS,CACPI,IAAI,CAACE,KAALF,CAAWG,UAAAA,EAAE;MAAA,OAAIA,EAAE,YAAYZ,YAA/BS;IAAAA,EADO,EAAA,4FAAA,CAAA,MAAA,CAEsFA,IAFtF,CAAA,CAATJ;IAIAA,SAAS,CACPK,MAAM,CAACC,KAAPD,CAAaE,UAAAA,EAAE;MAAA,OAAIA,EAAE,YAAYZ,YAAjCU;IAAAA,EADO,EAAA,8FAAA,CAAA,MAAA,CAEwFA,MAFxF,CAAA,CAATL;IAIA,0BACE;MACEQ,IAAI,EAAE,UADR;MAEEL,IAFF,EAEEA,IAFF;MAGEC,IAHF,EAGEA,IAHF;MAIEC,MAAAA,EAAAA;IAJF,CADF,qBAOMD,IAPN;IAb8B,eAAA,gCAAA,iBAAA,EAAA,KAAA,CAAA,CAAA;IAAA,eAAA,gCAAA,OAAA,EAAA,KAAA,CAAA,CAAA;IAAA,eAAA,gCAAA,OAAA,EAAA,KAAA,CAAA,CAAA;IAAA,eAAA,gCAAA,SAAA,EAAA,KAAA,CAAA,CAAA;IAsB9B,MAAKK,KAAL,GAAaN,IAAb;IACA,MAAKO,KAAL,GAAaN,IAAb;IACA,MAAKO,OAAL,GAAeN,MAAf;IAAA;EACD;EAAA;IAAA;IAAA,OAEDO,oBAAW;MACT,OAAA,wBAAA,CAAA,MAAA,CAAgC,IAAA,CAAKC,QAArC,CAAA;IACD;EAAA;IAAA;IAAA,OAEDC,wBAAe;MAAA;MACb,IAAA,CAAKC,eAAL,GAAuBnB,SAAS,EAAhC;MACAC,SAAS,CAACD,SAAS,EAAA,GAAK,GAAdA,GAAoB,IAAA,CAAKiB,QAA1B,CAAThB;MAEA,IAAA,CAAKc,OAAL,CAAaK,OAAb,CAAqB,UAACC,KAAD,EAAQC,KAAR,EAAkB;QACrCD,KAAK,CAACH,YAANG,CAAmB,MAAA,CAAKP,KAAL,CAAWQ,KAAX,CAAnBD,EAAsC,MAAA,CAAKF,eAA3CE,CAAAA;MACD,CAFD,CAAA;IAGD;EAAA;IAAA;IAAA,OAEDE,sBAAa;MACX,IAAA,CAAKR,OAAL,CAAaK,OAAb,CAAqB,UAACC,KAAD,EAAQC,KAAR,EAAkB;QACrCD,KAAK,CAACE,UAANF,EAAAA;MACD,CAFD,CAAA;MAGApB,SAAS,CAAC,IAAA,CAAKkB,eAAN,CAATlB;IACD;EAAA;IAAA;IAAA,OAEDuB,wBAAe;MACb,IAAA,CAAKN,YAAL,EAAA;MACA,IAAMO,KAAK,GAAGtB,GAAG,CAAC,IAAA,CAAKU,KAAN,CAAjB;MACA,IAAA,CAAKU,UAAL,EAAA;MACA,OAAOE,KAAP;IACD;EAAA;EAAA;AAAA,EAzD4B1B,YAA/B;AA4DA,OAAO,SAAS2B,sBAAT,CAAgCC,IAAhC,EAAsCnB,IAAtC,EAA4CC,MAA5C,EAAoD;EACzD,OAAO,IAAIJ,gBAAJ,CAAqBsB,IAArB,EAA2BnB,IAAI,CAACoB,GAALpB,CAASqB,UAAAA,CAAC;IAAA,OAAI3B,KAAK,CAAC2B,CAAD,CAAnBrB;EAAAA,EAA3B,EAAoDC,MAApD,CAAP;AACD","sourcesContent":["import AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport { adapt } from './AnimatedBlock';\nimport { val } from '../val';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedCallFunc extends AnimatedNode {\n  _previousCallID;\n  _what;\n  _args;\n  _params;\n  constructor(what, args, params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    invariant(\n      args.every(el => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got ${args}`\n    );\n    invariant(\n      params.every(el => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got ${params}`\n    );\n    super(\n      {\n        type: 'callfunc',\n        what,\n        args,\n        params,\n      },\n      [...args]\n    );\n    this._what = what;\n    this._args = args;\n    this._params = params;\n  }\n\n  toString() {\n    return `AnimatedCallFunc, id: ${this.__nodeID}`;\n  }\n\n  beginContext() {\n    this._previousCallID = getCallID();\n    setCallID(getCallID() + '/' + this.__nodeID);\n\n    this._params.forEach((param, index) => {\n      param.beginContext(this._args[index], this._previousCallID);\n    });\n  }\n\n  endContext() {\n    this._params.forEach((param, index) => {\n      param.endContext();\n    });\n    setCallID(this._previousCallID);\n  }\n\n  __onEvaluate() {\n    this.beginContext();\n    const value = val(this._what);\n    this.endContext();\n    return value;\n  }\n}\n\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(proc, args.map(p => adapt(p)), params);\n}\n"]},"metadata":{},"sourceType":"module"}