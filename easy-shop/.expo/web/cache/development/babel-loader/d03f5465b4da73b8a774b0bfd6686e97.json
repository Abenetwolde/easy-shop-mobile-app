{"ast":null,"code":"import { setRecoveryPropsToSave } from \"./ErroRecoveryStore\";\nimport ExpoErrorRecovery from \"./ExpoErrorRecovery\";\nimport \"./ErrorRecovery.fx\";\nexport var recoveredProps = _getRecoveredProps();\nexport function setRecoveryProps(props) {\n  setRecoveryPropsToSave(props);\n}\nfunction _getRecoveredProps() {\n  if (ExpoErrorRecovery.recoveredProps) {\n    return JSON.parse(ExpoErrorRecovery.recoveredProps);\n  }\n  return null;\n}","map":{"version":3,"sources":["../src/ErrorRecovery.ts"],"names":[],"mappings":"AAAA,SAAS,sBAAsB;AAC/B,OAAO,iBAAiB;AACxB;AAGA,OAAO,IAAM,cAAc,GAAG,kBAAkB,EAAE;AAgBlD,OAAM,SAAU,gBAAgB,CAAC,KAAyB,EAAA;EACxD,sBAAsB,CAAC,KAAK,CAAC;AAC/B;AAEA,SAAS,kBAAkB,GAAA;EACzB,IAAI,iBAAiB,CAAC,cAAc,EAAE;IACpC,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,cAAc,CAAC;EACpD;EACD,OAAO,IAAI;AACb","sourcesContent":["import { setRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\nimport './ErrorRecovery.fx';\n\n// @docsMissing\nexport const recoveredProps = _getRecoveredProps();\n\n// @docsMissing\nexport type ErrorRecoveryProps = Record<string, any>;\n\n// @needsAudit\n/**\n * Set arbitrary error recovery props. If your project crashes in production as a result of a fatal\n * JS error, Expo will reload your project. If you've set these props, they'll be passed to your\n * reloaded project's initial props under `exp.errorRecovery`. Access to `localStorage` is required\n * on web, or else this will simply be a no-op.\n *\n * [Read more about error handling with Expo](/guides/errors).\n * @param props An object which will be passed to your reloaded project's initial props if the\n * project was reloaded as a result of a fatal JS error.\n */\nexport function setRecoveryProps(props: ErrorRecoveryProps): void {\n  setRecoveryPropsToSave(props);\n}\n\nfunction _getRecoveredProps(): ErrorRecoveryProps | null {\n  if (ExpoErrorRecovery.recoveredProps) {\n    return JSON.parse(ExpoErrorRecovery.recoveredProps);\n  }\n  return null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}