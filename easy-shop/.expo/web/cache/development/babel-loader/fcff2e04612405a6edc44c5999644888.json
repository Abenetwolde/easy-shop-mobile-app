{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar gestures = {};\nexport function getHandler(tag) {\n  if (tag in gestures) return gestures[tag];\n  throw new Error('No handler for tag ' + tag);\n}\nexport function createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error('Handler with tag ' + handlerTag + ' already exists');\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\nexport function dropGestureHandler(handlerTag) {\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\nexport function getNodes() {\n  return _objectSpread({}, gestures);\n}","map":{"version":3,"names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/node_modules/react-native-gesture-handler/web/NodeManager.js"],"sourcesContent":["let gestures = {};\n\nexport function getHandler(tag) {\n  if (tag in gestures) return gestures[tag];\n\n  throw new Error('No handler for tag ' + tag);\n}\n\nexport function createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error('Handler with tag ' + handlerTag + ' already exists');\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag) {\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"],"mappings":";;;AAAA,IAAIA,QAAQ,GAAG,CAAC,CAAC;AAEjB,OAAO,SAASC,UAAU,CAACC,GAAG,EAAE;EAC9B,IAAIA,GAAG,IAAIF,QAAQ,EAAE,OAAOA,QAAQ,CAACE,GAAG,CAAC;EAEzC,MAAM,IAAIC,KAAK,CAAC,qBAAqB,GAAGD,GAAG,CAAC;AAC9C;AAEA,OAAO,SAASE,oBAAoB,CAACC,UAAU,EAAEC,OAAO,EAAE;EACxD,IAAID,UAAU,IAAIL,QAAQ,EAAE;IAC1B,MAAM,IAAIG,KAAK,CAAC,mBAAmB,GAAGE,UAAU,GAAG,iBAAiB,CAAC;EACvE;EACAL,QAAQ,CAACK,UAAU,CAAC,GAAGC,OAAO;EAC9BN,QAAQ,CAACK,UAAU,CAAC,CAACA,UAAU,GAAGA,UAAU;AAC9C;AAEA,OAAO,SAASE,kBAAkB,CAACF,UAAU,EAAE;EAC7CJ,UAAU,CAACI,UAAU,CAAC,CAACG,OAAO,EAAE;EAChC,OAAOR,QAAQ,CAACK,UAAU,CAAC;AAC7B;AAEA,OAAO,SAASI,QAAQ,GAAG;EACzB,yBAAYT,QAAQ;AACtB"},"metadata":{},"sourceType":"module"}