{"ast":null,"code":"'use_strict';\n\nvar _lodash = require('lodash');\nvar _lodash2 = _interopRequireDefault(_lodash);\nvar _reactNative = require(\"react-native-web/dist/index\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nmodule.exports = function (incomingProps, defaultProps) {\n  var computedProps = {};\n  var clonedIncomingProps = _lodash2.default.clone(incomingProps);\n  delete clonedIncomingProps.children;\n  var incomingPropsStyle = incomingProps.style;\n  delete clonedIncomingProps.style;\n  if (incomingProps) {\n    _lodash2.default.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n  if (incomingPropsStyle) {\n    var computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _lodash2.default.forEach(incomingPropsStyle, function (style) {\n        if (typeof style === 'number') {\n          _lodash2.default.merge(computedPropsStyle, _reactNative.StyleSheet.flatten(style));\n        } else {\n          _lodash2.default.merge(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === 'number') {\n      computedPropsStyle = _reactNative.StyleSheet.flatten(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n    _lodash2.default.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n  return computedProps;\n};","map":{"version":3,"sources":["../../../src/utils/computeProps.js"],"names":["module","exports","incomingProps","defaultProps","computedProps","clonedIncomingProps","_","clone","children","incomingPropsStyle","style","assign","computedPropsStyle","Array","isArray","forEach","merge","StyleSheet","flatten"],"mappings":"AAAA,YAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA;;;;;;AAEAA,MAAAA,CAAOC,OAAPD,GAAiB,UAASE,aAAT,EAAwBC,YAAxB,EAAsC;EAErD,IAAIC,aAAAA,GAAgB,CAAA,CAApB;EAEA,IAAMC,mBAAAA,GAAsBC,QAAAA,CAAAA,OAAAA,CAAEC,KAAFD,CAAQJ,aAARI,CAA5B;EACA,OAAOD,mBAAAA,CAAoBG,QAA3B;EAEA,IAAMC,kBAAAA,GAAqBP,aAAAA,CAAcQ,KAAzC;EACA,OAAOL,mBAAAA,CAAoBK,KAA3B;EAEA,IAAIR,aAAJ,EAAmB;IACjBI,QAAAA,CAAAA,OAAAA,CAAEK,MAAFL,CAASF,aAATE,EAAwBH,YAAxBG,EAAsCJ,aAAtCI,CAAAA;EACD,CAFD,MAEO;IACLF,aAAAA,GAAgBD,YAAhBC;EACD;EAED,IAAIK,kBAAJ,EAAwB;IACtB,IAAIG,kBAAAA,GAAqB,CAAA,CAAzB;IACAR,aAAAA,CAAcM,KAAdN,GAAsB,CAAA,CAAtBA;IACA,IAAIS,KAAAA,CAAMC,OAAND,CAAcJ,kBAAdI,CAAJ,EAAuC;MACrCP,QAAAA,CAAAA,OAAAA,CAAES,OAAFT,CAAUG,kBAAVH,EAA8B,UAAA,KAAA,EAAS;QACrC,IAAI,OAAOI,KAAP,KAAiB,QAArB,EAA+B;UAC7BJ,QAAAA,CAAAA,OAAAA,CAAEU,KAAFV,CAAQM,kBAARN,EAA4BW,YAAAA,CAAAA,UAAAA,CAAWC,OAAXD,CAAmBP,KAAnBO,CAA5BX,CAAAA;QACD,CAFD,MAEO;UACLA,QAAAA,CAAAA,OAAAA,CAAEU,KAAFV,CAAQM,kBAARN,EAA4BI,KAA5BJ,CAAAA;QACD;MACF,CANDA,CAAAA;IAOD,CARD,MAQO,IAAI,OAAOG,kBAAP,KAA8B,QAAlC,EAA4C;MACjDG,kBAAAA,GAAqBK,YAAAA,CAAAA,UAAAA,CAAWC,OAAXD,CAAmBR,kBAAnBQ,CAArBL;IACD,CAFM,MAEA;MACLA,kBAAAA,GAAqBH,kBAArBG;IACD;IAEDN,QAAAA,CAAAA,OAAAA,CAAEU,KAAFV,CAAQF,aAAAA,CAAcM,KAAtBJ,EAA6BH,YAAAA,CAAaO,KAA1CJ,EAAiDM,kBAAjDN,CAAAA;EACD;EACD,OAAOF,aAAP;AACD,CApCDJ","sourcesContent":["'use_strict';\nimport _ from 'lodash';\nimport { StyleSheet } from 'react-native';\n\nmodule.exports = function(incomingProps, defaultProps) {\n  // External props has a higher precedence\n  let computedProps = {};\n\n  const clonedIncomingProps = _.clone(incomingProps);\n  delete clonedIncomingProps.children;\n\n  const incomingPropsStyle = incomingProps.style;\n  delete clonedIncomingProps.style;\n\n  if (incomingProps) {\n    _.assign(computedProps, defaultProps, incomingProps);\n  } else {\n    computedProps = defaultProps;\n  }\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    let computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, style => {\n        if (typeof style === 'number') {\n          _.merge(computedPropsStyle, StyleSheet.flatten(style));\n        } else {\n          _.merge(computedPropsStyle, style);\n        }\n      });\n    } else if (typeof incomingPropsStyle === 'number') {\n      computedPropsStyle = StyleSheet.flatten(incomingPropsStyle);\n    } else {\n      computedPropsStyle = incomingPropsStyle;\n    }\n\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n  return computedProps;\n};\n"]},"metadata":{},"sourceType":"script"}