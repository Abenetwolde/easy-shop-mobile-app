{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/Tabs/index.js';\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _createReactClass = require('create-react-class');\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\nvar _lodash = require('lodash');\nvar _lodash2 = _interopRequireDefault(_lodash);\nvar _utils = require(\"../../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar React = require('react');\nvar Component = React.Component;\nvar ReactNative = require(\"react-native-web/dist/index\");\nvar Dimensions = ReactNative.Dimensions,\n  View = ReactNative.View,\n  Animated = ReactNative.Animated,\n  ScrollView = ReactNative.ScrollView,\n  StyleSheet = ReactNative.StyleSheet,\n  Platform = ReactNative.Platform;\nvar SceneComponent = require(\"./SceneComponent\");\nvar _require = require(\"./DefaultTabBar\"),\n  DefaultTabBar = _require.DefaultTabBar;\nvar _require2 = require(\"./ScrollableTabBar\"),\n  ScrollableTabBar = _require2.ScrollableTabBar;\nvar ScrollableTabView = (0, _createReactClass2.default)({\n  displayName: 'ScrollableTabView',\n  statics: {\n    DefaultTabBar: DefaultTabBar,\n    ScrollableTabBar: ScrollableTabBar\n  },\n  propTypes: {\n    tabBarPosition: _propTypes2.default.oneOf(['top', 'bottom', 'overlayTop', 'overlayBottom']),\n    initialPage: _propTypes2.default.number,\n    page: _propTypes2.default.number,\n    onChangeTab: _propTypes2.default.func,\n    onScroll: _propTypes2.default.func,\n    renderTabBar: _propTypes2.default.any,\n    style: _utils.ViewPropTypes.style,\n    contentProps: _propTypes2.default.object,\n    scrollWithoutAnimation: _propTypes2.default.bool,\n    locked: _propTypes2.default.bool,\n    prerenderingSiblingsNumber: _propTypes2.default.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      tabBarPosition: 'top',\n      initialPage: 0,\n      page: -1,\n      onChangeTab: function onChangeTab() {},\n      onScroll: function onScroll() {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue: new Animated.Value(this.props.initialPage),\n      containerWidth: Dimensions.get('window').width,\n      sceneKeys: this.newSceneKeys({\n        currentPage: this.props.initialPage\n      })\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n    var scrollFn = function scrollFn() {\n      if (_this.scrollView) {\n        _this.state.scrollValue.setValue(_this.props.initialPage);\n      }\n    };\n    _utils.InteractionManager.runAfterInteractions(scrollFn);\n    this.scrollToTimer = setTimeout(function () {\n      if (_this.scrollView) {\n        _this.scrollView.scrollTo({\n          x: _this.props.initialPage * _this.state.containerWidth,\n          animated: false\n        });\n      }\n    });\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.scrollToTimer) {\n      clearTimeout(this.scrollToTimer);\n    }\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(props) {\n    if (props.children !== this.props.children) {\n      this.updateSceneKeys({\n        page: this.state.currentPage,\n        children: props.children\n      });\n    }\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\n      this.goToPage(props.page);\n    }\n  },\n  goToPage: function goToPage(pageNumber) {\n    var offset = pageNumber * this.state.containerWidth;\n    if (this.scrollView) {\n      this.scrollView.scrollTo({\n        x: offset,\n        y: 0,\n        animated: !this.props.scrollWithoutAnimation\n      });\n    }\n    var currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber)\n    });\n  },\n  renderTabBar: function renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    }\n    return React.createElement(DefaultTabBar, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      }\n    }));\n  },\n  updateSceneKeys: function updateSceneKeys(_ref) {\n    var page = _ref.page,\n      _ref$children = _ref.children,\n      children = _ref$children === undefined ? this.props.children : _ref$children,\n      _ref$callback = _ref.callback,\n      callback = _ref$callback === undefined ? function () {} : _ref$callback;\n    var newKeys = this.newSceneKeys({\n      previousKeys: this.state.sceneKeys,\n      currentPage: page,\n      children: children\n    });\n    this.setState({\n      currentPage: page,\n      sceneKeys: newKeys\n    }, callback);\n  },\n  newSceneKeys: function newSceneKeys(_ref2) {\n    var _this2 = this;\n    var _ref2$previousKeys = _ref2.previousKeys,\n      previousKeys = _ref2$previousKeys === undefined ? [] : _ref2$previousKeys,\n      _ref2$currentPage = _ref2.currentPage,\n      currentPage = _ref2$currentPage === undefined ? 0 : _ref2$currentPage,\n      _ref2$children = _ref2.children,\n      children = _ref2$children === undefined ? this.props.children : _ref2$children;\n    var newKeys = [];\n    this._children(children).forEach(function (child, idx) {\n      var key = _this2._makeSceneKey(child, idx);\n      if (_this2._keyExists(previousKeys, key) || _this2._shouldRenderSceneKey(idx, currentPage)) {\n        newKeys.push(key);\n      }\n    });\n    return newKeys;\n  },\n  _shouldRenderSceneKey: function _shouldRenderSceneKey(idx, currentPageKey) {\n    var numOfSibling = this.props.prerenderingSiblingsNumber;\n    return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;\n  },\n  _keyExists: function _keyExists(sceneKeys, key) {\n    return sceneKeys.find(function (sceneKey) {\n      return key === sceneKey;\n    });\n  },\n  _makeSceneKey: function _makeSceneKey(child, idx) {\n    return child.props.heading + '_' + idx;\n  },\n  renderScrollableContent: function renderScrollableContent() {\n    var _this3 = this;\n    var scenes = this._composeScenes();\n    return React.createElement(ScrollView, _extends({\n      horizontal: true,\n      pagingEnabled: true,\n      automaticallyAdjustContentInsets: false,\n      keyboardShouldPersistTaps: 'handled',\n      contentOffset: {\n        x: this.props.initialPage * this.state.containerWidth\n      },\n      ref: function ref(scrollView) {\n        _this3.scrollView = scrollView;\n      },\n      onScroll: function onScroll(e) {\n        var offsetX = e.nativeEvent.contentOffset.x;\n        _this3._updateScrollValue(offsetX / _this3.state.containerWidth);\n      },\n      onMomentumScrollBegin: this._onMomentumScrollBeginAndEnd,\n      onMomentumScrollEnd: this._onMomentumScrollBeginAndEnd,\n      scrollEventThrottle: 16,\n      scrollsToTop: false,\n      showsHorizontalScrollIndicator: false,\n      scrollEnabled: !this.props.locked,\n      directionalLockEnabled: true,\n      alwaysBounceVertical: false,\n      keyboardDismissMode: 'on-drag'\n    }, this.props.contentProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      }\n    }), scenes);\n  },\n  _composeScenes: function _composeScenes() {\n    var _this4 = this;\n    return this._children().map(function (child, idx) {\n      var key = _this4._makeSceneKey(child, idx);\n      return React.createElement(SceneComponent, {\n        key: child.key,\n        shouldUpdated: _this4._shouldRenderSceneKey(idx, _this4.state.currentPage),\n        style: {\n          width: _this4.state.containerWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        }\n      }, _this4._keyExists(_this4.state.sceneKeys, key) ? child : React.createElement(View, {\n        heading: child.props.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        }\n      }));\n    });\n  },\n  _onMomentumScrollBeginAndEnd: function _onMomentumScrollBeginAndEnd(e) {\n    var offsetX = e.nativeEvent.contentOffset.x;\n    var page = Math.round(offsetX / this.state.containerWidth);\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n  _updateSelectedPage: function _updateSelectedPage(nextPage) {\n    var localNextPage = nextPage;\n    if (typeof localNextPage === 'object') {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n    var currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage)\n    });\n  },\n  _onChangeTab: function _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage\n    });\n  },\n  _updateScrollValue: function _updateScrollValue(value) {\n    this.state.scrollValue.setValue(value);\n    this.props.onScroll(value);\n  },\n  _handleLayout: function _handleLayout(e) {\n    var _this5 = this;\n    var width = e.nativeEvent.layout.width;\n    if (!width || width <= 0 || Math.round(width) === Math.round(this.state.containerWidth)) {\n      return;\n    }\n    this.setState({\n      containerWidth: width\n    });\n    this.requestAnimationFrame(function () {\n      _this5.goToPage(_this5.state.currentPage);\n    });\n  },\n  _children: function _children() {\n    var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.children;\n    return React.Children.map(children, function (child) {\n      return child;\n    });\n  },\n  render: function render() {\n    var overlayTabs = this.props.tabBarPosition === 'overlayTop' || this.props.tabBarPosition === 'overlayBottom';\n    var tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map(function (child) {\n        return child.props.heading;\n      }),\n      tabStyle: this._children().map(function (child) {\n        return child.props.tabStyle;\n      }),\n      activeTabStyle: this._children().map(function (child) {\n        return child.props.activeTabStyle;\n      }),\n      textStyle: this._children().map(function (child) {\n        return child.props.textStyle;\n      }),\n      activeTextStyle: this._children().map(function (child) {\n        return child.props.activeTextStyle;\n      }),\n      tabHeaderStyle: this._children().map(function (child) {\n        return _lodash2.default.get(child.props.heading.props, 'style', undefined);\n      }),\n      disabled: this._children().map(function (child) {\n        return child.props.disabled;\n      }),\n      accessible: this._children().map(function (child) {\n        return child.props.accessible == false ? false : true || true;\n      }),\n      accessibilityLabel: this._children().map(function (child) {\n        return child.props.accessibilityLabel;\n      }),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth\n    };\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n    if (this.props.tabContainerStyle) {\n      tabBarProps.tabContainerStyle = this.props.tabContainerStyle;\n    }\n    if (overlayTabs) {\n      var _tabBarProps$style;\n      tabBarProps.style = (_tabBarProps$style = {\n        position: 'absolute',\n        left: 0,\n        right: 0\n      }, _defineProperty(_tabBarProps$style, this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom', 0), _defineProperty(_tabBarProps$style, 'backgroundColor', 'rgba(255, 255, 255, 0.7)'), _tabBarProps$style);\n    }\n    return React.createElement(View, {\n      style: [styles.container, this.props.style],\n      onLayout: this._handleLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      }\n    }, (this.props.tabBarPosition === 'top' || this.props.tabBarPosition === 'overlayTop') && this.renderTabBar(tabBarProps), this.renderScrollableContent(), (this.props.tabBarPosition === 'bottom' || this.props.tabBarPosition === 'overlayBottom') && this.renderTabBar(tabBarProps));\n  }\n});\nexports.default = ScrollableTabView;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollableContentAndroid: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["../../../../src/basic/Tabs/index.js"],"names":["React","require","Component","Dimensions","View","Animated","ScrollView","StyleSheet","Platform","ReactNative","SceneComponent","DefaultTabBar","ScrollableTabBar","ScrollableTabView","statics","propTypes","tabBarPosition","PropTypes","oneOf","initialPage","number","page","onChangeTab","func","onScroll","renderTabBar","any","style","ViewPropTypes","contentProps","object","scrollWithoutAnimation","bool","locked","prerenderingSiblingsNumber","getDefaultProps","getInitialState","currentPage","props","scrollValue","Value","containerWidth","get","width","sceneKeys","newSceneKeys","componentDidMount","scrollFn","scrollView","state","setValue","InteractionManager","runAfterInteractions","scrollToTimer","setTimeout","scrollTo","x","animated","componentWillUnmount","clearTimeout","UNSAFE_componentWillReceiveProps","children","updateSceneKeys","goToPage","pageNumber","offset","y","callback","_onChangeTab","bind","cloneElement","newKeys","previousKeys","setState","_children","forEach","child","idx","key","_makeSceneKey","_keyExists","_shouldRenderSceneKey","push","currentPageKey","numOfSibling","find","sceneKey","heading","renderScrollableContent","scenes","_composeScenes","offsetX","e","nativeEvent","contentOffset","_updateScrollValue","_onMomentumScrollBeginAndEnd","map","Math","round","_updateSelectedPage","nextPage","localNextPage","position","prevPage","i","ref","from","value","_handleLayout","layout","requestAnimationFrame","Children","render","overlayTabs","tabBarProps","tabs","tabStyle","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","_","undefined","disabled","accessible","accessibilityLabel","activeTab","tabBarBackgroundColor","backgroundColor","tabBarActiveTextColor","activeTextColor","tabBarInactiveTextColor","inactiveTextColor","tabBarTextStyle","tabBarUnderlineStyle","underlineStyle","tabContainerStyle","left","right","styles","container","create","flex","scrollableContentAndroid"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport _ from 'lodash';\nimport { InteractionManager, ViewPropTypes } from '../../utils';\nconst React = require('react');\nconst { Component } = React;\nconst ReactNative = require('react-native');\nconst {\n  Dimensions,\n  View,\n  Animated,\n  ScrollView,\n  StyleSheet,\n  Platform\n} = ReactNative;\n\nconst SceneComponent = require('./SceneComponent');\nconst { DefaultTabBar } = require('./DefaultTabBar');\nconst { ScrollableTabBar } = require('./ScrollableTabBar');\n\nconst ScrollableTabView = createReactClass({\n  statics: {\n    DefaultTabBar,\n    ScrollableTabBar\n  },\n\n  propTypes: {\n    tabBarPosition: PropTypes.oneOf([\n      'top',\n      'bottom',\n      'overlayTop',\n      'overlayBottom'\n    ]),\n    initialPage: PropTypes.number,\n    page: PropTypes.number,\n    onChangeTab: PropTypes.func,\n    onScroll: PropTypes.func,\n    renderTabBar: PropTypes.any,\n    style: ViewPropTypes.style,\n    contentProps: PropTypes.object,\n    scrollWithoutAnimation: PropTypes.bool,\n    locked: PropTypes.bool,\n    prerenderingSiblingsNumber: PropTypes.number\n  },\n\n  getDefaultProps() {\n    return {\n      tabBarPosition: 'top',\n      initialPage: 0,\n      page: -1,\n      onChangeTab: () => {},\n      onScroll: () => {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0\n    };\n  },\n\n  getInitialState() {\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue: new Animated.Value(this.props.initialPage),\n      containerWidth: Dimensions.get('window').width,\n      sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage })\n    };\n  },\n\n  componentDidMount() {\n    const scrollFn = () => {\n      if (this.scrollView) {\n        this.state.scrollValue.setValue(this.props.initialPage);\n      }\n    };\n    InteractionManager.runAfterInteractions(scrollFn);\n    // because of contentOffset is not working on Android\n    this.scrollToTimer = setTimeout(() => {\n      if (this.scrollView) {\n        this.scrollView.scrollTo({\n          x: this.props.initialPage * this.state.containerWidth,\n          animated: false\n        });\n      }\n    });\n  },\n\n  componentWillUnmount() {\n    if (this.scrollToTimer) {\n      clearTimeout(this.scrollToTimer);\n    }\n  },\n\n  UNSAFE_componentWillReceiveProps(props) {\n    if (props.children !== this.props.children) {\n      this.updateSceneKeys({\n        page: this.state.currentPage,\n        children: props.children\n      });\n    }\n\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\n      this.goToPage(props.page);\n    }\n  },\n\n  goToPage(pageNumber) {\n    const offset = pageNumber * this.state.containerWidth;\n    if (this.scrollView) {\n      this.scrollView.scrollTo({\n        x: offset,\n        y: 0,\n        animated: !this.props.scrollWithoutAnimation\n      });\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber)\n    });\n  },\n\n  renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    }\n    return <DefaultTabBar {...props} />;\n  },\n\n  updateSceneKeys({\n                    page,\n                    children = this.props.children,\n                    callback = () => {}\n                  }) {\n    const newKeys = this.newSceneKeys({\n      previousKeys: this.state.sceneKeys,\n      currentPage: page,\n      children\n    });\n    this.setState({ currentPage: page, sceneKeys: newKeys }, callback);\n  },\n\n  newSceneKeys({\n                 previousKeys = [],\n                 currentPage = 0,\n                 children = this.props.children\n               }) {\n    const newKeys = [];\n    this._children(children).forEach((child, idx) => {\n      const key = this._makeSceneKey(child, idx);\n      if (\n        this._keyExists(previousKeys, key) ||\n        this._shouldRenderSceneKey(idx, currentPage)\n      ) {\n        newKeys.push(key);\n      }\n    });\n    return newKeys;\n  },\n\n  _shouldRenderSceneKey(idx, currentPageKey) {\n    const numOfSibling = this.props.prerenderingSiblingsNumber;\n    return (\n      idx < currentPageKey + numOfSibling + 1 &&\n      idx > currentPageKey - numOfSibling - 1\n    );\n  },\n\n  _keyExists(sceneKeys, key) {\n    return sceneKeys.find(sceneKey => key === sceneKey);\n  },\n\n  _makeSceneKey(child, idx) {\n    return `${child.props.heading}_${idx}`;\n  },\n\n  renderScrollableContent() {\n    const scenes = this._composeScenes();\n    return (\n      <ScrollView\n        horizontal\n        pagingEnabled\n        automaticallyAdjustContentInsets={false}\n        keyboardShouldPersistTaps=\"handled\"\n        contentOffset={{\n          x: this.props.initialPage * this.state.containerWidth\n        }}\n        ref={scrollView => {\n          this.scrollView = scrollView;\n        }}\n        onScroll={e => {\n          const offsetX = e.nativeEvent.contentOffset.x;\n          this._updateScrollValue(offsetX / this.state.containerWidth);\n        }}\n        onMomentumScrollBegin={this._onMomentumScrollBeginAndEnd}\n        onMomentumScrollEnd={this._onMomentumScrollBeginAndEnd}\n        scrollEventThrottle={16}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEnabled={!this.props.locked}\n        directionalLockEnabled\n        alwaysBounceVertical={false}\n        keyboardDismissMode=\"on-drag\"\n        {...this.props.contentProps}\n      >\n        {scenes}\n      </ScrollView>\n    );\n  },\n\n  _composeScenes() {\n    return this._children().map((child, idx) => {\n      const key = this._makeSceneKey(child, idx);\n      return (\n        <SceneComponent\n          key={child.key}\n          shouldUpdated={this._shouldRenderSceneKey(\n            idx,\n            this.state.currentPage\n          )}\n          style={{ width: this.state.containerWidth }}\n        >\n          {this._keyExists(this.state.sceneKeys, key) ? (\n            child\n          ) : (\n            <View heading={child.props.heading} />\n          )}\n        </SceneComponent>\n      );\n    });\n  },\n\n  _onMomentumScrollBeginAndEnd(e) {\n    const offsetX = e.nativeEvent.contentOffset.x;\n    const page = Math.round(offsetX / this.state.containerWidth);\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n\n  _updateSelectedPage(nextPage) {\n    let localNextPage = nextPage;\n    if (typeof localNextPage === 'object') {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage)\n    });\n  },\n\n  _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage\n    });\n  },\n\n  _updateScrollValue(value) {\n    this.state.scrollValue.setValue(value);\n    this.props.onScroll(value);\n  },\n\n  _handleLayout(e) {\n    const { width } = e.nativeEvent.layout;\n\n    if (\n      !width ||\n      width <= 0 ||\n      Math.round(width) === Math.round(this.state.containerWidth)\n    ) {\n      return;\n    }\n    this.setState({ containerWidth: width });\n    this.requestAnimationFrame(() => {\n      this.goToPage(this.state.currentPage);\n    });\n  },\n\n  _children(children = this.props.children) {\n    return React.Children.map(children, child => child);\n  },\n\n  render() {\n    const overlayTabs =\n      this.props.tabBarPosition === 'overlayTop' ||\n      this.props.tabBarPosition === 'overlayBottom';\n    const tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map(child => child.props.heading),\n      tabStyle: this._children().map(child => child.props.tabStyle),\n      activeTabStyle: this._children().map(child => child.props.activeTabStyle),\n      textStyle: this._children().map(child => child.props.textStyle),\n      activeTextStyle: this._children().map(\n        child => child.props.activeTextStyle\n      ),\n      tabHeaderStyle: this._children().map(child =>\n        _.get(child.props.heading.props, 'style', undefined)\n      ),\n      disabled: this._children().map(child => child.props.disabled),\n      accessible: this._children().map(child => child.props.accessible==false ? false : true || true ),\n      accessibilityLabel: this._children().map(child => child.props.accessibilityLabel),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n    if (this.props.tabContainerStyle) {\n      tabBarProps.tabContainerStyle = this.props.tabContainerStyle;\n    }\n    if (overlayTabs) {\n      tabBarProps.style = {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        [this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom']: 0,\n        backgroundColor: 'rgba(255, 255, 255, 0.7)'\n      };\n    }\n\n    return (\n      <View\n        style={[styles.container, this.props.style]}\n        onLayout={this._handleLayout}\n      >\n        {(this.props.tabBarPosition === 'top' ||\n          this.props.tabBarPosition === 'overlayTop') &&\n        this.renderTabBar(tabBarProps)}\n        {this.renderScrollableContent()}\n        {(this.props.tabBarPosition === 'bottom' ||\n          this.props.tabBarPosition === 'overlayBottom') &&\n        this.renderTabBar(tabBarProps)}\n      </View>\n    );\n  }\n});\n\nexport default ScrollableTabView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollableContentAndroid: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"script"}