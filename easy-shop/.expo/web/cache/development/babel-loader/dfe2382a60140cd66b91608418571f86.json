{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTabBar = undefined;\nvar _jsxFileName = 'src/basic/Tabs/DefaultTabBar.js';\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _createReactClass = require('create-react-class');\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\nvar _lodash = require('lodash');\nvar _lodash2 = _interopRequireDefault(_lodash);\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _platform = require(\"./../../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _TabHeading = require(\"../TabHeading\");\nvar _Text = require(\"../Text\");\nvar _TabContainer = require(\"../TabContainer\");\nvar _utils = require(\"../../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar ReactNative = require(\"react-native-web/dist/index\");\nvar StyleSheet = ReactNative.StyleSheet,\n  View = ReactNative.View,\n  Animated = ReactNative.Animated,\n  Platform = ReactNative.Platform;\nvar Button = require(\"./Button\");\nvar DefaultTabBar = (0, _createReactClass2.default)({\n  displayName: 'DefaultTabBar',\n  propTypes: {\n    goToPage: _propTypes2.default.func,\n    activeTab: _propTypes2.default.number,\n    tabs: _propTypes2.default.array,\n    backgroundColor: _propTypes2.default.string,\n    activeTextColor: _propTypes2.default.string,\n    inactiveTextColor: _propTypes2.default.string,\n    disabledTextColor: _propTypes2.default.string,\n    tabStyle: _utils.ViewPropTypes.style,\n    renderTab: _propTypes2.default.func,\n    underlineStyle: _utils.ViewPropTypes.style,\n    tabContainerStyle: _utils.ViewPropTypes.style,\n    accessible: _propTypes2.default.array,\n    accessibilityLabel: _propTypes2.default.array\n  },\n  contextTypes: {\n    theme: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activeTextColor: _platform2.default.topTabBarActiveTextColor,\n      inactiveTextColor: _platform2.default.topTabBarTextColor,\n      disabledTextColor: _platform2.default.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: _platform2.default.tabFontSize\n    };\n  },\n  renderTabOption: function renderTabOption(name, page) {},\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle, tabFontSize, disabled, disabledTextColor, accessible, accessibilityLabel) {\n    var headerContent = typeof name !== 'string' ? name.props.children : undefined;\n    var _props = this.props,\n      activeTextColor = _props.activeTextColor,\n      inactiveTextColor = _props.inactiveTextColor;\n    var fontWeight = isTabActive ? 'bold' : 'normal';\n    var isDisabled = disabled !== undefined;\n    var textColor = void 0;\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor;\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor;\n    }\n    var accessibilityState = {\n      disabled: isDisabled ? true : false,\n      selected: isTabActive ? true : false\n    };\n    if (typeof name === 'string') {\n      return _react2.default.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        disabled: isDisabled,\n        key: name,\n        accessible: accessible,\n        accessibilityRole: 'tab',\n        accessibilityLabel: accessibilityLabel,\n        accessibilityState: accessibilityState,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        style: [{\n          fontSize: tabFontSize\n        }, isTabActive ? activeTextStyle : textStyle, {\n          color: textColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, name)));\n    }\n    return _react2.default.createElement(Button, {\n      style: {\n        flex: 1\n      },\n      disabled: isDisabled,\n      key: _lodash2.default.random(1.2, 5.2),\n      accessible: accessible,\n      accessibilityRole: 'tab',\n      accessibilityLabel: accessibilityLabel,\n      accessibilityState: accessibilityState,\n      onPress: function onPress() {\n        return onPressHandler(page);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      }\n    }, _react2.default.createElement(_TabHeading.TabHeading, {\n      style: tabHeaderStyle,\n      active: isTabActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, headerContent));\n  },\n  render: function render() {\n    var _this = this;\n    var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n    var platformStyle = variables.platformStyle;\n    var containerWidth = this.props.containerWidth;\n    var numberOfTabs = this.props.tabs.length;\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return _react2.default.createElement(_TabContainer.TabContainer, {\n      style: [{\n        backgroundColor: variables.tabDefaultBg\n      }, this.props.tabContainerStyle ? this.props.tabContainerStyle : {}],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page], variables.tabFontSize, _this.props.disabled[page], _this.props.disabledTextColor, _this.props.accessible[page], _this.props.accessibilityLabel[page]);\n    }), _react2.default.createElement(Animated.View, {\n      style: [tabUnderlineStyle, {\n        left: left\n      }, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      }\n    }));\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.DefaultTabBar', {}, _mapPropsToStyleNames2.default)(DefaultTabBar);\nexports.DefaultTabBar = StyledTab;","map":{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["StyleSheet","View","Animated","Platform","ReactNative","Button","require","DefaultTabBar","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","disabledTextColor","tabStyle","ViewPropTypes","style","renderTab","underlineStyle","tabContainerStyle","accessible","accessibilityLabel","contextTypes","theme","object","getDefaultProps","variable","topTabBarActiveTextColor","topTabBarTextColor","tabBarDisabledTextColor","tabFontSize","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","disabled","headerContent","props","children","undefined","fontWeight","isDisabled","textColor","color","accessibilityState","selected","flex","fontSize","_","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","tabDefaultBg","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport _ from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nimport { ViewPropTypes } from '../../utils';\nconst ReactNative = require('react-native');\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require('./Button');\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    disabledTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style,\n    accessible: PropTypes.array,\n    accessibilityLabel: PropTypes.array\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      disabledTextColor: variable.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize,\n    disabled,\n    disabledTextColor,\n    accessible,\n    accessibilityLabel\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n    const isDisabled = disabled !== undefined;\n    let textColor;\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor; // activeTextColor: default color for active Tab\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor; // inactiveTextColor: default color for inactive Tab\n    }\n    const accessibilityState = {\n      disabled: isDisabled ? true : false,\n      selected: isTabActive ? true : false,\n    };\n    if (typeof name === 'string') {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          disabled={isDisabled}\n          key={name}\n          accessible={accessible}\n          accessibilityRole='tab'\n          accessibilityLabel={accessibilityLabel}\n          accessibilityState={accessibilityState}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                { fontSize: tabFontSize },\n                isTabActive ? activeTextStyle : textStyle,\n                { color: textColor }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        style={{ flex: 1 }}\n        disabled={isDisabled}\n        key={_.random(1.2, 5.2)}\n        accessible={accessible}\n        accessibilityRole='tab'\n        accessibilityLabel={accessibilityLabel}\n        accessibilityState={accessibilityState}\n        onPress={() => onPressHandler(page)}\n      >\n        <TabHeading style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer\n        style={[\n          { backgroundColor: variables.tabDefaultBg },\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\n        ]}\n      >\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page],\n            variables.tabFontSize,\n            this.props.disabled[page],\n            this.props.disabledTextColor,\n            this.props.accessible[page],\n            this.props.accessibilityLabel[page]\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.DefaultTabBar',\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]},"metadata":{},"sourceType":"script"}