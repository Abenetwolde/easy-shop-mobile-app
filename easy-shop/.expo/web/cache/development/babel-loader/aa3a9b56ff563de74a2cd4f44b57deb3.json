{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport NativeViewGestureHandler from \"./NativeViewGestureHandler\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NATIVE_WRAPPER_PROPS_FILTER = ['id', 'minPointers', 'enabled', 'waitFor', 'simultaneousHandlers', 'shouldCancelWhenOutside', 'hitSlop', 'onGestureEvent', 'onHandlerStateChange', 'onBegan', 'onFailed', 'onCancelled', 'onActivated', 'onEnded', 'shouldActivateOnStart', 'disallowInterruption', 'onGestureHandlerEvent', 'onGestureHandlerStateChange'];\nexport default function createNativeWrapper(Component) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ComponentWrapper = React.forwardRef(function (props, ref) {\n    var gestureHandlerProps = Object.keys(props).reduce(function (res, key) {\n      if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n        res[key] = props[key];\n      }\n      return res;\n    }, _objectSpread({}, config));\n    return _jsx(NativeViewGestureHandler, _objectSpread(_objectSpread({}, gestureHandlerProps), {}, {\n      children: _jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n        ref: ref\n      }))\n    }));\n  });\n  ComponentWrapper.propTypes = _objectSpread({}, Component.propTypes);\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n  return ComponentWrapper;\n}","map":{"version":3,"names":["React","NativeViewGestureHandler","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","Component","config","ComponentWrapper","forwardRef","props","ref","gestureHandlerProps","Object","keys","reduce","res","key","indexOf","propTypes","displayName"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/node_modules/react-native-gesture-handler/createNativeWrapper.js"],"sourcesContent":["import React from 'react';\n\nimport NativeViewGestureHandler from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  'id',\n  'minPointers',\n  'enabled',\n  'waitFor',\n  'simultaneousHandlers',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'onGestureEvent',\n  'onHandlerStateChange',\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'shouldActivateOnStart',\n  'disallowInterruption',\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n];\n\nexport default function createNativeWrapper(Component, config = {}) {\n  const ComponentWrapper = React.forwardRef((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    return (\n      <NativeViewGestureHandler {...gestureHandlerProps}>\n        <Component {...props} ref={ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  ComponentWrapper.propTypes = {\n    ...Component.propTypes,\n  };\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,wBAAwB;;AAAmC;AASlE,IAAMC,2BAA2B,GAAG,CAClC,IAAI,EACJ,aAAa,EACb,SAAS,EACT,SAAS,EACT,sBAAsB,EACtB,yBAAyB,EACzB,SAAS,EACT,gBAAgB,EAChB,sBAAsB,EACtB,SAAS,EACT,UAAU,EACV,aAAa,EACb,aAAa,EACb,SAAS,EACT,uBAAuB,EACvB,sBAAsB,EACtB,uBAAuB,EACvB,6BAA6B,CAC9B;AAED,eAAe,SAASC,mBAAmB,CAACC,SAAS,EAAe;EAAA,IAAbC,MAAM,uEAAG,CAAC,CAAC;EAChE,IAAMC,gBAAgB,GAAGN,KAAK,CAACO,UAAU,CAAC,UAACC,KAAK,EAAEC,GAAG,EAAK;IAExD,IAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,MAAM,CACnD,UAACC,GAAG,EAAEC,GAAG,EAAK;MACZ,IAAIb,2BAA2B,CAACc,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QACnDD,GAAG,CAACC,GAAG,CAAC,GAAGP,KAAK,CAACO,GAAG,CAAC;MACvB;MACA,OAAOD,GAAG;IACZ,CAAC,oBACIT,MAAM,EACZ;IACD,OACE,KAAC,wBAAwB,kCAAKK,mBAAmB;MAAA,UAC/C,KAAC,SAAS,kCAAKF,KAAK;QAAE,GAAG,EAAEC;MAAI;IAAG,GACT;EAE/B,CAAC,CAAC;EAEFH,gBAAgB,CAACW,SAAS,qBACrBb,SAAS,CAACa,SAAS,CACvB;EACDX,gBAAgB,CAACY,WAAW,GAAGd,SAAS,CAACc,WAAW,IAAI,kBAAkB;EAE1E,OAAOZ,gBAAgB;AACzB"},"metadata":{},"sourceType":"module"}