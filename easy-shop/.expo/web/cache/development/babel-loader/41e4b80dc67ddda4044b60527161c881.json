{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from \"./CurrentRenderContext\";\n\nexport default function useCurrentRender(_ref) {\n  var state = _ref.state,\n    navigation = _ref.navigation,\n    descriptors = _ref.descriptors;\n  var current = React.useContext(CurrentRenderContext);\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"sources":["useCurrentRender.tsx"],"names":["React","CurrentRenderContext","useCurrentRender","state","navigation","descriptors","current","useContext","isFocused","options","routes","index","key"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,oBAAP;;AAeA,eAAe,SAASC,gBAAT,OAIH;EAAA,IAHVC,KADuC,QACvCA,KADuC;IAEvCC,UAFuC,QAEvCA,UAFuC;IAGvCC,WAAAA,QAAAA,WAAAA;EAEA,IAAMC,OAAO,GAAGN,KAAK,CAACO,UAANP,CAAiBC,oBAAjBD,CAAhB;EAEA,IAAIM,OAAO,IAAIF,UAAU,CAACI,SAAXJ,EAAf,EAAuC;IACrCE,OAAO,CAACG,OAARH,GAAkBD,WAAW,CAACF,KAAK,CAACO,MAANP,CAAaA,KAAK,CAACQ,KAAnBR,CAAAA,CAA0BS,GAA3B,CAAXP,CAA2CI,OAA7DH;EACD;AACF","sourcesContent":["import * as React from 'react';\nimport type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type { Descriptor, NavigationHelpers } from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: {\n    [key: string]: Descriptor<ParamListBase, string, NavigationState, object>;\n  };\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}