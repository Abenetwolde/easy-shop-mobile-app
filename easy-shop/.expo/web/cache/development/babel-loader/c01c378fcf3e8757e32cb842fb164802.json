{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar checkSerializableWithoutCircularReference = function checkSerializableWithoutCircularReference(o, seen, location) {\n  if (o === undefined || o === null || typeof o === 'boolean' || typeof o === 'number' || typeof o === 'string') {\n    return {\n      serializable: true\n    };\n  }\n  if (Object.prototype.toString.call(o) !== '[object Object]' && !Array.isArray(o)) {\n    return {\n      serializable: false,\n      location: location,\n      reason: typeof o === 'function' ? 'Function' : String(o)\n    };\n  }\n  if (seen.has(o)) {\n    return {\n      serializable: false,\n      reason: 'Circular reference',\n      location: location\n    };\n  }\n  seen.add(o);\n  if (Array.isArray(o)) {\n    for (var i = 0; i < o.length; i++) {\n      var childResult = checkSerializableWithoutCircularReference(o[i], new Set(seen), [].concat(_toConsumableArray(location), [i]));\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  } else {\n    for (var key in o) {\n      var _childResult = checkSerializableWithoutCircularReference(o[key], new Set(seen), [].concat(_toConsumableArray(location), [key]));\n      if (!_childResult.serializable) {\n        return _childResult;\n      }\n    }\n  }\n  return {\n    serializable: true\n  };\n};\nexport default function checkSerializable(o) {\n  return checkSerializableWithoutCircularReference(o, new Set(), []);\n}","map":{"version":3,"sources":["checkSerializable.tsx"],"names":["checkSerializableWithoutCircularReference","o","seen","location","undefined","serializable","Object","prototype","toString","call","Array","isArray","reason","String","has","add","i","length","childResult","Set","key","checkSerializable"],"mappings":";AAAA,IAAMA,yCAAyC,GAAG,SAA5CA,yCAAyC,CAC7CC,CADgD,EAEhDC,IAFgD,EAGhDC,QAHgD,EAUzC;EACP,IACEF,CAAC,KAAKG,SAANH,IACAA,CAAC,KAAK,IADNA,IAEA,OAAOA,CAAP,KAAa,SAFbA,IAGA,OAAOA,CAAP,KAAa,QAHbA,IAIA,OAAOA,CAAP,KAAa,QALf,EAME;IACA,OAAO;MAAEI,YAAY,EAAE;IAAhB,CAAP;EACD;EAED,IACEC,MAAM,CAACC,SAAPD,CAAiBE,QAAjBF,CAA0BG,IAA1BH,CAA+BL,CAA/BK,CAAAA,KAAsC,iBAAtCA,IACA,CAACI,KAAK,CAACC,OAAND,CAAcT,CAAdS,CAFH,EAGE;IACA,OAAO;MACLL,YAAY,EAAE,KADT;MAELF,QAFK,EAELA,QAFK;MAGLS,MAAM,EAAE,OAAOX,CAAP,KAAa,UAAb,GAA0B,UAA1B,GAAuCY,MAAM,CAACZ,CAAD;IAHhD,CAAP;EAKD;EAED,IAAIC,IAAI,CAACY,GAALZ,CAASD,CAATC,CAAJ,EAAiB;IACf,OAAO;MACLG,YAAY,EAAE,KADT;MAELO,MAAM,EAAE,oBAFH;MAGLT,QAAAA,EAAAA;IAHK,CAAP;EAKD;EAEDD,IAAI,CAACa,GAALb,CAASD,CAATC,CAAAA;EAEA,IAAIQ,KAAK,CAACC,OAAND,CAAcT,CAAdS,CAAJ,EAAsB;IACpB,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,CAAC,CAACgB,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;MACjC,IAAME,WAAW,GAAGlB,yCAAyC,CAC3DC,CAAC,CAACe,CAAD,CAD0D,EAE3D,IAAIG,GAAJ,CAAajB,IAAb,CAF2D,+BAGvDC,QAAJ,IAAca,CAH6C,GAA7D;MAMA,IAAI,CAACE,WAAW,CAACb,YAAjB,EAA+B;QAC7B,OAAOa,WAAP;MACD;IACF;EACF,CAZD,MAYO;IACL,KAAK,IAAME,GAAX,IAAkBnB,CAAlB,EAAqB;MACnB,IAAMiB,YAAW,GAAGlB,yCAAyC,CAC3DC,CAAC,CAACmB,GAAD,CAD0D,EAE3D,IAAID,GAAJ,CAAajB,IAAb,CAF2D,+BAGvDC,QAAJ,IAAciB,GAH6C,GAA7D;MAMA,IAAI,CAACF,YAAW,CAACb,YAAjB,EAA+B;QAC7B,OAAOa,YAAP;MACD;IACF;EACF;EAED,OAAO;IAAEb,YAAY,EAAE;EAAhB,CAAP;AACD,CArED;AAuEA,eAAe,SAASgB,iBAAT,CAA2BpB,CAA3B,EAAsD;EACnE,OAAOD,yCAAyC,CAACC,CAAD,EAAI,IAAIkB,GAAJ,EAAJ,EAAoB,EAApB,CAAhD;AACD","sourcesContent":["const checkSerializableWithoutCircularReference = (\n  o: { [key: string]: any },\n  seen: Set<any>,\n  location: (string | number)[]\n):\n  | { serializable: true }\n  | {\n      serializable: false;\n      location: (string | number)[];\n      reason: string;\n    } => {\n  if (\n    o === undefined ||\n    o === null ||\n    typeof o === 'boolean' ||\n    typeof o === 'number' ||\n    typeof o === 'string'\n  ) {\n    return { serializable: true };\n  }\n\n  if (\n    Object.prototype.toString.call(o) !== '[object Object]' &&\n    !Array.isArray(o)\n  ) {\n    return {\n      serializable: false,\n      location,\n      reason: typeof o === 'function' ? 'Function' : String(o),\n    };\n  }\n\n  if (seen.has(o)) {\n    return {\n      serializable: false,\n      reason: 'Circular reference',\n      location,\n    };\n  }\n\n  seen.add(o);\n\n  if (Array.isArray(o)) {\n    for (let i = 0; i < o.length; i++) {\n      const childResult = checkSerializableWithoutCircularReference(\n        o[i],\n        new Set<any>(seen),\n        [...location, i]\n      );\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  } else {\n    for (const key in o) {\n      const childResult = checkSerializableWithoutCircularReference(\n        o[key],\n        new Set<any>(seen),\n        [...location, key]\n      );\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  }\n\n  return { serializable: true };\n};\n\nexport default function checkSerializable(o: { [key: string]: any }) {\n  return checkSerializableWithoutCircularReference(o, new Set<any>(), []);\n}\n"]},"metadata":{},"sourceType":"module"}