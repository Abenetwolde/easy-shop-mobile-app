{"ast":null,"code":"import * as React from 'react';\n\nexport default function useDocumentTitle(ref) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$enabled = _ref.enabled,\n    enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n    _ref$formatter = _ref.formatter,\n    formatter = _ref$formatter === void 0 ? function (options, route) {\n      var _options$title;\n      return (_options$title = options === null || options === void 0 ? void 0 : options.title) !== null && _options$title !== void 0 ? _options$title : route === null || route === void 0 ? void 0 : route.name;\n    } : _ref$formatter;\n  React.useEffect(function () {\n    if (!enabled) {\n      return;\n    }\n    var navigation = ref.current;\n    if (navigation) {\n      var title = formatter(navigation.getCurrentOptions(), navigation.getCurrentRoute());\n      document.title = title;\n    }\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('options', function (e) {\n      var title = formatter(e.data.options, navigation === null || navigation === void 0 ? void 0 : navigation.getCurrentRoute());\n      document.title = title;\n    });\n  });\n}","map":{"version":3,"sources":["useDocumentTitle.tsx"],"names":["React","useDocumentTitle","ref","enabled","formatter","options","route","title","name","useEffect","navigation","current","getCurrentOptions","getCurrentRoute","document","addListener","e","data"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAOA,eAAe,SAASC,gBAAT,CACbC,GADa,EAMb;EAAA,+EAD0B,CAAA,CALb;IAAA,oBAGXC,OAAO;IAAPA,OAAO,6BAAG,IADZ;IAAA,sBAEEC,SAAS;IAATA,SAAS,+BAAG,UAACC,OAAD,EAAUC,KAAV,EAAA;MAAA,IAAA,cAAA;MAAA,OAAA,CAAA,cAAA,GAAoBD,OAApB,KAAA,IAAA,IAAoBA,OAApB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAoBA,OAAO,CAAEE,KAA7B,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAAsCD,KAAtC,KAAA,IAAA,IAAsCA,KAAtC,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAsCA,KAAK,CAAEE,IAA7C;IAAA,CAAA;EAGdR,KAAK,CAACS,SAANT,CAAgB,YAAM;IACpB,IAAI,CAACG,OAAL,EAAc;MACZ;IACD;IAED,IAAMO,UAAU,GAAGR,GAAG,CAACS,OAAvB;IAEA,IAAID,UAAJ,EAAgB;MACd,IAAMH,KAAK,GAAGH,SAAS,CACrBM,UAAU,CAACE,iBAAXF,EADqB,EAErBA,UAAU,CAACG,eAAXH,EAFqB,CAAvB;MAKAI,QAAQ,CAACP,KAATO,GAAiBP,KAAjBO;IACD;IAED,OAAO,UAAP,KAAA,IAAA,IAAO,UAAP,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAO,UAAU,CAAEC,WAAZ,CAAwB,SAAxB,EAAoCC,UAAAA,CAAD,EAAO;MAC/C,IAAMT,KAAK,GAAGH,SAAS,CAACY,CAAC,CAACC,IAAFD,CAAOX,OAAR,EAAiBK,UAAjB,KAAA,IAAA,IAAiBA,UAAjB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAiBA,UAAU,CAAEG,eAAZH,EAAjB,CAAvB;MAEAI,QAAQ,CAACP,KAATO,GAAiBP,KAAjBO;IACD,CAJM,CAAP;EAKD,CArBDd,CAAAA;AAsBD","sourcesContent":["import * as React from 'react';\nimport type { NavigationContainerRef } from '@react-navigation/core';\nimport type { DocumentTitleOptions } from './types';\n\n/**\n * Set the document title for the active screen\n */\nexport default function useDocumentTitle(\n  ref: React.RefObject<NavigationContainerRef>,\n  {\n    enabled = true,\n    formatter = (options, route) => options?.title ?? route?.name,\n  }: DocumentTitleOptions = {}\n) {\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const navigation = ref.current;\n\n    if (navigation) {\n      const title = formatter(\n        navigation.getCurrentOptions(),\n        navigation.getCurrentRoute()\n      );\n\n      document.title = title;\n    }\n\n    return navigation?.addListener('options', (e) => {\n      const title = formatter(e.data.options, navigation?.getCurrentRoute());\n\n      document.title = title;\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}