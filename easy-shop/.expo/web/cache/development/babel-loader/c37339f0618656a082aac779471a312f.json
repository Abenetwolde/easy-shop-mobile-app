{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport invariant from 'fbjs/lib/invariant';\nimport AnimatedNode, { getCallID, setCallID } from \"./AnimatedNode\";\nimport AnimatedClock from \"./AnimatedClock\";\nimport { val } from \"../val\";\nexport var AnimatedParam = function (_AnimatedNode) {\n  _inherits(AnimatedParam, _AnimatedNode);\n  var _super = _createSuper(AnimatedParam);\n  function AnimatedParam() {\n    var _this;\n    _classCallCheck(this, AnimatedParam);\n    _this = _super.call(this, {\n      type: 'param'\n    }, []);\n    _defineProperty(_assertThisInitialized(_this), \"argsStack\", []);\n    _defineProperty(_assertThisInitialized(_this), \"_prevCallID\", void 0);\n    _this.__attach();\n    return _this;\n  }\n  _createClass(AnimatedParam, [{\n    key: \"beginContext\",\n    value: function beginContext(ref, prevCallID) {\n      this._prevCallID = prevCallID;\n      this.argsStack.push(ref);\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this.argsStack.pop();\n    }\n  }, {\n    key: \"_getTopNode\",\n    value: function _getTopNode() {\n      if (this.argsStack.length === 0) throw new Error(\"param: Invocation failed because argsStack is empty\");\n      var top = this.argsStack[this.argsStack.length - 1];\n      return top;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var top = this._getTopNode();\n      if (top.setValue) {\n        var callID = getCallID();\n        setCallID(this._prevCallID);\n        top.setValue(value);\n        setCallID(callID);\n      } else {\n        throw new Error(\"param: setValue(\".concat(value, \") failed because the top element has no known method for updating it's current value.\"));\n      }\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var callID = getCallID();\n      setCallID(this._prevCallID);\n      var top = this._getTopNode();\n      var value = val(top);\n      setCallID(callID);\n      return value;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var node = this._getTopNode();\n      invariant(node instanceof AnimatedClock || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \".concat(node));\n      node.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var node = this._getTopNode();\n      invariant(node instanceof AnimatedClock || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \".concat(node));\n      node.stop();\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      var node = this._getTopNode();\n      if (node instanceof AnimatedParam) {\n        return node.isRunning();\n      }\n      invariant(node instanceof AnimatedClock, \"param: top node should be of type AnimatedClock but got \".concat(node));\n      return node.isStarted();\n    }\n  }]);\n  return AnimatedParam;\n}(AnimatedNode);\nexport function createAnimatedParam() {\n  return new AnimatedParam();\n}","map":{"version":3,"sources":["AnimatedParam.js"],"names":["invariant","AnimatedNode","getCallID","setCallID","AnimatedClock","val","AnimatedParam","constructor","type","__attach","beginContext","ref","prevCallID","_prevCallID","argsStack","push","endContext","pop","_getTopNode","length","Error","top","setValue","value","callID","__onEvaluate","start","node","stop","isRunning","isStarted","createAnimatedParam"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,IAAuBC,SAAvB,EAAkCC,SAAlC;AACA,OAAOC,aAAP;AACA,SAASC,GAAT;AAEA,WAAaC,aAAN;EAAA;EAAA;EAILC,yBAAc;IAAA;IAAA;IACZ,0BAAM;MAAEC,IAAI,EAAE;IAAR,CAAN,EAAyB,EAAzB;IADY,eAAA,gCAAA,WAAA,EAHF,EAGE,CAAA;IAAA,eAAA,gCAAA,aAAA,EAAA,KAAA,CAAA,CAAA;IAEZ,MAAKC,QAAL,EAAA;IAAA;EACD;EAAA;IAAA;IAAA,OAEDC,sBAAaC,GAAD,EAAMC,UAAN,EAAkB;MAC5B,IAAA,CAAKC,WAAL,GAAmBD,UAAnB;MACA,IAAA,CAAKE,SAAL,CAAeC,IAAf,CAAoBJ,GAApB,CAAA;IACD;EAAA;IAAA;IAAA,OAEDK,sBAAa;MACX,IAAA,CAAKF,SAAL,CAAeG,GAAf,EAAA;IACD;EAAA;IAAA;IAAA,OAEDC,uBAAc;MACZ,IAAI,IAAA,CAAKJ,SAAL,CAAeK,MAAf,KAA0B,CAA9B,EAAiC,MAAM,IAAIC,KAAJ,CAAA,qDAAA,CAAN;MACjC,IAAMC,GAAG,GAAG,IAAA,CAAKP,SAAL,CAAe,IAAA,CAAKA,SAAL,CAAeK,MAAf,GAAwB,CAAvC,CAAZ;MACA,OAAOE,GAAP;IACD;EAAA;IAAA;IAAA,OAEDC,kBAASC,KAAD,EAAQ;MACd,IAAMF,GAAG,GAAG,IAAA,CAAKH,WAAL,EAAZ;MACA,IAAIG,GAAG,CAACC,QAAR,EAAkB;QAChB,IAAME,MAAM,GAAGtB,SAAS,EAAxB;QACAC,SAAS,CAAC,IAAA,CAAKU,WAAN,CAATV;QACAkB,GAAG,CAACC,QAAJD,CAAaE,KAAbF,CAAAA;QACAlB,SAAS,CAACqB,MAAD,CAATrB;MACD,CALD,MAKO;QACL,MAAM,IAAIiB,KAAJ,CAAA,kBAAA,CAAA,MAAA,CAA6BG,KAA7B,EAAA,uFAAA,CAAA,CAAN;MACD;IACF;EAAA;IAAA;IAAA,OAEDE,wBAAe;MACb,IAAMD,MAAM,GAAGtB,SAAS,EAAxB;MACAC,SAAS,CAAC,IAAA,CAAKU,WAAN,CAATV;MACA,IAAMkB,GAAG,GAAG,IAAA,CAAKH,WAAL,EAAZ;MACA,IAAMK,KAAK,GAAGlB,GAAG,CAACgB,GAAD,CAAjB;MACAlB,SAAS,CAACqB,MAAD,CAATrB;MACA,OAAOoB,KAAP;IACD;EAAA;IAAA;IAAA,OAEDG,iBAAQ;MACN,IAAMC,IAAI,GAAG,IAAA,CAAKT,WAAL,EAAb;MACAlB,SAAS,CACP2B,IAAI,YAAYvB,aAAhBuB,IAAiCA,IAAI,YAAYrB,aAD1C,EAAA,0DAAA,CAAA,MAAA,CAEoDqB,IAFpD,CAAA,CAAT3B;MAIA2B,IAAI,CAACD,KAALC,EAAAA;IACD;EAAA;IAAA;IAAA,OAEDC,gBAAO;MACL,IAAMD,IAAI,GAAG,IAAA,CAAKT,WAAL,EAAb;MACAlB,SAAS,CACP2B,IAAI,YAAYvB,aAAhBuB,IAAiCA,IAAI,YAAYrB,aAD1C,EAAA,0DAAA,CAAA,MAAA,CAEoDqB,IAFpD,CAAA,CAAT3B;MAIA2B,IAAI,CAACC,IAALD,EAAAA;IACD;EAAA;IAAA;IAAA,OAEDE,qBAAY;MACV,IAAMF,IAAI,GAAG,IAAA,CAAKT,WAAL,EAAb;MAEA,IAAIS,IAAI,YAAYrB,aAApB,EAAmC;QACjC,OAAOqB,IAAI,CAACE,SAALF,EAAP;MACD;MACD3B,SAAS,CACP2B,IAAI,YAAYvB,aADT,EAAA,0DAAA,CAAA,MAAA,CAEoDuB,IAFpD,CAAA,CAAT3B;MAIA,OAAO2B,IAAI,CAACG,SAALH,EAAP;IACD;EAAA;EAAA;AAAA,EA1EgC1B,YAA5B;AA6EP,OAAO,SAAS8B,mBAAT,GAA+B;EACpC,OAAO,IAAIzB,aAAJ,EAAP;AACD","sourcesContent":["import invariant from 'fbjs/lib/invariant';\nimport AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport AnimatedClock from './AnimatedClock';\nimport { val } from '../val';\n\nexport class AnimatedParam extends AnimatedNode {\n  argsStack = [];\n  _prevCallID;\n  \n  constructor() {\n    super({ type: 'param' }, []);\n    this.__attach();\n  }\n\n  beginContext(ref, prevCallID) {\n    this._prevCallID = prevCallID;\n    this.argsStack.push(ref);\n  }\n\n  endContext() {\n    this.argsStack.pop();\n  }\n\n  _getTopNode() {\n    if (this.argsStack.length === 0) throw new Error(`param: Invocation failed because argsStack is empty`);\n    const top = this.argsStack[this.argsStack.length - 1];\n    return top;\n  }\n\n  setValue(value) {\n    const top = this._getTopNode();\n    if (top.setValue) {\n      const callID = getCallID();\n      setCallID(this._prevCallID);\n      top.setValue(value);\n      setCallID(callID);\n    } else {\n      throw new Error(`param: setValue(${value}) failed because the top element has no known method for updating it's current value.`)\n    }\n  }\n  \n  __onEvaluate() {\n    const callID = getCallID();\n    setCallID(this._prevCallID);\n    const top = this._getTopNode();\n    const value = val(top);\n    setCallID(callID);\n    return value;\n  }\n\n  start() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.start();\n  }\n\n  stop() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.stop();\n  }\n\n  isRunning() {\n    const node = this._getTopNode();\n\n    if (node instanceof AnimatedParam) {\n      return node.isRunning()\n    }\n    invariant(\n      node instanceof AnimatedClock,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    return node.isStarted();\n  }\n}\n\nexport function createAnimatedParam() {\n  return new AnimatedParam();\n}\n"]},"metadata":{},"sourceType":"module"}