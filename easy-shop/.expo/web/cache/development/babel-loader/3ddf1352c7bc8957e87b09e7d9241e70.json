{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport BaseToast from \"./base\";\nimport { icons } from \"../assets\";\nimport colors from \"../colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction SuccessToast(props) {\n  return _jsx(BaseToast, _objectSpread(_objectSpread({}, props), {}, {\n    style: {\n      borderLeftColor: colors.mantis\n    },\n    leadingIcon: icons.success\n  }));\n}\nSuccessToast.propTypes = BaseToast.propTypes;\nexport default SuccessToast;","map":{"version":3,"names":["React","BaseToast","icons","colors","SuccessToast","props","borderLeftColor","mantis","success","propTypes"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/node_modules/react-native-toast-message/src/components/success.js"],"sourcesContent":["import React from 'react';\n\nimport BaseToast from './base';\nimport { icons } from '../assets';\nimport colors from '../colors';\n\nfunction SuccessToast(props) {\n  return (\n    <BaseToast\n      {...props}\n      style={{ borderLeftColor: colors.mantis }}\n      leadingIcon={icons.success}\n    />\n  );\n}\n\nSuccessToast.propTypes = BaseToast.propTypes;\n\nexport default SuccessToast;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS;AAChB,SAASC,KAAK;AACd,OAAOC,MAAM;AAAkB;AAE/B,SAASC,YAAY,CAACC,KAAK,EAAE;EAC3B,OACE,KAAC,SAAS,kCACJA,KAAK;IACT,KAAK,EAAE;MAAEC,eAAe,EAAEH,MAAM,CAACI;IAAO,CAAE;IAC1C,WAAW,EAAEL,KAAK,CAACM;EAAQ,GAC3B;AAEN;AAEAJ,YAAY,CAACK,SAAS,GAAGR,SAAS,CAACQ,SAAS;AAE5C,eAAeL,YAAY"},"metadata":{},"sourceType":"module"}