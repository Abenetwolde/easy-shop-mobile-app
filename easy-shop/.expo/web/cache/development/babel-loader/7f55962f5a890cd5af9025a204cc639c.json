{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Item, Picker, Toast } from 'native-base';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport FormContainer from \"../../../Shared/Form/FormContainer\";\nimport Input from \"../../../Shared/Form/Input\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\";\nimport { connect } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = require(\"../../../assets/countries.json\");\nvar Checkout = function Checkout(props) {\n  var context = useContext(AuthGlobal);\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    orderItems = _useState2[0],\n    setOrderItems = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    address = _useState4[0],\n    setAddress = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    address2 = _useState6[0],\n    setAddress2 = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    city = _useState8[0],\n    setCity = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    zip = _useState10[0],\n    setZip = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    country = _useState12[0],\n    setCountry = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    phone = _useState14[0],\n    setPhone = _useState14[1];\n  var _useState15 = useState(),\n    _useState16 = _slicedToArray(_useState15, 2),\n    user = _useState16[0],\n    setUser = _useState16[1];\n  useEffect(function () {\n    setOrderItems(props.cartItems);\n    if (context.stateUser.isAuthenticated) {\n      setUser(context.stateUser.user.sub);\n    } else {\n      props.navigation.navigate(\"Cart\");\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Please Login to Checkout\",\n        text2: \"\"\n      });\n    }\n    return function () {\n      setOrderItems();\n    };\n  }, []);\n  var checkOut = function checkOut() {\n    console.log(\"orders\", orderItems);\n    var order = {\n      city: city,\n      country: country,\n      dateOrdered: Date.now(),\n      orderItems: orderItems,\n      phone: phone,\n      shippingAddress1: address,\n      shippingAddress2: address2,\n      status: \"3\",\n      user: user,\n      zip: zip\n    };\n    props.navigation.navigate(\"Payment\", {\n      order: order\n    });\n  };\n  return _jsx(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    children: _jsxs(FormContainer, {\n      title: \"Shipping Address\",\n      children: [_jsx(Input, {\n        placeholder: \"Phone\",\n        name: \"phone\",\n        value: phone,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setPhone(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Shipping Address 1\",\n        name: \"ShippingAddress1\",\n        value: address,\n        onChangeText: function onChangeText(text) {\n          return setAddress(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Shipping Address 2\",\n        name: \"ShippingAddress2\",\n        value: address2,\n        onChangeText: function onChangeText(text) {\n          return setAddress2(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"City\",\n        name: \"city\",\n        value: city,\n        onChangeText: function onChangeText(text) {\n          return setCity(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Zip Code\",\n        name: \"zip\",\n        value: zip,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setZip(text);\n        }\n      }), _jsx(Item, {\n        picker: true,\n        children: _jsx(Picker, {\n          mode: \"dropdown\",\n          iosIcon: _jsx(Icon, {\n            name: \"arrow-down\",\n            color: \"#007aff\"\n          }),\n          style: {\n            width: undefined\n          },\n          selectedValue: country,\n          placeholder: \"Select your country\",\n          placeholderStyle: {\n            color: '#007aff'\n          },\n          placeholderIconColor: \"#007aff\",\n          onValueChange: function onValueChange(e) {\n            return setCountry(e);\n          },\n          children: countries.map(function (c) {\n            return _jsx(Picker.Item, {\n              label: c.name,\n              value: c.name\n            }, c.code);\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          width: '80%',\n          alignItems: \"center\"\n        },\n        children: _jsx(Button, {\n          title: \"Confirm\",\n          onPress: function onPress() {\n            return checkOut();\n          }\n        })\n      })]\n    })\n  });\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"names":["React","useEffect","useState","useContext","Item","Picker","Toast","Icon","FormContainer","Input","KeyboardAwareScrollView","AuthGlobal","connect","countries","require","Checkout","props","context","orderItems","setOrderItems","address","setAddress","address2","setAddress2","city","setCity","zip","setZip","country","setCountry","phone","setPhone","user","setUser","cartItems","stateUser","isAuthenticated","sub","navigation","navigate","show","topOffset","type","text1","text2","checkOut","console","log","order","dateOrdered","Date","now","shippingAddress1","shippingAddress2","status","text","width","undefined","color","e","map","c","name","code","alignItems","mapStateToProps","state"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/Screens/Cart/Checkout/Checkout.js"],"sourcesContent":["import React, { useEffect, useState, useContext} from 'react'\r\nimport { Text, View, Button } from 'react-native'\r\nimport { Item, Picker, Toast } from 'native-base'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\nimport FormContainer from '../../../Shared/Form/FormContainer'\r\nimport Input from '../../../Shared/Form/Input'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\"\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst countries = require(\"../../../assets/countries.json\");\r\n\r\nconst Checkout = (props) => {\r\n    const context = useContext(AuthGlobal)\r\n\r\n    const [ orderItems, setOrderItems ] = useState();\r\n    const [ address, setAddress ] = useState();\r\n    const [ address2, setAddress2 ] = useState();\r\n    const [ city, setCity ] = useState();\r\n    const [ zip, setZip ] = useState();\r\n    const [ country, setCountry ] = useState();\r\n    const [ phone, setPhone ] = useState();\r\n    const [ user, setUser ] = useState();\r\n\r\n    useEffect(() => {\r\n        setOrderItems(props.cartItems)\r\n\r\n        if(context.stateUser.isAuthenticated) {\r\n            setUser(context.stateUser.user.sub)\r\n        } else {\r\n            props.navigation.navigate(\"Cart\");\r\n            Toast.show({\r\n                topOffset: 60,\r\n                type: \"error\",\r\n                text1: \"Please Login to Checkout\",\r\n                text2: \"\"\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            setOrderItems();\r\n        }\r\n    }, [])\r\n\r\n    const checkOut = () => {\r\n        console.log(\"orders\", orderItems)\r\n        let order = {\r\n            city,\r\n            country,\r\n            dateOrdered: Date.now(),\r\n            orderItems,\r\n            phone,\r\n            shippingAddress1: address,\r\n            shippingAddress2: address2,\r\n            status: \"3\",\r\n            user,\r\n            zip,\r\n        }\r\n\r\n        props.navigation.navigate(\"Payment\", {order: order })\r\n    }\r\n\r\n    return (\r\n        <KeyboardAwareScrollView\r\n            viewIsInsideTabBar={true}\r\n            extraHeight={200}\r\n            enableOnAndroid={true}\r\n        >\r\n            <FormContainer title={\"Shipping Address\"}>\r\n                <Input\r\n                    placeholder={\"Phone\"}\r\n                    name={\"phone\"}\r\n                    value={phone}\r\n                    keyboardType={\"numeric\"}\r\n                    onChangeText={(text) => setPhone(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Shipping Address 1\"}\r\n                    name={\"ShippingAddress1\"}\r\n                    value={address}\r\n                    onChangeText={(text) => setAddress(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Shipping Address 2\"}\r\n                    name={\"ShippingAddress2\"}\r\n                    value={address2}\r\n                    onChangeText={(text) => setAddress2(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"City\"}\r\n                    name={\"city\"}\r\n                    value={city}\r\n                    onChangeText={(text) => setCity(text)}\r\n                />\r\n                   <Input\r\n                    placeholder={\"Zip Code\"}\r\n                    name={\"zip\"}\r\n                    value={zip}\r\n                    keyboardType={\"numeric\"}\r\n                    onChangeText={(text) => setZip(text)}\r\n                />\r\n                <Item picker>\r\n                    <Picker\r\n                        mode=\"dropdown\"\r\n                        iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\r\n                        style={{ width: undefined }}\r\n                        selectedValue={country}\r\n                        placeholder=\"Select your country\"\r\n                        placeholderStyle={{ color: '#007aff' }}\r\n                        placeholderIconColor=\"#007aff\"\r\n                        onValueChange={(e) => setCountry(e)}\r\n                    >\r\n                        {countries.map((c) => {\r\n                            return <Picker.Item \r\n                                    key={c.code} \r\n                                    label={c.name}\r\n                                    value={c.name}\r\n                                    />\r\n                        })}\r\n                    </Picker>\r\n                </Item>\r\n                <View style={{ width: '80%', alignItems: \"center\" }}>\r\n                    <Button title=\"Confirm\" onPress={() => checkOut()}/>\r\n                </View>\r\n            </FormContainer>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { cartItems } = state;\r\n    return {\r\n        cartItems: cartItems,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout)"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AAAA;AAAA;AAAA;AAE7D,SAASC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,aAAa;AACjD,OAAOC,IAAI;AACX,OAAOC,aAAa;AACpB,OAAOC,KAAK;AACZ,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,OAAOC,UAAU;AAEjB,SAASC,OAAO,QAAQ,aAAa;AAAA;AAAA;AAErC,IAAMC,SAAS,GAAGC,OAAO,kCAAkC;AAE3D,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,KAAK,EAAK;EACxB,IAAMC,OAAO,GAAGd,UAAU,CAACQ,UAAU,CAAC;EAEtC,gBAAsCT,QAAQ,EAAE;IAAA;IAAxCgB,UAAU;IAAEC,aAAa;EACjC,iBAAgCjB,QAAQ,EAAE;IAAA;IAAlCkB,OAAO;IAAEC,UAAU;EAC3B,iBAAkCnB,QAAQ,EAAE;IAAA;IAApCoB,QAAQ;IAAEC,WAAW;EAC7B,iBAA0BrB,QAAQ,EAAE;IAAA;IAA5BsB,IAAI;IAAEC,OAAO;EACrB,iBAAwBvB,QAAQ,EAAE;IAAA;IAA1BwB,GAAG;IAAEC,MAAM;EACnB,kBAAgCzB,QAAQ,EAAE;IAAA;IAAlC0B,OAAO;IAAEC,UAAU;EAC3B,kBAA4B3B,QAAQ,EAAE;IAAA;IAA9B4B,KAAK;IAAEC,QAAQ;EACvB,kBAA0B7B,QAAQ,EAAE;IAAA;IAA5B8B,IAAI;IAAEC,OAAO;EAErBhC,SAAS,CAAC,YAAM;IACZkB,aAAa,CAACH,KAAK,CAACkB,SAAS,CAAC;IAE9B,IAAGjB,OAAO,CAACkB,SAAS,CAACC,eAAe,EAAE;MAClCH,OAAO,CAAChB,OAAO,CAACkB,SAAS,CAACH,IAAI,CAACK,GAAG,CAAC;IACvC,CAAC,MAAM;MACHrB,KAAK,CAACsB,UAAU,CAACC,QAAQ,CAAC,MAAM,CAAC;MACjCjC,KAAK,CAACkC,IAAI,CAAC;QACPC,SAAS,EAAE,EAAE;QACbC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,0BAA0B;QACjCC,KAAK,EAAE;MACX,CAAC,CAAC;IACN;IAEA,OAAO,YAAM;MACTzB,aAAa,EAAE;IACnB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAM0B,QAAQ,GAAG,SAAXA,QAAQ,GAAS;IACnBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE7B,UAAU,CAAC;IACjC,IAAI8B,KAAK,GAAG;MACRxB,IAAI,EAAJA,IAAI;MACJI,OAAO,EAAPA,OAAO;MACPqB,WAAW,EAAEC,IAAI,CAACC,GAAG,EAAE;MACvBjC,UAAU,EAAVA,UAAU;MACVY,KAAK,EAALA,KAAK;MACLsB,gBAAgB,EAAEhC,OAAO;MACzBiC,gBAAgB,EAAE/B,QAAQ;MAC1BgC,MAAM,EAAE,GAAG;MACXtB,IAAI,EAAJA,IAAI;MACJN,GAAG,EAAHA;IACJ,CAAC;IAEDV,KAAK,CAACsB,UAAU,CAACC,QAAQ,CAAC,SAAS,EAAE;MAACS,KAAK,EAAEA;IAAM,CAAC,CAAC;EACzD,CAAC;EAED,OACI,KAAC,uBAAuB;IACpB,kBAAkB,EAAE,IAAK;IACzB,WAAW,EAAE,GAAI;IACjB,eAAe,EAAE,IAAK;IAAA,UAEtB,MAAC,aAAa;MAAC,KAAK,EAAE,kBAAmB;MAAA,WACrC,KAAC,KAAK;QACF,WAAW,EAAE,OAAQ;QACrB,IAAI,EAAE,OAAQ;QACd,KAAK,EAAElB,KAAM;QACb,YAAY,EAAE,SAAU;QACxB,YAAY,EAAE,sBAACyB,IAAI;UAAA,OAAKxB,QAAQ,CAACwB,IAAI,CAAC;QAAA;MAAC,EACzC,EACC,KAAC,KAAK;QACL,WAAW,EAAE,oBAAqB;QAClC,IAAI,EAAE,kBAAmB;QACzB,KAAK,EAAEnC,OAAQ;QACf,YAAY,EAAE,sBAACmC,IAAI;UAAA,OAAKlC,UAAU,CAACkC,IAAI,CAAC;QAAA;MAAC,EAC3C,EACC,KAAC,KAAK;QACL,WAAW,EAAE,oBAAqB;QAClC,IAAI,EAAE,kBAAmB;QACzB,KAAK,EAAEjC,QAAS;QAChB,YAAY,EAAE,sBAACiC,IAAI;UAAA,OAAKhC,WAAW,CAACgC,IAAI,CAAC;QAAA;MAAC,EAC5C,EACC,KAAC,KAAK;QACL,WAAW,EAAE,MAAO;QACpB,IAAI,EAAE,MAAO;QACb,KAAK,EAAE/B,IAAK;QACZ,YAAY,EAAE,sBAAC+B,IAAI;UAAA,OAAK9B,OAAO,CAAC8B,IAAI,CAAC;QAAA;MAAC,EACxC,EACC,KAAC,KAAK;QACL,WAAW,EAAE,UAAW;QACxB,IAAI,EAAE,KAAM;QACZ,KAAK,EAAE7B,GAAI;QACX,YAAY,EAAE,SAAU;QACxB,YAAY,EAAE,sBAAC6B,IAAI;UAAA,OAAK5B,MAAM,CAAC4B,IAAI,CAAC;QAAA;MAAC,EACvC,EACF,KAAC,IAAI;QAAC,MAAM;QAAA,UACR,KAAC,MAAM;UACH,IAAI,EAAC,UAAU;UACf,OAAO,EAAE,KAAC,IAAI;YAAC,IAAI,EAAC,YAAY;YAAC,KAAK,EAAE;UAAU,EAAI;UACtD,KAAK,EAAE;YAAEC,KAAK,EAAEC;UAAU,CAAE;UAC5B,aAAa,EAAE7B,OAAQ;UACvB,WAAW,EAAC,qBAAqB;UACjC,gBAAgB,EAAE;YAAE8B,KAAK,EAAE;UAAU,CAAE;UACvC,oBAAoB,EAAC,SAAS;UAC9B,aAAa,EAAE,uBAACC,CAAC;YAAA,OAAK9B,UAAU,CAAC8B,CAAC,CAAC;UAAA,CAAC;UAAA,UAEnC9C,SAAS,CAAC+C,GAAG,CAAC,UAACC,CAAC,EAAK;YAClB,OAAO,KAAC,MAAM,CAAC,IAAI;cAEX,KAAK,EAAEA,CAAC,CAACC,IAAK;cACd,KAAK,EAAED,CAAC,CAACC;YAAK,GAFTD,CAAC,CAACE,IAAI,CAGT;UACd,CAAC;QAAC;MACG,EACN,EACP,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEP,KAAK,EAAE,KAAK;UAAEQ,UAAU,EAAE;QAAS,CAAE;QAAA,UAChD,KAAC,MAAM;UAAC,KAAK,EAAC,SAAS;UAAC,OAAO,EAAE;YAAA,OAAMnB,QAAQ,EAAE;UAAA;QAAC;MAAE,EACjD;IAAA;EACK,EACM;AAElC,CAAC;AAED,IAAMoB,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK,EAAK;EAC/B,IAAQhC,SAAS,GAAKgC,KAAK,CAAnBhC,SAAS;EACjB,OAAO;IACHA,SAAS,EAAEA;EACf,CAAC;AACL,CAAC;AAED,eAAetB,OAAO,CAACqD,eAAe,CAAC,CAAClD,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}