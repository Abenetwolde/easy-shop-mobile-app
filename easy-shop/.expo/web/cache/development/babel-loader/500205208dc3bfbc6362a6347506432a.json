{"ast":null,"code":"\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\nvar isActiveSignal = function isActiveSignal(signal) {\n  return signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\nvar isPressStartSignal = function isPressStartSignal(signal) {\n  return signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\nvar isTerminalSignal = function isTerminalSignal(signal) {\n  return signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n};\nvar isValidKeyPress = function isValidKeyPress(event) {\n  var key = event.key;\n  var target = event.currentTarget;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return !event.repeat && (key === 'Enter' || isSpacebar && (role === 'button' || role === 'menuitem'));\n};\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450;\n\nvar DEFAULT_PRESS_DELAY_MS = 50;\n\nvar PressResponder =\nfunction () {\n  function PressResponder(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n  var _proto = PressResponder.prototype;\n  _proto.configure = function configure(config) {\n    this._config = config;\n  }\n  ;\n\n  _proto.reset = function reset() {\n    this._cancelLongPressDelayTimeout();\n    this._cancelPressDelayTimeout();\n    this._cancelPressOutDelayTimeout();\n  }\n  ;\n\n  _proto.getEventHandlers = function getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n    return this._eventHandlers;\n  };\n  _proto._createEventHandlers = function _createEventHandlers() {\n    var _this = this;\n    var start = function start(event, shouldDelay) {\n      event.persist();\n      _this._cancelPressOutDelayTimeout();\n      _this._longPressDispatched = false;\n      _this._responder = event.currentTarget;\n      _this._selectionTerminated = false;\n      _this._touchState = NOT_RESPONDER;\n      _this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n      _this._receiveSignal(RESPONDER_GRANT, event);\n      var delayPressStart = normalizeDelay(_this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n      if (shouldDelay !== false && delayPressStart > 0) {\n        _this._pressDelayTimeout = setTimeout(function () {\n          _this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        _this._receiveSignal(DELAY, event);\n      }\n      var delayLongPress = normalizeDelay(_this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      _this._longPressDelayTimeout = setTimeout(function () {\n        _this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n    var end = function end(event) {\n      _this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n    var keyupHandler = function keyupHandler(event) {\n      if (_this._touchState !== NOT_RESPONDER) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n      }\n    };\n    return {\n      onStartShouldSetResponder: function onStartShouldSetResponder() {\n        var disabled = _this._config.disabled;\n        if (disabled == null) {\n          return true;\n        }\n        return !disabled;\n      },\n      onKeyDown: function onKeyDown(event) {\n        if (isValidKeyPress(event)) {\n          if (_this._touchState === NOT_RESPONDER) {\n            start(event, false);\n\n            document.addEventListener('keyup', keyupHandler);\n          }\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: function onResponderGrant(event) {\n        return start(event);\n      },\n      onResponderMove: function onResponderMove(event) {\n        if (_this._config.onPressMove != null) {\n          _this._config.onPressMove(event);\n        }\n        var touch = getTouchFromResponderEvent(event);\n        if (_this._touchActivatePosition != null) {\n          var deltaX = _this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = _this._touchActivatePosition.pageY - touch.pageY;\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            _this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        return end(event);\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        if (event.nativeEvent.type === 'selectionchange') {\n          _this._selectionTerminated = true;\n        }\n        _this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: function onResponderTerminationRequest(event) {\n        var _this$_config = _this._config,\n          cancelable = _this$_config.cancelable,\n          disabled = _this$_config.disabled,\n          onLongPress = _this$_config.onLongPress;\n\n        if (!disabled && onLongPress != null && _this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n        if (cancelable == null) {\n          return true;\n        }\n        return cancelable;\n      },\n      onClick: function onClick(event) {\n        var _this$_config2 = _this._config,\n          disabled = _this$_config2.disabled,\n          onPress = _this$_config2.onPress;\n        if (!disabled) {\n          if (_this._longPressDispatched || _this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.ctrlKey === false && event.altKey === false) {\n            onPress(event);\n          }\n        }\n        event.stopPropagation();\n      },\n      onContextMenu: function onContextMenu(event) {\n        var _this$_config3 = _this._config,\n          disabled = _this$_config3.disabled,\n          onLongPress = _this$_config3.onLongPress;\n        if (!disabled && onLongPress != null && _this._isPointerTouch && !event.defaultPrevented) {\n          event.preventDefault();\n        }\n        event.stopPropagation();\n      }\n    };\n  }\n  ;\n\n  _proto._receiveSignal = function _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n    if (this._responder == null && signal === RESPONDER_RELEASE) {\n      return;\n    }\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n      this._touchState = nextState;\n    }\n  }\n  ;\n\n  _proto._performTransitionSideEffects = function _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      this._isPointerTouch = false;\n      this._touchActivatePosition = null;\n      this._cancelLongPressDelayTimeout();\n    }\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress;\n\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n        _onLongPress = _this$_config4.onLongPress,\n        onPress = _this$_config4.onPress;\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n        if (!isPressCanceledByLongPress) {\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n    this._cancelPressDelayTimeout();\n  };\n  _proto._activate = function _activate(event) {\n    var _this$_config5 = this._config,\n      onPressChange = _this$_config5.onPressChange,\n      onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  };\n  _proto._deactivate = function _deactivate(event) {\n    var _this$_config6 = this._config,\n      onPressChange = _this$_config6.onPressChange,\n      onPressEnd = _this$_config6.onPressEnd;\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(function () {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  };\n  _proto._handleLongPress = function _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  };\n  _proto._cancelLongPressDelayTimeout = function _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  };\n  _proto._cancelPressDelayTimeout = function _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  };\n  _proto._cancelPressOutDelayTimeout = function _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  };\n  return PressResponder;\n}();\nexport { PressResponder as default };\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n    changedTouches = _event$nativeEvent.changedTouches,\n    touches = _event$nativeEvent.touches;\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n}","map":{"version":3,"names":["DELAY","ERROR","LONG_PRESS_DETECTED","NOT_RESPONDER","RESPONDER_ACTIVE_LONG_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_INACTIVE_PRESS_START","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","Transitions","Object","freeze","isActiveSignal","signal","isPressStartSignal","isTerminalSignal","isValidKeyPress","event","key","target","currentTarget","role","getAttribute","isSpacebar","repeat","DEFAULT_LONG_PRESS_DELAY_MS","DEFAULT_PRESS_DELAY_MS","PressResponder","config","_eventHandlers","_isPointerTouch","_longPressDelayTimeout","_longPressDispatched","_pressDelayTimeout","_pressOutDelayTimeout","_touchState","configure","_proto","prototype","_config","reset","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","getEventHandlers","_createEventHandlers","_this","start","shouldDelay","persist","_responder","_selectionTerminated","nativeEvent","type","_receiveSignal","delayPressStart","normalizeDelay","setTimeout","delayLongPress","_handleLongPress","end","keyupHandler","document","removeEventListener","onStartShouldSetResponder","disabled","onKeyDown","addEventListener","stopPropagation","onResponderGrant","onResponderMove","onPressMove","touch","getTouchFromResponderEvent","_touchActivatePosition","deltaX","pageX","deltaY","pageY","Math","hypot","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","_this$_config","cancelable","onLongPress","onClick","_this$_config2","onPress","preventDefault","ctrlKey","altKey","onContextMenu","_this$_config3","defaultPrevented","prevState","nextState","console","error","_performTransitionSideEffects","isPrevActive","isNextActive","_activate","_deactivate","_this$_config4","_onLongPress","isPressCanceledByLongPress","_this$_config5","onPressChange","onPressStart","_this$_config6","onPressEnd","delayPressEnd","clearTimeout","default","delay","min","fallback","max","_event$nativeEvent","changedTouches","touches","length"],"sources":["C:/Users/AfroMiNA/OneDrive/Desktop/ecom/mern-stack-ecommerce/easy-shop/node_modules/react-native-web/dist/hooks/usePressEvents/PressResponder.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\n\nvar isActiveSignal = function isActiveSignal(signal) {\n  return signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\n\nvar isPressStartSignal = function isPressStartSignal(signal) {\n  return signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\n\nvar isTerminalSignal = function isTerminalSignal(signal) {\n  return signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n};\n\nvar isValidKeyPress = function isValidKeyPress(event) {\n  var key = event.key;\n  var target = event.currentTarget;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return !event.repeat && (key === 'Enter' || isSpacebar && (role === 'button' || role === 'menuitem'));\n};\n\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\n\nvar DEFAULT_PRESS_DELAY_MS = 50;\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\n\nvar PressResponder =\n/*#__PURE__*/\nfunction () {\n  function PressResponder(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n\n  var _proto = PressResponder.prototype;\n\n  _proto.configure = function configure(config) {\n    this._config = config;\n  }\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this._cancelLongPressDelayTimeout();\n\n    this._cancelPressDelayTimeout();\n\n    this._cancelPressOutDelayTimeout();\n  }\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  ;\n\n  _proto.getEventHandlers = function getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n\n    return this._eventHandlers;\n  };\n\n  _proto._createEventHandlers = function _createEventHandlers() {\n    var _this = this;\n\n    var start = function start(event, shouldDelay) {\n      event.persist();\n\n      _this._cancelPressOutDelayTimeout();\n\n      _this._longPressDispatched = false;\n      _this._responder = event.currentTarget;\n      _this._selectionTerminated = false;\n      _this._touchState = NOT_RESPONDER;\n      _this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n\n      _this._receiveSignal(RESPONDER_GRANT, event);\n\n      var delayPressStart = normalizeDelay(_this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n\n      if (shouldDelay !== false && delayPressStart > 0) {\n        _this._pressDelayTimeout = setTimeout(function () {\n          _this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        _this._receiveSignal(DELAY, event);\n      }\n\n      var delayLongPress = normalizeDelay(_this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      _this._longPressDelayTimeout = setTimeout(function () {\n        _this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n\n    var end = function end(event) {\n      _this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n\n    var keyupHandler = function keyupHandler(event) {\n      if (_this._touchState !== NOT_RESPONDER) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n      }\n    };\n\n    return {\n      onStartShouldSetResponder: function onStartShouldSetResponder() {\n        var disabled = _this._config.disabled;\n\n        if (disabled == null) {\n          return true;\n        }\n\n        return !disabled;\n      },\n      onKeyDown: function onKeyDown(event) {\n        if (isValidKeyPress(event)) {\n          if (_this._touchState === NOT_RESPONDER) {\n            start(event, false); // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n\n            document.addEventListener('keyup', keyupHandler);\n          }\n\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: function onResponderGrant(event) {\n        return start(event);\n      },\n      onResponderMove: function onResponderMove(event) {\n        if (_this._config.onPressMove != null) {\n          _this._config.onPressMove(event);\n        }\n\n        var touch = getTouchFromResponderEvent(event);\n\n        if (_this._touchActivatePosition != null) {\n          var deltaX = _this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = _this._touchActivatePosition.pageY - touch.pageY;\n\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            _this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        return end(event);\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        if (event.nativeEvent.type === 'selectionchange') {\n          _this._selectionTerminated = true;\n        }\n\n        _this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: function onResponderTerminationRequest(event) {\n        var _this$_config = _this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress; // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n\n        if (!disabled && onLongPress != null && _this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n\n        if (cancelable == null) {\n          return true;\n        }\n\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: function onClick(event) {\n        var _this$_config2 = _this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          if (_this._longPressDispatched || _this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.ctrlKey === false && event.altKey === false) {\n            onPress(event);\n          }\n        }\n\n        event.stopPropagation();\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: function onContextMenu(event) {\n        var _this$_config3 = _this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n\n        if (!disabled && onLongPress != null && _this._isPointerTouch && !event.defaultPrevented) {\n          event.preventDefault();\n        }\n\n        event.stopPropagation();\n      }\n    };\n  }\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  ;\n\n  _proto._receiveSignal = function _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n\n    if (this._responder == null && signal === RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n\n      this._touchState = nextState;\n    }\n  }\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  ;\n\n  _proto._performTransitionSideEffects = function _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      this._isPointerTouch = false;\n      this._touchActivatePosition = null;\n\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress; // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  };\n\n  _proto._activate = function _activate(event) {\n    var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  };\n\n  _proto._deactivate = function _deactivate(event) {\n    var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(function () {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  };\n\n  _proto._handleLongPress = function _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  };\n\n  _proto._cancelLongPressDelayTimeout = function _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  };\n\n  _proto._cancelPressDelayTimeout = function _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  };\n\n  _proto._cancelPressOutDelayTimeout = function _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  };\n\n  return PressResponder;\n}();\n\nexport { PressResponder as default };\n\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\n\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n\n  return event.nativeEvent;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}