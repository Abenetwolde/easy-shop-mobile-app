{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport { SafeAreaProvider, SafeAreaConsumer, initialWindowSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getStatusBarHeight, getBottomSpace } from 'react-native-iphone-x-helper';\n\nexport var initialSafeAreaInsets = _objectSpread({\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0\n}, initialWindowSafeAreaInsets);\nexport default function SafeAreaProviderCompat(_ref) {\n  var children = _ref.children;\n  return React.createElement(SafeAreaConsumer, null, function (insets) {\n    if (insets) {\n      return children;\n    }\n    return React.createElement(SafeAreaProvider, {\n      initialSafeAreaInsets: initialSafeAreaInsets\n    }, children);\n  });\n}","map":{"version":3,"sources":["SafeAreaProviderCompat.tsx"],"names":["React","SafeAreaProvider","SafeAreaConsumer","initialWindowSafeAreaInsets","getStatusBarHeight","getBottomSpace","initialSafeAreaInsets","top","bottom","right","left","SafeAreaProviderCompat","children","insets"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,2BAHF,QAIO,gCAJP;AAKA,SACEC,kBADF,EAEEC,cAFF,QAGO,8BAHP;;AAQA,OAAO,IAAMC,qBAAqB;EAEhCC,GAAG,EAAEH,kBAAkB,CAAC,IAAD,CAFY;EAGnCI,MAAM,EAAEH,cAAc,EAHa;EAInCI,KAAK,EAAE,CAJ4B;EAKnCC,IAAI,EAAE;AAL6B,GAQhCP,2BAAAA,CARE;AAeP,eAAe,SAASQ,sBAAT,OAAqD;EAAA,IAAnBC,QAAAA,QAAAA,QAAAA;EAC/C,OACE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA,IAAA,EACIC,UAAAA,MAAD,EAAY;IACX,IAAIA,MAAJ,EAAY;MAIV,OAAOD,QAAP;IACD;IAED,OACE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA;MAAkB,qBAAqB,EAAEN;IAAzC,CAAA,EACGM,QADH,CADF;EAKD,CAdH,CADF;AAkBD","sourcesContent":["import * as React from 'react';\nimport {\n  SafeAreaProvider,\n  SafeAreaConsumer,\n  initialWindowSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\n\n// The provider component for safe area initializes asynchornously\n// Until the insets are available, there'll be blank screen\n// To avoid the blank screen, we specify some initial values\nexport const initialSafeAreaInsets = {\n  // Approximate values which are good enough for most cases\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0,\n  // If we are on a newer version of the library, we can get the correct window insets\n  // The component might not be filling the window, but this is good enough for most cases\n  ...initialWindowSafeAreaInsets,\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default function SafeAreaProviderCompat({ children }: Props) {\n  return (\n    <SafeAreaConsumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return children;\n        }\n\n        return (\n          <SafeAreaProvider initialSafeAreaInsets={initialSafeAreaInsets}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaConsumer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}