{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SwipeRow = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/SwipeRow.js';\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _Left = require(\"./Left\");\nvar _Right = require(\"./Right\");\nvar _Body = require(\"./Body\");\nvar _ListItem = require(\"./ListItem\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar PREVIEW_OPEN_DELAY = 700;\nvar PREVIEW_CLOSE_DELAY = 300;\nvar SwipeRow = function (_Component) {\n  _inherits(SwipeRow, _Component);\n  function SwipeRow(props) {\n    _classCallCheck(this, SwipeRow);\n    var _this = _possibleConstructorReturn(this, (SwipeRow.__proto__ || Object.getPrototypeOf(SwipeRow)).call(this, props));\n    _this.horizontalSwipeGestureBegan = false;\n    _this.swipeInitialX = null;\n    _this.parentScrollEnabled = true;\n    _this.ranPreview = false;\n    _this.state = {\n      dimensionsSet: false,\n      hiddenHeight: 0,\n      hiddenWidth: 0\n    };\n    _this._translateX = new _reactNative.Animated.Value(0);\n    return _this;\n  }\n  _createClass(SwipeRow, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n      this._panResponder = _reactNative.PanResponder.create({\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(e, gs) {\n          return _this2.handleOnMoveShouldSetPanResponder(e, gs);\n        },\n        onPanResponderMove: function onPanResponderMove(e, gs) {\n          return _this2.handlePanResponderMove(e, gs);\n        },\n        onPanResponderRelease: function onPanResponderRelease(e, gs) {\n          return _this2.handlePanResponderEnd(e, gs);\n        },\n        onPanResponderTerminate: function onPanResponderTerminate(e, gs) {\n          return _this2.handlePanResponderEnd(e, gs);\n        },\n        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(_) {\n          return false;\n        }\n      });\n    }\n  }, {\n    key: 'getPreviewAnimation',\n    value: function getPreviewAnimation(toValue, delay) {\n      return _reactNative.Animated.timing(this._translateX, {\n        duration: this.props.previewDuration,\n        toValue: toValue,\n        delay: delay,\n        useNativeDriver: true\n      });\n    }\n  }, {\n    key: 'onContentLayout',\n    value: function onContentLayout(e) {\n      var _this3 = this;\n      this.setState({\n        dimensionsSet: !this.props.recalculateHiddenLayout,\n        hiddenHeight: e.nativeEvent.layout.height,\n        hiddenWidth: e.nativeEvent.layout.width\n      });\n      if (this.props.preview && !this.ranPreview) {\n        this.ranPreview = true;\n        var previewOpenValue = this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n        this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(function (_) {\n          _this3.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n        });\n      }\n    }\n  }, {\n    key: 'handleOnMoveShouldSetPanResponder',\n    value: function handleOnMoveShouldSetPanResponder(e, gs) {\n      var dx = gs.dx;\n      return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n    }\n  }, {\n    key: 'handlePanResponderMove',\n    value: function handlePanResponderMove(e, gestureState) {\n      var dx = gestureState.dx,\n        dy = gestureState.dy;\n      var absDx = Math.abs(dx);\n      var absDy = Math.abs(dy);\n      if (absDx > this.props.directionalDistanceChangeThreshold || absDy > this.props.directionalDistanceChangeThreshold) {\n        if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n          return;\n        }\n        if (this.parentScrollEnabled) {\n          this.parentScrollEnabled = false;\n          this.props.setScrollEnabled && this.props.setScrollEnabled(false);\n        }\n        if (this.swipeInitialX === null) {\n          this.swipeInitialX = this._translateX._value;\n        }\n        if (!this.horizontalSwipeGestureBegan) {\n          this.horizontalSwipeGestureBegan = true;\n          this.props.swipeGestureBegan && this.props.swipeGestureBegan();\n        }\n        var newDX = this.swipeInitialX + dx;\n        if (this.props.disableLeftSwipe && newDX < 0) {\n          newDX = 0;\n        }\n        if (this.props.disableRightSwipe && newDX > 0) {\n          newDX = 0;\n        }\n        if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n          newDX = this.props.stopLeftSwipe;\n        }\n        if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\n          newDX = this.props.stopRightSwipe;\n        }\n        this._translateX.setValue(newDX);\n      }\n    }\n  }, {\n    key: 'handlePanResponderEnd',\n    value: function handlePanResponderEnd(e, gestureState) {\n      if (!this.parentScrollEnabled) {\n        this.parentScrollEnabled = true;\n        this.props.setScrollEnabled && this.props.setScrollEnabled(true);\n      }\n      var toValue = 0;\n      if (this._translateX._value >= 0) {\n        if (this._translateX._value > this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)) {\n          toValue = this.props.leftOpenValue;\n        }\n      } else {\n        if (this._translateX._value < this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)) {\n          toValue = this.props.rightOpenValue;\n        }\n      }\n      this.manuallySwipeRow(toValue);\n    }\n  }, {\n    key: 'closeRow',\n    value: function closeRow() {\n      this.manuallySwipeRow(0);\n    }\n  }, {\n    key: 'openLeftRow',\n    value: function openLeftRow() {\n      this.manuallySwipeRow(this.props.leftOpenValue);\n    }\n  }, {\n    key: 'openRightRow',\n    value: function openRightRow() {\n      this.manuallySwipeRow(this.props.rightOpenValue);\n    }\n  }, {\n    key: 'manuallySwipeRow',\n    value: function manuallySwipeRow(toValue) {\n      var _this4 = this;\n      _reactNative.Animated.spring(this._translateX, {\n        toValue: toValue,\n        friction: this.props.friction,\n        tension: this.props.tension,\n        useNativeDriver: true\n      }).start(function (_) {\n        if (toValue === 0) {\n          _this4.props.onRowDidClose && _this4.props.onRowDidClose();\n        } else {\n          _this4.props.onRowDidOpen && _this4.props.onRowDidOpen();\n        }\n      });\n      if (toValue === 0) {\n        this.props.onRowClose && this.props.onRowClose();\n      } else {\n        this.props.onRowOpen && this.props.onRowOpen(toValue);\n      }\n      this.swipeInitialX = null;\n      this.horizontalSwipeGestureBegan = false;\n    }\n  }, {\n    key: 'renderMainContent',\n    value: function renderMainContent() {\n      var _this5 = this;\n      if (this.state.dimensionsSet) {\n        return _react2.default.createElement(_reactNative.Animated.View, _extends({}, this._panResponder.panHandlers, {\n          style: {\n            transform: [{\n              translateX: this._translateX\n            }],\n            zIndex: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          }\n        }), !this.props.list ? _react2.default.createElement(_ListItem.ListItem, {\n          list: true,\n          style: this.props.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          }\n        }, this.props.body) : _react2.default.createElement(_reactNative.View, {\n          style: [{\n            backgroundColor: '#FFF'\n          }, this.props.style],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          }\n        }, this.props.body));\n      }\n      return _react2.default.createElement(_reactNative.Animated.View, _extends({}, this._panResponder.panHandlers, {\n        onLayout: function onLayout(e) {\n          return _this5.onContentLayout(e);\n        },\n        style: {\n          transform: [{\n            translateX: this._translateX\n          }],\n          zIndex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      }), !this.props.list ? _react2.default.createElement(_ListItem.ListItem, {\n        list: true,\n        style: this.props.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        }\n      }, this.props.body) : _react2.default.createElement(_reactNative.View, {\n        style: [{\n          backgroundColor: '#FFF'\n        }, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        }\n      }, this.props.body));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(_reactNative.View, {\n        style: this.props.style ? this.props.style : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        }\n      }, _react2.default.createElement(_reactNative.View, {\n        style: [styles.hidden, {\n          height: this.state.hiddenHeight,\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }, _react2.default.createElement(_Left.Left, {\n        style: {\n          width: this.props.leftOpenValue,\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        }\n      }, this.props.left), _react2.default.createElement(_Body.Body, {\n        style: {\n          flex: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        }\n      }), _react2.default.createElement(_Right.Right, {\n        style: {\n          width: -this.props.rightOpenValue,\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        }\n      }, this.props.right)), this.renderMainContent());\n    }\n  }]);\n  return SwipeRow;\n}(_react.Component);\nSwipeRow.defaultProps = {\n  leftOpenValue: 0,\n  rightOpenValue: 0,\n  closeOnRowPress: true,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  recalculateHiddenLayout: false,\n  preview: false,\n  previewDuration: 300,\n  directionalDistanceChangeThreshold: 2,\n  swipeToOpenPercent: 50\n};\nvar styles = {\n  container: {},\n  hidden: {\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n};\nvar StyledSwipeRow = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.SwipeRow', {}, _mapPropsToStyleNames2.default)(SwipeRow);\nexports.SwipeRow = StyledSwipeRow;","map":{"version":3,"sources":["../../../src/basic/SwipeRow.js"],"names":["PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","SwipeRow","Component","defaultProps","leftOpenValue","rightOpenValue","closeOnRowPress","disableLeftSwipe","disableRightSwipe","recalculateHiddenLayout","preview","previewDuration","directionalDistanceChangeThreshold","swipeToOpenPercent","props","horizontalSwipeGestureBegan","swipeInitialX","parentScrollEnabled","ranPreview","state","dimensionsSet","hiddenHeight","hiddenWidth","_translateX","Animated","Value","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","e","gs","handleOnMoveShouldSetPanResponder","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminate","onShouldBlockNativeResponder","toValue","delay","timing","duration","useNativeDriver","setState","nativeEvent","layout","height","width","previewOpenValue","getPreviewAnimation","start","dx","Math","abs","gestureState","dy","absDx","absDy","setScrollEnabled","_value","swipeGestureBegan","newDX","stopLeftSwipe","stopRightSwipe","setValue","manuallySwipeRow","spring","friction","tension","onRowDidClose","onRowDidOpen","onRowClose","onRowOpen","panHandlers","transform","translateX","zIndex","list","style","body","backgroundColor","onContentLayout","undefined","styles","hidden","flex","flexDirection","justifyContent","left","right","renderMainContent","container","bottom","overflow","position","top","StyledSwipeRow","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, PanResponder, View } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nimport { Left } from './Left';\nimport { Right } from './Right';\nimport { Body } from './Body';\nimport { ListItem } from './ListItem';\n\nconst PREVIEW_OPEN_DELAY = 700;\nconst PREVIEW_CLOSE_DELAY = 300;\n\nclass SwipeRow extends Component {\n  static defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowPress: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    preview: false,\n    previewDuration: 300,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50\n  };\n  constructor(props) {\n    super(props);\n    this.horizontalSwipeGestureBegan = false;\n    this.swipeInitialX = null;\n    this.parentScrollEnabled = true;\n    this.ranPreview = false;\n    this.state = {\n      dimensionsSet: false,\n      hiddenHeight: 0,\n      hiddenWidth: 0\n    };\n    this._translateX = new Animated.Value(0);\n  }\n\n  componentDidMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: (e, gs) =>\n        this.handleOnMoveShouldSetPanResponder(e, gs),\n      onPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\n      onPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onPanResponderTerminate: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onShouldBlockNativeResponder: _ => false\n    });\n  }\n\n  getPreviewAnimation(toValue, delay) {\n    return Animated.timing(this._translateX, {\n      duration: this.props.previewDuration,\n      toValue,\n      delay,\n      useNativeDriver: true\n    });\n  }\n\n  onContentLayout(e) {\n    this.setState({\n      dimensionsSet: !this.props.recalculateHiddenLayout,\n      hiddenHeight: e.nativeEvent.layout.height,\n      hiddenWidth: e.nativeEvent.layout.width\n    });\n\n    if (this.props.preview && !this.ranPreview) {\n      this.ranPreview = true;\n      const previewOpenValue =\n        this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n      this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(\n        _ => {\n          this.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n        }\n      );\n    }\n  }\n\n  handleOnMoveShouldSetPanResponder(e, gs) {\n    const { dx } = gs;\n    return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n  }\n\n  handlePanResponderMove(e, gestureState) {\n    const { dx, dy } = gestureState;\n    const absDx = Math.abs(dx);\n    const absDy = Math.abs(dy);\n\n    // this check may not be necessary because we don't capture the move until we pass the threshold\n    // just being extra safe here\n    if (\n      absDx > this.props.directionalDistanceChangeThreshold ||\n      absDy > this.props.directionalDistanceChangeThreshold\n    ) {\n      // we have enough to determine direction\n      if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n        // user is moving vertically, do nothing, listView will handle\n        return;\n      }\n\n      // user is moving horizontally\n      if (this.parentScrollEnabled) {\n        // disable scrolling on the listView parent\n        this.parentScrollEnabled = false;\n        this.props.setScrollEnabled && this.props.setScrollEnabled(false);\n      }\n\n      if (this.swipeInitialX === null) {\n        // set tranlateX value when user started swiping\n        this.swipeInitialX = this._translateX._value;\n      }\n      if (!this.horizontalSwipeGestureBegan) {\n        this.horizontalSwipeGestureBegan = true;\n        this.props.swipeGestureBegan && this.props.swipeGestureBegan();\n      }\n\n      let newDX = this.swipeInitialX + dx;\n      if (this.props.disableLeftSwipe && newDX < 0) {\n        newDX = 0;\n      }\n      if (this.props.disableRightSwipe && newDX > 0) {\n        newDX = 0;\n      }\n\n      if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n        newDX = this.props.stopLeftSwipe;\n      }\n      if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\n        newDX = this.props.stopRightSwipe;\n      }\n\n      this._translateX.setValue(newDX);\n    }\n  }\n\n  handlePanResponderEnd(e, gestureState) {\n    // re-enable scrolling on listView parent\n    if (!this.parentScrollEnabled) {\n      this.parentScrollEnabled = true;\n      this.props.setScrollEnabled && this.props.setScrollEnabled(true);\n    }\n\n    // finish up the animation\n    let toValue = 0;\n    if (this._translateX._value >= 0) {\n      // trying to open right\n      if (\n        this._translateX._value >\n        this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)\n      ) {\n        // we're more than halfway\n        toValue = this.props.leftOpenValue;\n      }\n    } else {\n      // trying to open left\n      if (\n        this._translateX._value <\n        this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)\n      ) {\n        // we're more than halfway\n        toValue = this.props.rightOpenValue;\n      }\n    }\n\n    this.manuallySwipeRow(toValue);\n  }\n\n  /*\n   * This method is called by SwipeListView\n   */\n  closeRow() {\n    this.manuallySwipeRow(0);\n  }\n\n  openLeftRow() {\n    this.manuallySwipeRow(this.props.leftOpenValue);\n  }\n\n  openRightRow() {\n    this.manuallySwipeRow(this.props.rightOpenValue);\n  }\n\n  manuallySwipeRow(toValue) {\n    Animated.spring(this._translateX, {\n      toValue,\n      friction: this.props.friction,\n      tension: this.props.tension,\n      useNativeDriver: true\n    }).start(_ => {\n      if (toValue === 0) {\n        this.props.onRowDidClose && this.props.onRowDidClose();\n      } else {\n        this.props.onRowDidOpen && this.props.onRowDidOpen();\n      }\n    });\n\n    if (toValue === 0) {\n      this.props.onRowClose && this.props.onRowClose();\n    } else {\n      this.props.onRowOpen && this.props.onRowOpen(toValue);\n    }\n\n    // reset everything\n    this.swipeInitialX = null;\n    this.horizontalSwipeGestureBegan = false;\n  }\n\n  renderMainContent() {\n    // We do this annoying if statement for performance.\n    // We don't want the onLayout func to run after it runs once.\n    if (this.state.dimensionsSet) {\n      return (\n        <Animated.View\n          {...this._panResponder.panHandlers}\n          style={{\n            transform: [{ translateX: this._translateX }],\n            zIndex: 2\n          }}\n        >\n          {!this.props.list ? (\n            <ListItem list style={this.props.style}>\n              {this.props.body}\n            </ListItem>\n          ) : (\n            <View style={[{ backgroundColor: '#FFF' }, this.props.style]}>\n              {this.props.body}\n            </View>\n          )}\n        </Animated.View>\n      );\n    }\n    return (\n      <Animated.View\n        {...this._panResponder.panHandlers}\n        onLayout={e => this.onContentLayout(e)}\n        style={{\n          transform: [{ translateX: this._translateX }],\n          zIndex: 2\n        }}\n      >\n        {!this.props.list ? (\n          <ListItem list style={this.props.style}>\n            {this.props.body}\n          </ListItem>\n        ) : (\n          <View style={[{ backgroundColor: '#FFF' }, this.props.style]}>\n            {this.props.body}\n          </View>\n        )}\n      </Animated.View>\n    );\n  }\n\n  render() {\n    return (\n      <View style={this.props.style ? this.props.style : undefined}>\n        <View\n          style={[\n            styles.hidden,\n            {\n              height: this.state.hiddenHeight,\n              flex: 1,\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }\n          ]}\n        >\n          <Left style={{ width: this.props.leftOpenValue, zIndex: 1 }}>\n            {this.props.left}\n          </Left>\n          <Body style={{ flex: 0 }} />\n          <Right style={{ width: -this.props.rightOpenValue, zIndex: 1 }}>\n            {this.props.right}\n          </Right>\n        </View>\n        {this.renderMainContent()}\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    // As of RN 0.29 flex: 1 is causing all rows to be the same height\n    // flex: 1\n  },\n  hidden: {\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n};\n\nconst StyledSwipeRow = connectStyle(\n  'NativeBase.SwipeRow',\n  {},\n  mapPropsToStyleNames\n)(SwipeRow);\nexport { StyledSwipeRow as SwipeRow };\n"]},"metadata":{},"sourceType":"script"}