{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToastContainer = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/ToastContainer.js';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _commonColor = require(\"../theme/variables/commonColor\");\n\nvar _Text = require(\"./Text\");\n\nvar _Button = require(\"./Button\");\n\nvar _Toast = require(\"./Toast\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top'\n};\n\nvar ToastContainer = function (_Component) {\n  _inherits(ToastContainer, _Component);\n\n  _createClass(ToastContainer, null, [{\n    key: 'show',\n    value: function show(_ref) {\n      var config = _objectWithoutProperties(_ref, []);\n\n      this.toastInstance._root.showToast({\n        config: config\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      if (this.toastInstance._root.getModalState()) {\n        this.toastInstance._root.closeToast('functionCall');\n      }\n    }\n  }]);\n\n  function ToastContainer(props) {\n    _classCallCheck(this, ToastContainer);\n\n    var _this = _possibleConstructorReturn(this, (ToastContainer.__proto__ || Object.getPrototypeOf(ToastContainer)).call(this, props));\n\n    _this.closeModal = function (reason) {\n      _this.setState({\n        modalVisible: false\n      });\n\n      var onClose = _this.state.onClose;\n\n      if (onClose && typeof onClose === 'function') {\n        onClose(reason);\n      }\n    };\n\n    _this.state = {\n      fadeAnim: new _reactNative.Animated.Value(0),\n      pan: new _reactNative.Animated.ValueXY({\n        x: 0,\n        y: 0\n      }),\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n      modalVisible: false\n    };\n    _this.keyboardDidHide = _this.keyboardDidHide.bind(_this);\n    _this.keyboardDidShow = _this.keyboardDidShow.bind(_this);\n    _this._panResponder = _reactNative.PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, _ref2) {\n        var dx = _ref2.dx;\n\n        if (dx !== 0) {\n          _reactNative.Animated.timing(_this.state.pan, {\n            toValue: {\n              x: dx,\n              y: 0\n            },\n            duration: 100\n          }).start(function () {\n            return _this.closeToast('swipe');\n          });\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(ToastContainer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      _reactNative.Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n\n      _reactNative.Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n    }\n  }, {\n    key: 'getToastStyle',\n    value: function getToastStyle() {\n      return {\n        position: POSITION.ABSOLUTE,\n        opacity: this.state.fadeAnim,\n        width: '100%',\n        elevation: 9,\n        paddingHorizontal: _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 20 : 0,\n        top: this.state.position === POSITION.TOP ? 30 : undefined,\n        bottom: this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\n      };\n    }\n  }, {\n    key: 'getTop',\n    value: function getTop() {\n      if (_reactNative.Platform.OS === _commonColor.PLATFORM.IOS) {\n        if (this.state.isKeyboardVisible) {\n          return this.state.keyboardHeight;\n        }\n\n        return 30;\n      }\n\n      return 0;\n    }\n  }, {\n    key: 'getButtonText',\n    value: function getButtonText(buttonText) {\n      if (buttonText) {\n        if (buttonText.trim().length === 0) {\n          return undefined;\n        }\n\n        return buttonText;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: 'getModalState',\n    value: function getModalState() {\n      return this.state.modalVisible;\n    }\n  }, {\n    key: 'keyboardDidHide',\n    value: function keyboardDidHide() {\n      this.setState({\n        keyboardHeight: 0,\n        isKeyboardVisible: false\n      });\n    }\n  }, {\n    key: 'keyboardDidShow',\n    value: function keyboardDidShow(e) {\n      this.setState({\n        keyboardHeight: e.endCoordinates.height,\n        isKeyboardVisible: true\n      });\n    }\n  }, {\n    key: 'showToast',\n    value: function showToast(_ref3) {\n      var config = _ref3.config;\n      this.setState({\n        modalVisible: true,\n        text: config.text,\n        buttonText: this.getButtonText(config.buttonText),\n        type: config.type,\n        position: config.position ? config.position : POSITION.BOTTOM,\n        supportedOrientations: config.supportedOrientations,\n        style: config.style,\n        buttonTextStyle: config.buttonTextStyle,\n        buttonStyle: config.buttonStyle,\n        textStyle: config.textStyle,\n        onClose: config.onClose\n      });\n\n      if (this.closeTimeout) {\n        clearTimeout(this.closeTimeout);\n      }\n\n      if (config.duration !== 0) {\n        var duration = config.duration > 0 ? config.duration : 1500;\n        this.closeTimeout = setTimeout(this.closeToast.bind(this, 'timeout'), duration);\n      }\n\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: false\n      }).start();\n    }\n  }, {\n    key: 'closeToast',\n    value: function closeToast(reason) {\n      var _this2 = this;\n\n      clearTimeout(this.closeTimeout);\n\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: false\n      }).start(function () {\n        _this2.closeModal(reason);\n\n        _this2.state.pan.setValue({\n          x: 0,\n          y: 0\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.modalVisible) {\n        var _state$pan = this.state.pan,\n            x = _state$pan.x,\n            y = _state$pan.y;\n        return _react2.default.createElement(_reactNative.Animated.View, _extends({}, this._panResponder.panHandlers, {\n          style: [this.getToastStyle(), {\n            transform: [{\n              translateX: x\n            }, {\n              translateY: y\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          }\n        }), _react2.default.createElement(_Toast.Toast, {\n          style: [this.state.style],\n          danger: this.state.type === 'danger',\n          success: this.state.type === 'success',\n          warning: this.state.type === 'warning',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          }\n        }, _react2.default.createElement(_Text.Text, {\n          style: this.state.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          }\n        }, this.state.text), this.state.buttonText && _react2.default.createElement(_Button.Button, {\n          style: this.state.buttonStyle,\n          onPress: function onPress() {\n            return _this3.closeToast('user');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          }\n        }, _react2.default.createElement(_Text.Text, {\n          style: this.state.buttonTextStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, this.state.buttonText))));\n      }\n\n      return null;\n    }\n  }]);\n\n  return ToastContainer;\n}(_react.Component);\n\nToastContainer.propTypes = _extends({}, _reactNative.ViewPropTypes);\nvar StyledToastContainer = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.ToastContainer', {}, _mapPropsToStyleNames2.default)(ToastContainer);\nexports.ToastContainer = StyledToastContainer;","map":{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["POSITION","ABSOLUTE","BOTTOM","TOP","ToastContainer","Component","config","fadeAnim","Animated","pan","x","y","keyboardHeight","isKeyboardVisible","modalVisible","PanResponder","onMoveShouldSetPanResponderCapture","onPanResponderRelease","dx","toValue","duration","Keyboard","position","opacity","width","elevation","paddingHorizontal","Platform","PLATFORM","top","bottom","buttonText","e","text","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","onClose","clearTimeout","setTimeout","useNativeDriver","reason","transform","translateX","translateY","ViewPropTypes","StyledToastContainer","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react';\nimport {\n  Keyboard,\n  Platform,\n  Animated,\n  ViewPropTypes,\n  PanResponder\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport { PLATFORM } from '../theme/variables/commonColor';\n\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { Toast } from './Toast';\n\nconst POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top'\n};\n\nclass ToastContainer extends Component {\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  static hide() {\n    if (this.toastInstance._root.getModalState()) {\n      this.toastInstance._root.closeToast('functionCall');\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fadeAnim: new Animated.Value(0),\n      pan: new Animated.ValueXY({ x: 0, y: 0 }),\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n      modalVisible: false\n    };\n\n    this.keyboardDidHide = this.keyboardDidHide.bind(this);\n    this.keyboardDidShow = this.keyboardDidShow.bind(this);\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderRelease: (evt, { dx }) => {\n        if (dx !== 0) {\n          Animated.timing(this.state.pan, {\n            toValue: { x: dx, y: 0 },\n            duration: 100\n          }).start(() => this.closeToast('swipe'));\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n    Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n  }\n\n  getToastStyle() {\n    return {\n      position: POSITION.ABSOLUTE,\n      opacity: this.state.fadeAnim,\n      width: '100%',\n      elevation: 9,\n      paddingHorizontal: Platform.OS === PLATFORM.IOS ? 20 : 0,\n      top: this.state.position === POSITION.TOP ? 30 : undefined,\n      bottom:\n        this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\n    };\n  }\n\n  getTop() {\n    if (Platform.OS === PLATFORM.IOS) {\n      if (this.state.isKeyboardVisible) {\n        return this.state.keyboardHeight;\n      }\n      return 30;\n    }\n    return 0;\n  }\n\n  getButtonText(buttonText) {\n    if (buttonText) {\n      if (buttonText.trim().length === 0) {\n        return undefined;\n      }\n      return buttonText;\n    }\n    return undefined;\n  }\n  getModalState() {\n    return this.state.modalVisible;\n  }\n\n  static toastInstance;\n\n  keyboardDidHide() {\n    this.setState({\n      keyboardHeight: 0,\n      isKeyboardVisible: false\n    });\n  }\n\n  keyboardDidShow(e) {\n    this.setState({\n      keyboardHeight: e.endCoordinates.height,\n      isKeyboardVisible: true\n    });\n  }\n\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: this.getButtonText(config.buttonText),\n      type: config.type,\n      position: config.position ? config.position : POSITION.BOTTOM,\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle,\n      onClose: config.onClose\n    });\n    // If we have a toast already open, cut off its close timeout so that it won't affect *this* toast.\n    if (this.closeTimeout) {\n      clearTimeout(this.closeTimeout);\n    }\n    // Set the toast to close after the duration.\n    if (config.duration !== 0) {\n      const duration = config.duration > 0 ? config.duration : 1500;\n      this.closeTimeout = setTimeout(\n        this.closeToast.bind(this, 'timeout'),\n        duration\n      );\n    }\n    // Fade the toast in now.\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: false\n    }).start();\n  }\n  closeModal = (reason) => {\n    this.setState({\n      modalVisible: false\n    });\n    const { onClose } = this.state;\n    if (onClose && typeof onClose === 'function') {\n      onClose(reason);\n    }\n  }\n  closeToast(reason) {\n    clearTimeout(this.closeTimeout);\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: false\n    }).start(() => {\n      this.closeModal(reason);\n      this.state.pan.setValue({ x: 0, y: 0 });\n    });\n  }\n\n  render() {\n    if (this.state.modalVisible) {\n      const { x, y } = this.state.pan;\n      return (\n        <Animated.View\n          {...this._panResponder.panHandlers}\n          style={[\n            this.getToastStyle(),\n            { transform: [{ translateX: x }, { translateY: y }] }\n          ]}\n        >\n          <Toast\n            style={[this.state.style]}\n            danger={this.state.type === 'danger'}\n            success={this.state.type === 'success'}\n            warning={this.state.type === 'warning'}\n          >\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {this.state.buttonText && (\n              <Button\n                style={this.state.buttonStyle}\n                onPress={() => this.closeToast('user')}\n              >\n                <Text style={this.state.buttonTextStyle}>\n                  {this.state.buttonText}\n                </Text>\n              </Button>\n            )}\n          </Toast>\n        </Animated.View>\n      );\n    }\n    return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes\n};\n\nconst StyledToastContainer = connectStyle(\n  'NativeBase.ToastContainer',\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]},"metadata":{},"sourceType":"script"}